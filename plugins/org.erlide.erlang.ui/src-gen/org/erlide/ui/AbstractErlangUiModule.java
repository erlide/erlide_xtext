/*
 * generated by Xtext
 */
package org.erlide.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.ui.DefaultUiModule;

/**
 * Manual modifications go to {org.erlide.ui.ErlangUiModule}
 */
@SuppressWarnings("all")
public abstract class AbstractErlangUiModule extends DefaultUiModule {

    public AbstractErlangUiModule(final AbstractUIPlugin plugin) {
        super(plugin);
    }

    // contributed by org.eclipse.xtext.ui.generator.ImplicitUiFragment
    public com.google.inject.Provider<org.eclipse.xtext.resource.containers.IAllContainersState> provideIAllContainersState() {
        return org.eclipse.xtext.ui.shared.Access.getJavaProjectsState();
    }

    // contributed by
    // org.eclipse.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment
    public Class<? extends org.eclipse.xtext.ui.editor.contentassist.IProposalConflictHelper> bindIProposalConflictHelper() {
        return org.eclipse.xtext.ui.editor.contentassist.antlr.AntlrProposalConflictHelper.class;
    }

    // contributed by
    // org.eclipse.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment
    public void configureHighlightingLexer(final com.google.inject.Binder binder) {
        binder.bind(org.eclipse.xtext.parser.antlr.Lexer.class)
                .annotatedWith(
                        com.google.inject.name.Names
                                .named(org.eclipse.xtext.ui.LexerUIBindings.HIGHLIGHTING))
                .to(org.erlide.parser.antlr.internal.InternalErlangLexer.class);
    }

    // contributed by
    // org.eclipse.xtext.generator.parser.antlr.XtextAntlrGeneratorFragment
    public void configureHighlightingTokenDefProvider(
            final com.google.inject.Binder binder) {
        binder.bind(org.eclipse.xtext.parser.antlr.ITokenDefProvider.class)
                .annotatedWith(
                        com.google.inject.name.Names
                                .named(org.eclipse.xtext.ui.LexerUIBindings.HIGHLIGHTING))
                .to(org.eclipse.xtext.parser.antlr.AntlrTokenDefProvider.class);
    }

    // contributed by
    // org.eclipse.xtext.generator.exporting.QualifiedNamesFragment
    public Class<? extends org.eclipse.xtext.ui.editor.contentassist.PrefixMatcher> bindPrefixMatcher() {
        return org.eclipse.xtext.ui.editor.contentassist.FQNPrefixMatcher.class;
    }

    // contributed by
    // org.eclipse.xtext.generator.exporting.QualifiedNamesFragment
    public Class<? extends org.eclipse.xtext.ui.refactoring.IDependentElementsCalculator> bindIDependentElementsCalculator() {
        return org.eclipse.xtext.ui.refactoring.impl.DefaultDependentElementsCalculator.class;
    }

    // contributed by
    // org.eclipse.xtext.generator.builder.BuilderIntegrationFragment
    public void configureIResourceDescriptionsBuilderScope(
            final com.google.inject.Binder binder) {
        binder.bind(org.eclipse.xtext.resource.IResourceDescriptions.class)
                .annotatedWith(
                        com.google.inject.name.Names
                                .named(org.eclipse.xtext.resource.impl.ResourceDescriptionsProvider.NAMED_BUILDER_SCOPE))
                .to(org.eclipse.xtext.builder.clustering.CurrentDescriptions.ResourceSetAware.class);
    }

    // contributed by
    // org.eclipse.xtext.generator.builder.BuilderIntegrationFragment
    public Class<? extends org.eclipse.xtext.ui.editor.IXtextEditorCallback> bindIXtextEditorCallback() {
        return org.eclipse.xtext.builder.nature.NatureAddingEditorCallback.class;
    }

    // contributed by
    // org.eclipse.xtext.generator.builder.BuilderIntegrationFragment
    public void configureIResourceDescriptionsPersisted(
            final com.google.inject.Binder binder) {
        binder.bind(org.eclipse.xtext.resource.IResourceDescriptions.class)
                .annotatedWith(
                        com.google.inject.name.Names
                                .named(org.eclipse.xtext.builder.impl.PersistentDataAwareDirtyResource.PERSISTED_DESCRIPTIONS))
                .to(org.eclipse.xtext.builder.builderState.IBuilderState.class);
    }

    // contributed by
    // org.eclipse.xtext.generator.builder.BuilderIntegrationFragment
    public Class<? extends org.eclipse.xtext.ui.editor.DocumentBasedDirtyResource> bindDocumentBasedDirtyResource() {
        return org.eclipse.xtext.builder.impl.PersistentDataAwareDirtyResource.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.labeling.LabelProviderFragment
    public Class<? extends org.eclipse.jface.viewers.ILabelProvider> bindILabelProvider() {
        return org.erlide.ui.labeling.ErlangLabelProvider.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.labeling.LabelProviderFragment
    public void configureResourceUIServiceLabelProvider(
            final com.google.inject.Binder binder) {
        binder.bind(org.eclipse.jface.viewers.ILabelProvider.class)
                .annotatedWith(
                        org.eclipse.xtext.ui.resource.ResourceServiceDescriptionLabelProvider.class)
                .to(org.erlide.ui.labeling.ErlangDescriptionLabelProvider.class);
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.outline.OutlineTreeProviderFragment
    public Class<? extends org.eclipse.xtext.ui.editor.outline.IOutlineTreeProvider> bindIOutlineTreeProvider() {
        if (System.getProperty("erlide.developer") != null) {
            return org.erlide.ui.outline.ErlangDebugOutlineTreeProvider.class;
        } else {
            return org.erlide.ui.outline.ErlangOutlineTreeProvider.class;
        }
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.outline.OutlineTreeProviderFragment
    public Class<? extends org.eclipse.xtext.ui.editor.outline.impl.IOutlineTreeStructureProvider> bindIOutlineTreeStructureProvider() {
        if (System.getProperty("erlide.developer") != null) {
            return org.erlide.ui.outline.ErlangDebugOutlineTreeProvider.class;
        } else {
            return org.erlide.ui.outline.ErlangOutlineTreeProvider.class;
        }
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.quickfix.QuickfixProviderFragment
    public Class<? extends org.eclipse.xtext.ui.editor.quickfix.IssueResolutionProvider> bindIssueResolutionProvider() {
        return org.erlide.ui.quickfix.ErlangQuickfixProvider.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.contentAssist.JavaBasedContentAssistFragment
    public Class<? extends org.eclipse.xtext.ui.editor.contentassist.IContentProposalProvider> bindIContentProposalProvider() {
        return org.erlide.ui.contentassist.ErlangProposalProvider.class;
    }

    // contributed by
    // org.eclipse.xtext.generator.parser.antlr.XtextAntlrUiGeneratorFragment
    public Class<? extends org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext.Factory> bindContentAssistContext$Factory() {
        return org.eclipse.xtext.ui.editor.contentassist.antlr.ParserBasedContentAssistContextFactory.class;
    }

    // contributed by
    // org.eclipse.xtext.generator.parser.antlr.XtextAntlrUiGeneratorFragment
    public Class<? extends org.eclipse.xtext.ui.editor.contentassist.antlr.IContentAssistParser> bindIContentAssistParser() {
        return org.erlide.ui.contentassist.antlr.ErlangParser.class;
    }

    // contributed by
    // org.eclipse.xtext.generator.parser.antlr.XtextAntlrUiGeneratorFragment
    public void configureContentAssistLexerProvider(
            final com.google.inject.Binder binder) {
        binder.bind(
                org.erlide.ui.contentassist.antlr.internal.InternalErlangLexer.class)
                .toProvider(
                        org.eclipse.xtext.parser.antlr.LexerProvider
                                .create(org.erlide.ui.contentassist.antlr.internal.InternalErlangLexer.class));
    }

    // contributed by
    // org.eclipse.xtext.generator.parser.antlr.XtextAntlrUiGeneratorFragment
    public void configureContentAssistLexer(
            final com.google.inject.Binder binder) {
        binder.bind(
                org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer.class)
                .annotatedWith(
                        com.google.inject.name.Names
                                .named(org.eclipse.xtext.ui.LexerUIBindings.CONTENT_ASSIST))
                .to(org.erlide.ui.contentassist.antlr.internal.InternalErlangLexer.class);
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.templates.CodetemplatesGeneratorFragment
    public com.google.inject.Provider<org.eclipse.xtext.ui.codetemplates.ui.preferences.TemplatesLanguageConfiguration> provideTemplatesLanguageConfiguration() {
        return org.eclipse.xtext.ui.codetemplates.ui.AccessibleCodetemplatesActivator
                .getTemplatesLanguageConfigurationProvider();
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.templates.CodetemplatesGeneratorFragment
    public com.google.inject.Provider<org.eclipse.xtext.ui.codetemplates.ui.registry.LanguageRegistry> provideLanguageRegistry() {
        return org.eclipse.xtext.ui.codetemplates.ui.AccessibleCodetemplatesActivator
                .getLanguageRegistry();
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.templates.CodetemplatesGeneratorFragment
    @org.eclipse.xtext.service.SingletonBinding(eager = true)
    public Class<? extends org.eclipse.xtext.ui.codetemplates.ui.registry.LanguageRegistrar> bindLanguageRegistrar() {
        return org.eclipse.xtext.ui.codetemplates.ui.registry.LanguageRegistrar.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.templates.CodetemplatesGeneratorFragment
    public Class<? extends org.eclipse.xtext.ui.editor.templates.XtextTemplatePreferencePage> bindXtextTemplatePreferencePage() {
        return org.eclipse.xtext.ui.codetemplates.ui.preferences.AdvancedTemplatesPreferencePage.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.templates.CodetemplatesGeneratorFragment
    public Class<? extends org.eclipse.xtext.ui.codetemplates.ui.partialEditing.IPartialContentAssistParser> bindIPartialContentAssistParser() {
        return org.erlide.ui.contentassist.antlr.PartialErlangContentAssistParser.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.refactoring.RefactorElementNameFragment
    public Class<? extends org.eclipse.xtext.ui.refactoring.IRenameStrategy> bindIRenameStrategy() {
        return org.eclipse.xtext.ui.refactoring.impl.DefaultRenameStrategy.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.refactoring.RefactorElementNameFragment
    public Class<? extends org.eclipse.xtext.ui.refactoring.IReferenceUpdater> bindIReferenceUpdater() {
        return org.eclipse.xtext.ui.refactoring.impl.DefaultReferenceUpdater.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.refactoring.RefactorElementNameFragment
    public void configureIPreferenceStoreInitializer(
            final com.google.inject.Binder binder) {
        binder.bind(
                org.eclipse.xtext.ui.editor.preferences.IPreferenceStoreInitializer.class)
                .annotatedWith(
                        com.google.inject.name.Names
                                .named("RefactoringPreferences"))
                .to(org.eclipse.xtext.ui.refactoring.ui.RefactoringPreferences.Initializer.class);
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.refactoring.RefactorElementNameFragment
    public Class<? extends org.eclipse.xtext.ui.refactoring.IRenameRefactoringProvider> bindIRenameRefactoringProvider() {
        return org.eclipse.xtext.ui.refactoring.impl.DefaultRenameRefactoringProvider.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.refactoring.RefactorElementNameFragment
    public Class<? extends org.eclipse.xtext.ui.refactoring.ui.IRenameSupport.Factory> bindIRenameSupport$Factory() {
        return org.eclipse.xtext.ui.refactoring.ui.DefaultRenameSupport.Factory.class;
    }

    // contributed by
    // org.eclipse.xtext.ui.generator.refactoring.RefactorElementNameFragment
    public Class<? extends org.eclipse.xtext.ui.refactoring.ui.IRenameElementHandler> bindIRenameElementHandler() {
        return org.eclipse.xtext.ui.refactoring.ui.DefaultRenameElementHandler.class;
    }

    // contributed by org.eclipse.xtext.ui.generator.compare.CompareFragment
    public Class<? extends org.eclipse.compare.IViewerCreator> bindIViewerCreator() {
        return org.eclipse.xtext.ui.compare.DefaultViewerCreator.class;
    }

}
