/*
* generated by Xtext
*/
grammar InternalErlang;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.erlide.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.erlide.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.erlide.services.ErlangGrammarAccess;

}

@parser::members {
 
 	private ErlangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ErlangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getFormsAssignment()); }
(rule__Module__FormsAssignment)*
{ after(grammarAccess.getModuleAccess().getFormsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForm
entryRuleForm 
:
{ before(grammarAccess.getFormRule()); }
	 ruleForm
{ after(grammarAccess.getFormRule()); } 
	 EOF 
;

// Rule Form
ruleForm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormAccess().getAlternatives()); }
(rule__Form__Alternatives)
{ after(grammarAccess.getFormAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalFormBlock
entryRuleConditionalFormBlock 
:
{ before(grammarAccess.getConditionalFormBlockRule()); }
	 ruleConditionalFormBlock
{ after(grammarAccess.getConditionalFormBlockRule()); } 
	 EOF 
;

// Rule ConditionalFormBlock
ruleConditionalFormBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getGroup()); }
(rule__ConditionalFormBlock__Group__0)
{ after(grammarAccess.getConditionalFormBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
(rule__Attribute__Alternatives)
{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDefineAttribute
entryRuleDefineAttribute 
:
{ before(grammarAccess.getDefineAttributeRule()); }
	 ruleDefineAttribute
{ after(grammarAccess.getDefineAttributeRule()); } 
	 EOF 
;

// Rule DefineAttribute
ruleDefineAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineAttributeAccess().getGroup()); }
(rule__DefineAttribute__Group__0)
{ after(grammarAccess.getDefineAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUndefAttribute
entryRuleUndefAttribute 
:
{ before(grammarAccess.getUndefAttributeRule()); }
	 ruleUndefAttribute
{ after(grammarAccess.getUndefAttributeRule()); } 
	 EOF 
;

// Rule UndefAttribute
ruleUndefAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUndefAttributeAccess().getGroup()); }
(rule__UndefAttribute__Group__0)
{ after(grammarAccess.getUndefAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfdefAttribute
entryRuleIfdefAttribute 
:
{ before(grammarAccess.getIfdefAttributeRule()); }
	 ruleIfdefAttribute
{ after(grammarAccess.getIfdefAttributeRule()); } 
	 EOF 
;

// Rule IfdefAttribute
ruleIfdefAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfdefAttributeAccess().getGroup()); }
(rule__IfdefAttribute__Group__0)
{ after(grammarAccess.getIfdefAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEndifAttribute
entryRuleEndifAttribute 
:
{ before(grammarAccess.getEndifAttributeRule()); }
	 ruleEndifAttribute
{ after(grammarAccess.getEndifAttributeRule()); } 
	 EOF 
;

// Rule EndifAttribute
ruleEndifAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndifAttributeAccess().getGroup()); }
(rule__EndifAttribute__Group__0)
{ after(grammarAccess.getEndifAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElseAttribute
entryRuleElseAttribute 
:
{ before(grammarAccess.getElseAttributeRule()); }
	 ruleElseAttribute
{ after(grammarAccess.getElseAttributeRule()); } 
	 EOF 
;

// Rule ElseAttribute
ruleElseAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElseAttributeAccess().getGroup()); }
(rule__ElseAttribute__Group__0)
{ after(grammarAccess.getElseAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractIncludeAttribute
entryRuleAbstractIncludeAttribute 
:
{ before(grammarAccess.getAbstractIncludeAttributeRule()); }
	 ruleAbstractIncludeAttribute
{ after(grammarAccess.getAbstractIncludeAttributeRule()); } 
	 EOF 
;

// Rule AbstractIncludeAttribute
ruleAbstractIncludeAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractIncludeAttributeAccess().getAlternatives()); }
(rule__AbstractIncludeAttribute__Alternatives)
{ after(grammarAccess.getAbstractIncludeAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludeAttribute
entryRuleIncludeAttribute 
:
{ before(grammarAccess.getIncludeAttributeRule()); }
	 ruleIncludeAttribute
{ after(grammarAccess.getIncludeAttributeRule()); } 
	 EOF 
;

// Rule IncludeAttribute
ruleIncludeAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeAttributeAccess().getGroup()); }
(rule__IncludeAttribute__Group__0)
{ after(grammarAccess.getIncludeAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludeLibAttribute
entryRuleIncludeLibAttribute 
:
{ before(grammarAccess.getIncludeLibAttributeRule()); }
	 ruleIncludeLibAttribute
{ after(grammarAccess.getIncludeLibAttributeRule()); } 
	 EOF 
;

// Rule IncludeLibAttribute
ruleIncludeLibAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getGroup()); }
(rule__IncludeLibAttribute__Group__0)
{ after(grammarAccess.getIncludeLibAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileAttribute
entryRuleFileAttribute 
:
{ before(grammarAccess.getFileAttributeRule()); }
	 ruleFileAttribute
{ after(grammarAccess.getFileAttributeRule()); } 
	 EOF 
;

// Rule FileAttribute
ruleFileAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileAttributeAccess().getGroup()); }
(rule__FileAttribute__Group__0)
{ after(grammarAccess.getFileAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleAttribute
entryRuleModuleAttribute 
:
{ before(grammarAccess.getModuleAttributeRule()); }
	 ruleModuleAttribute
{ after(grammarAccess.getModuleAttributeRule()); } 
	 EOF 
;

// Rule ModuleAttribute
ruleModuleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAttributeAccess().getGroup()); }
(rule__ModuleAttribute__Group__0)
{ after(grammarAccess.getModuleAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordAttribute
entryRuleRecordAttribute 
:
{ before(grammarAccess.getRecordAttributeRule()); }
	 ruleRecordAttribute
{ after(grammarAccess.getRecordAttributeRule()); } 
	 EOF 
;

// Rule RecordAttribute
ruleRecordAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordAttributeAccess().getGroup()); }
(rule__RecordAttribute__Group__0)
{ after(grammarAccess.getRecordAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExportAttribute
entryRuleExportAttribute 
:
{ before(grammarAccess.getExportAttributeRule()); }
	 ruleExportAttribute
{ after(grammarAccess.getExportAttributeRule()); } 
	 EOF 
;

// Rule ExportAttribute
ruleExportAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportAttributeAccess().getGroup()); }
(rule__ExportAttribute__Group__0)
{ after(grammarAccess.getExportAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportAttribute
entryRuleImportAttribute 
:
{ before(grammarAccess.getImportAttributeRule()); }
	 ruleImportAttribute
{ after(grammarAccess.getImportAttributeRule()); } 
	 EOF 
;

// Rule ImportAttribute
ruleImportAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAttributeAccess().getGroup()); }
(rule__ImportAttribute__Group__0)
{ after(grammarAccess.getImportAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompileAttribute
entryRuleCompileAttribute 
:
{ before(grammarAccess.getCompileAttributeRule()); }
	 ruleCompileAttribute
{ after(grammarAccess.getCompileAttributeRule()); } 
	 EOF 
;

// Rule CompileAttribute
ruleCompileAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompileAttributeAccess().getGroup()); }
(rule__CompileAttribute__Group__0)
{ after(grammarAccess.getCompileAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractTypeAttribute
entryRuleAbstractTypeAttribute 
:
{ before(grammarAccess.getAbstractTypeAttributeRule()); }
	 ruleAbstractTypeAttribute
{ after(grammarAccess.getAbstractTypeAttributeRule()); } 
	 EOF 
;

// Rule AbstractTypeAttribute
ruleAbstractTypeAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractTypeAttributeAccess().getAlternatives()); }
(rule__AbstractTypeAttribute__Alternatives)
{ after(grammarAccess.getAbstractTypeAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecAttribute
entryRuleSpecAttribute 
:
{ before(grammarAccess.getSpecAttributeRule()); }
	 ruleSpecAttribute
{ after(grammarAccess.getSpecAttributeRule()); } 
	 EOF 
;

// Rule SpecAttribute
ruleSpecAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecAttributeAccess().getGroup()); }
(rule__SpecAttribute__Group__0)
{ after(grammarAccess.getSpecAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeAttribute
entryRuleTypeAttribute 
:
{ before(grammarAccess.getTypeAttributeRule()); }
	 ruleTypeAttribute
{ after(grammarAccess.getTypeAttributeRule()); } 
	 EOF 
;

// Rule TypeAttribute
ruleTypeAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAttributeAccess().getGroup()); }
(rule__TypeAttribute__Group__0)
{ after(grammarAccess.getTypeAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCustomAttribute
entryRuleCustomAttribute 
:
{ before(grammarAccess.getCustomAttributeRule()); }
	 ruleCustomAttribute
{ after(grammarAccess.getCustomAttributeRule()); } 
	 EOF 
;

// Rule CustomAttribute
ruleCustomAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCustomAttributeAccess().getGroup()); }
(rule__CustomAttribute__Group__0)
{ after(grammarAccess.getCustomAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionClause
entryRuleFunctionClause 
:
{ before(grammarAccess.getFunctionClauseRule()); }
	 ruleFunctionClause
{ after(grammarAccess.getFunctionClauseRule()); } 
	 EOF 
;

// Rule FunctionClause
ruleFunctionClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionClauseAccess().getGroup()); }
(rule__FunctionClause__Group__0)
{ after(grammarAccess.getFunctionClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuard
entryRuleGuard 
:
{ before(grammarAccess.getGuardRule()); }
	 ruleGuard
{ after(grammarAccess.getGuardRule()); } 
	 EOF 
;

// Rule Guard
ruleGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuardAccess().getGroup()); }
(rule__Guard__Group__0)
{ after(grammarAccess.getGuardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressions
entryRuleExpressions 
:
{ before(grammarAccess.getExpressionsRule()); }
	 ruleExpressions
{ after(grammarAccess.getExpressionsRule()); } 
	 EOF 
;

// Rule Expressions
ruleExpressions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionsAccess().getGroup()); }
(rule__Expressions__Group__0)
{ after(grammarAccess.getExpressionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLExpression
entryRuleLExpression 
:
{ before(grammarAccess.getLExpressionRule()); }
	 ruleLExpression
{ after(grammarAccess.getLExpressionRule()); } 
	 EOF 
;

// Rule LExpression
ruleLExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLExpressionAccess().getAlternatives()); }
(rule__LExpression__Alternatives)
{ after(grammarAccess.getLExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLineExpr
entryRuleLineExpr 
:
{ before(grammarAccess.getLineExprRule()); }
	 ruleLineExpr
{ after(grammarAccess.getLineExprRule()); } 
	 EOF 
;

// Rule LineExpr
ruleLineExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLineExprAccess().getGroup()); }
(rule__LineExpr__Group__0)
{ after(grammarAccess.getLineExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr100
entryRuleExpr100 
:
{ before(grammarAccess.getExpr100Rule()); }
	 ruleExpr100
{ after(grammarAccess.getExpr100Rule()); } 
	 EOF 
;

// Rule Expr100
ruleExpr100
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr100Access().getGroup()); }
(rule__Expr100__Group__0)
{ after(grammarAccess.getExpr100Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr150
entryRuleExpr150 
:
{ before(grammarAccess.getExpr150Rule()); }
	 ruleExpr150
{ after(grammarAccess.getExpr150Rule()); } 
	 EOF 
;

// Rule Expr150
ruleExpr150
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr150Access().getGroup()); }
(rule__Expr150__Group__0)
{ after(grammarAccess.getExpr150Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr160
entryRuleExpr160 
:
{ before(grammarAccess.getExpr160Rule()); }
	 ruleExpr160
{ after(grammarAccess.getExpr160Rule()); } 
	 EOF 
;

// Rule Expr160
ruleExpr160
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr160Access().getGroup()); }
(rule__Expr160__Group__0)
{ after(grammarAccess.getExpr160Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr200
entryRuleExpr200 
:
{ before(grammarAccess.getExpr200Rule()); }
	 ruleExpr200
{ after(grammarAccess.getExpr200Rule()); } 
	 EOF 
;

// Rule Expr200
ruleExpr200
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr200Access().getGroup()); }
(rule__Expr200__Group__0)
{ after(grammarAccess.getExpr200Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr300
entryRuleExpr300 
:
{ before(grammarAccess.getExpr300Rule()); }
	 ruleExpr300
{ after(grammarAccess.getExpr300Rule()); } 
	 EOF 
;

// Rule Expr300
ruleExpr300
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr300Access().getGroup()); }
(rule__Expr300__Group__0)
{ after(grammarAccess.getExpr300Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr400
entryRuleExpr400 
:
{ before(grammarAccess.getExpr400Rule()); }
	 ruleExpr400
{ after(grammarAccess.getExpr400Rule()); } 
	 EOF 
;

// Rule Expr400
ruleExpr400
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr400Access().getGroup()); }
(rule__Expr400__Group__0)
{ after(grammarAccess.getExpr400Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr500
entryRuleExpr500 
:
{ before(grammarAccess.getExpr500Rule()); }
	 ruleExpr500
{ after(grammarAccess.getExpr500Rule()); } 
	 EOF 
;

// Rule Expr500
ruleExpr500
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr500Access().getGroup()); }
(rule__Expr500__Group__0)
{ after(grammarAccess.getExpr500Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr 
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
(rule__UnaryExpr__Alternatives)
{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr700
entryRuleExpr700 
:
{ before(grammarAccess.getExpr700Rule()); }
	 ruleExpr700
{ after(grammarAccess.getExpr700Rule()); } 
	 EOF 
;

// Rule Expr700
ruleExpr700
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr700Access().getGroup()); }
(rule__Expr700__Group__0)
{ after(grammarAccess.getExpr700Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr800
entryRuleExpr800 
:
{ before(grammarAccess.getExpr800Rule()); }
	 ruleExpr800
{ after(grammarAccess.getExpr800Rule()); } 
	 EOF 
;

// Rule Expr800
ruleExpr800
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpr800Access().getGroup()); }
(rule__Expr800__Group__0)
{ after(grammarAccess.getExpr800Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprMax
entryRuleExprMax 
:
{ before(grammarAccess.getExprMaxRule()); }
	 ruleExprMax
{ after(grammarAccess.getExprMaxRule()); } 
	 EOF 
;

// Rule ExprMax
ruleExprMax
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprMaxAccess().getAlternatives()); }
(rule__ExprMax__Alternatives)
{ after(grammarAccess.getExprMaxAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTermExpression
entryRuleTermExpression 
:
{ before(grammarAccess.getTermExpressionRule()); }
	 ruleTermExpression
{ after(grammarAccess.getTermExpressionRule()); } 
	 EOF 
;

// Rule TermExpression
ruleTermExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermExpressionAccess().getAlternatives()); }
(rule__TermExpression__Alternatives)
{ after(grammarAccess.getTermExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacroCall
entryRuleMacroCall 
:
{ before(grammarAccess.getMacroCallRule()); }
	 ruleMacroCall
{ after(grammarAccess.getMacroCallRule()); } 
	 EOF 
;

// Rule MacroCall
ruleMacroCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroCallAccess().getGroup()); }
(rule__MacroCall__Group__0)
{ after(grammarAccess.getMacroCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordExpr
entryRuleRecordExpr 
:
{ before(grammarAccess.getRecordExprRule()); }
	 ruleRecordExpr
{ after(grammarAccess.getRecordExprRule()); } 
	 EOF 
;

// Rule RecordExpr
ruleRecordExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordExprAccess().getGroup()); }
(rule__RecordExpr__Group__0)
{ after(grammarAccess.getRecordExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQueryExpr
entryRuleQueryExpr 
:
{ before(grammarAccess.getQueryExprRule()); }
	 ruleQueryExpr
{ after(grammarAccess.getQueryExprRule()); } 
	 EOF 
;

// Rule QueryExpr
ruleQueryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQueryExprAccess().getGroup()); }
(rule__QueryExpr__Group__0)
{ after(grammarAccess.getQueryExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondExpr
entryRuleCondExpr 
:
{ before(grammarAccess.getCondExprRule()); }
	 ruleCondExpr
{ after(grammarAccess.getCondExprRule()); } 
	 EOF 
;

// Rule CondExpr
ruleCondExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCondExprAccess().getGroup()); }
(rule__CondExpr__Group__0)
{ after(grammarAccess.getCondExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetExpr
entryRuleLetExpr 
:
{ before(grammarAccess.getLetExprRule()); }
	 ruleLetExpr
{ after(grammarAccess.getLetExprRule()); } 
	 EOF 
;

// Rule LetExpr
ruleLetExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetExprAccess().getGroup()); }
(rule__LetExpr__Group__0)
{ after(grammarAccess.getLetExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordTuple
entryRuleRecordTuple 
:
{ before(grammarAccess.getRecordTupleRule()); }
	 ruleRecordTuple
{ after(grammarAccess.getRecordTupleRule()); } 
	 EOF 
;

// Rule RecordTuple
ruleRecordTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordTupleAccess().getGroup()); }
(rule__RecordTuple__Group__0)
{ after(grammarAccess.getRecordTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordFieldDef
entryRuleRecordFieldDef 
:
{ before(grammarAccess.getRecordFieldDefRule()); }
	 ruleRecordFieldDef
{ after(grammarAccess.getRecordFieldDefRule()); } 
	 EOF 
;

// Rule RecordFieldDef
ruleRecordFieldDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordFieldDefAccess().getGroup()); }
(rule__RecordFieldDef__Group__0)
{ after(grammarAccess.getRecordFieldDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordField
entryRuleRecordField 
:
{ before(grammarAccess.getRecordFieldRule()); }
	 ruleRecordField
{ after(grammarAccess.getRecordFieldRule()); } 
	 EOF 
;

// Rule RecordField
ruleRecordField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordFieldAccess().getGroup()); }
(rule__RecordField__Group__0)
{ after(grammarAccess.getRecordFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralExpressionNoNumber
entryRuleLiteralExpressionNoNumber 
:
{ before(grammarAccess.getLiteralExpressionNoNumberRule()); }
	 ruleLiteralExpressionNoNumber
{ after(grammarAccess.getLiteralExpressionNoNumberRule()); } 
	 EOF 
;

// Rule LiteralExpressionNoNumber
ruleLiteralExpressionNoNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getAlternatives()); }
(rule__LiteralExpressionNoNumber__Alternatives)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression 
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
(rule__LiteralExpression__Alternatives)
{ after(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePatternExpression
entryRulePatternExpression 
:
{ before(grammarAccess.getPatternExpressionRule()); }
	 rulePatternExpression
{ after(grammarAccess.getPatternExpressionRule()); } 
	 EOF 
;

// Rule PatternExpression
rulePatternExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternExpressionAccess().getGroup()); }
(rule__PatternExpression__Group__0)
{ after(grammarAccess.getPatternExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleErlString
entryRuleErlString 
:
{ before(grammarAccess.getErlStringRule()); }
	 ruleErlString
{ after(grammarAccess.getErlStringRule()); } 
	 EOF 
;

// Rule ErlString
ruleErlString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getErlStringAccess().getGroup()); }
(rule__ErlString__Group__0)
{ after(grammarAccess.getErlStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExpr
entryRuleIfExpr 
:
{ before(grammarAccess.getIfExprRule()); }
	 ruleIfExpr
{ after(grammarAccess.getIfExprRule()); } 
	 EOF 
;

// Rule IfExpr
ruleIfExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfExprAccess().getGroup()); }
(rule__IfExpr__Group__0)
{ after(grammarAccess.getIfExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfClause
entryRuleIfClause 
:
{ before(grammarAccess.getIfClauseRule()); }
	 ruleIfClause
{ after(grammarAccess.getIfClauseRule()); } 
	 EOF 
;

// Rule IfClause
ruleIfClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfClauseAccess().getGroup()); }
(rule__IfClause__Group__0)
{ after(grammarAccess.getIfClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaseExpr
entryRuleCaseExpr 
:
{ before(grammarAccess.getCaseExprRule()); }
	 ruleCaseExpr
{ after(grammarAccess.getCaseExprRule()); } 
	 EOF 
;

// Rule CaseExpr
ruleCaseExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseExprAccess().getGroup()); }
(rule__CaseExpr__Group__0)
{ after(grammarAccess.getCaseExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCrClause
entryRuleCrClause 
:
{ before(grammarAccess.getCrClauseRule()); }
	 ruleCrClause
{ after(grammarAccess.getCrClauseRule()); } 
	 EOF 
;

// Rule CrClause
ruleCrClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCrClauseAccess().getGroup()); }
(rule__CrClause__Group__0)
{ after(grammarAccess.getCrClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReceiveExpr
entryRuleReceiveExpr 
:
{ before(grammarAccess.getReceiveExprRule()); }
	 ruleReceiveExpr
{ after(grammarAccess.getReceiveExprRule()); } 
	 EOF 
;

// Rule ReceiveExpr
ruleReceiveExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReceiveExprAccess().getGroup()); }
(rule__ReceiveExpr__Group__0)
{ after(grammarAccess.getReceiveExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunExpr
entryRuleFunExpr 
:
{ before(grammarAccess.getFunExprRule()); }
	 ruleFunExpr
{ after(grammarAccess.getFunExprRule()); } 
	 EOF 
;

// Rule FunExpr
ruleFunExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunExprAccess().getGroup()); }
(rule__FunExpr__Group__0)
{ after(grammarAccess.getFunExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunRef
entryRuleFunRef 
:
{ before(grammarAccess.getFunRefRule()); }
	 ruleFunRef
{ after(grammarAccess.getFunRefRule()); } 
	 EOF 
;

// Rule FunRef
ruleFunRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunRefAccess().getGroup()); }
(rule__FunRef__Group__0)
{ after(grammarAccess.getFunRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInlineFun
entryRuleInlineFun 
:
{ before(grammarAccess.getInlineFunRule()); }
	 ruleInlineFun
{ after(grammarAccess.getInlineFunRule()); } 
	 EOF 
;

// Rule InlineFun
ruleInlineFun
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInlineFunAccess().getGroup()); }
(rule__InlineFun__Group__0)
{ after(grammarAccess.getInlineFunAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryExpr
entryRuleTryExpr 
:
{ before(grammarAccess.getTryExprRule()); }
	 ruleTryExpr
{ after(grammarAccess.getTryExprRule()); } 
	 EOF 
;

// Rule TryExpr
ruleTryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryExprAccess().getGroup()); }
(rule__TryExpr__Group__0)
{ after(grammarAccess.getTryExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryClause
entryRuleTryClause 
:
{ before(grammarAccess.getTryClauseRule()); }
	 ruleTryClause
{ after(grammarAccess.getTryClauseRule()); } 
	 EOF 
;

// Rule TryClause
ruleTryClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryClauseAccess().getGroup()); }
(rule__TryClause__Group__0)
{ after(grammarAccess.getTryClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleList
entryRuleList 
:
{ before(grammarAccess.getListRule()); }
	 ruleList
{ after(grammarAccess.getListRule()); } 
	 EOF 
;

// Rule List
ruleList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListAccess().getGroup()); }
(rule__List__Group__0)
{ after(grammarAccess.getListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListComprehension
entryRuleListComprehension 
:
{ before(grammarAccess.getListComprehensionRule()); }
	 ruleListComprehension
{ after(grammarAccess.getListComprehensionRule()); } 
	 EOF 
;

// Rule ListComprehension
ruleListComprehension
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListComprehensionAccess().getGroup()); }
(rule__ListComprehension__Group__0)
{ after(grammarAccess.getListComprehensionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTuple
entryRuleTuple 
:
{ before(grammarAccess.getTupleRule()); }
	 ruleTuple
{ after(grammarAccess.getTupleRule()); } 
	 EOF 
;

// Rule Tuple
ruleTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleAccess().getGroup()); }
(rule__Tuple__Group__0)
{ after(grammarAccess.getTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryComprehension
entryRuleBinaryComprehension 
:
{ before(grammarAccess.getBinaryComprehensionRule()); }
	 ruleBinaryComprehension
{ after(grammarAccess.getBinaryComprehensionRule()); } 
	 EOF 
;

// Rule BinaryComprehension
ruleBinaryComprehension
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getGroup()); }
(rule__BinaryComprehension__Group__0)
{ after(grammarAccess.getBinaryComprehensionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinary
entryRuleBinary 
:
{ before(grammarAccess.getBinaryRule()); }
	 ruleBinary
{ after(grammarAccess.getBinaryRule()); } 
	 EOF 
;

// Rule Binary
ruleBinary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryAccess().getGroup()); }
(rule__Binary__Group__0)
{ after(grammarAccess.getBinaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryItem
entryRuleBinaryItem 
:
{ before(grammarAccess.getBinaryItemRule()); }
	 ruleBinaryItem
{ after(grammarAccess.getBinaryItemRule()); } 
	 EOF 
;

// Rule BinaryItem
ruleBinaryItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryItemAccess().getGroup()); }
(rule__BinaryItem__Group__0)
{ after(grammarAccess.getBinaryItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitType
entryRuleBitType 
:
{ before(grammarAccess.getBitTypeRule()); }
	 ruleBitType
{ after(grammarAccess.getBitTypeRule()); } 
	 EOF 
;

// Rule BitType
ruleBitType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitTypeAccess().getGroup()); }
(rule__BitType__Group__0)
{ after(grammarAccess.getBitTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExprMax
entryRuleUnaryExprMax 
:
{ before(grammarAccess.getUnaryExprMaxRule()); }
	 ruleUnaryExprMax
{ after(grammarAccess.getUnaryExprMaxRule()); } 
	 EOF 
;

// Rule UnaryExprMax
ruleUnaryExprMax
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExprMaxAccess().getAlternatives()); }
(rule__UnaryExprMax__Alternatives)
{ after(grammarAccess.getUnaryExprMaxAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLCExpr
entryRuleLCExpr 
:
{ before(grammarAccess.getLCExprRule()); }
	 ruleLCExpr
{ after(grammarAccess.getLCExprRule()); } 
	 EOF 
;

// Rule LCExpr
ruleLCExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLCExprAccess().getGroup()); }
(rule__LCExpr__Group__0)
{ after(grammarAccess.getLCExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddOp
entryRuleAddOp 
:
{ before(grammarAccess.getAddOpRule()); }
	 ruleAddOp
{ after(grammarAccess.getAddOpRule()); } 
	 EOF 
;

// Rule AddOp
ruleAddOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddOpAccess().getAlternatives()); }
(rule__AddOp__Alternatives)
{ after(grammarAccess.getAddOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultOp
entryRuleMultOp 
:
{ before(grammarAccess.getMultOpRule()); }
	 ruleMultOp
{ after(grammarAccess.getMultOpRule()); } 
	 EOF 
;

// Rule MultOp
ruleMultOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultOpAccess().getAlternatives()); }
(rule__MultOp__Alternatives)
{ after(grammarAccess.getMultOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixOp
entryRulePrefixOp 
:
{ before(grammarAccess.getPrefixOpRule()); }
	 rulePrefixOp
{ after(grammarAccess.getPrefixOpRule()); } 
	 EOF 
;

// Rule PrefixOp
rulePrefixOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixOpAccess().getAlternatives()); }
(rule__PrefixOp__Alternatives)
{ after(grammarAccess.getPrefixOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListOp
entryRuleListOp 
:
{ before(grammarAccess.getListOpRule()); }
	 ruleListOp
{ after(grammarAccess.getListOpRule()); } 
	 EOF 
;

// Rule ListOp
ruleListOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListOpAccess().getAlternatives()); }
(rule__ListOp__Alternatives)
{ after(grammarAccess.getListOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompOp
entryRuleCompOp 
:
{ before(grammarAccess.getCompOpRule()); }
	 ruleCompOp
{ after(grammarAccess.getCompOpRule()); } 
	 EOF 
;

// Rule CompOp
ruleCompOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompOpAccess().getAlternatives()); }
(rule__CompOp__Alternatives)
{ after(grammarAccess.getCompOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getAlternatives()); }
(rule__Name__Alternatives)
{ after(grammarAccess.getNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleNameVar
entryRuleNameVar 
:
{ before(grammarAccess.getNameVarRule()); }
	 ruleNameVar
{ after(grammarAccess.getNameVarRule()); } 
	 EOF 
;

// Rule NameVar
ruleNameVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameVarAccess().getAlternatives()); }
(rule__NameVar__Alternatives)
{ after(grammarAccess.getNameVarAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomVar
entryRuleAtomVar 
:
{ before(grammarAccess.getAtomVarRule()); }
	 ruleAtomVar
{ after(grammarAccess.getAtomVarRule()); } 
	 EOF 
;

// Rule AtomVar
ruleAtomVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomVarAccess().getAlternatives()); }
(rule__AtomVar__Alternatives)
{ after(grammarAccess.getAtomVarAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacro
entryRuleMacro 
:
{ before(grammarAccess.getMacroRule()); }
	 ruleMacro
{ after(grammarAccess.getMacroRule()); } 
	 EOF 
;

// Rule Macro
ruleMacro
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroAccess().getGroup()); }
(rule__Macro__Group__0)
{ after(grammarAccess.getMacroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomKw
entryRuleAtomKw 
:
{ before(grammarAccess.getAtomKwRule()); }
	 ruleAtomKw
{ after(grammarAccess.getAtomKwRule()); } 
	 EOF 
;

// Rule AtomKw
ruleAtomKw
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomKwAccess().getAlternatives()); }
(rule__AtomKw__Alternatives)
{ after(grammarAccess.getAtomKwAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKW
entryRuleKW 
:
{ before(grammarAccess.getKWRule()); }
	 ruleKW
{ after(grammarAccess.getKWRule()); } 
	 EOF 
;

// Rule KW
ruleKW
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKWAccess().getAlternatives()); }
(rule__KW__Alternatives)
{ after(grammarAccess.getKWAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKW1
entryRuleKW1 
:
{ before(grammarAccess.getKW1Rule()); }
	 ruleKW1
{ after(grammarAccess.getKW1Rule()); } 
	 EOF 
;

// Rule KW1
ruleKW1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKW1Access().getAlternatives()); }
(rule__KW1__Alternatives)
{ after(grammarAccess.getKW1Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleIntMacro
entryRuleIntMacro 
:
{ before(grammarAccess.getIntMacroRule()); }
	 ruleIntMacro
{ after(grammarAccess.getIntMacroRule()); } 
	 EOF 
;

// Rule IntMacro
ruleIntMacro
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntMacroAccess().getAlternatives()); }
(rule__IntMacro__Alternatives)
{ after(grammarAccess.getIntMacroAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTEGER
entryRuleINTEGER 
:
{ before(grammarAccess.getINTEGERRule()); }
	 ruleINTEGER
{ after(grammarAccess.getINTEGERRule()); } 
	 EOF 
;

// Rule INTEGER
ruleINTEGER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getINTEGERAccess().getAlternatives()); }
(rule__INTEGER__Alternatives)
{ after(grammarAccess.getINTEGERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFLOAT
entryRuleFLOAT 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFLOATRule()); }
	 ruleFLOAT
{ after(grammarAccess.getFLOATRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FLOAT
ruleFLOAT
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFLOATAccess().getGroup()); }
(rule__FLOAT__Group__0)
{ after(grammarAccess.getFLOATAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSpecFun
entryRuleSpecFun 
:
{ before(grammarAccess.getSpecFunRule()); }
	 ruleSpecFun
{ after(grammarAccess.getSpecFunRule()); } 
	 EOF 
;

// Rule SpecFun
ruleSpecFun
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecFunAccess().getGroup()); }
(rule__SpecFun__Group__0)
{ after(grammarAccess.getSpecFunAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeSig
entryRuleTypeSig 
:
{ before(grammarAccess.getTypeSigRule()); }
	 ruleTypeSig
{ after(grammarAccess.getTypeSigRule()); } 
	 EOF 
;

// Rule TypeSig
ruleTypeSig
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeSigAccess().getGroup()); }
(rule__TypeSig__Group__0)
{ after(grammarAccess.getTypeSigAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunType
entryRuleFunType 
:
{ before(grammarAccess.getFunTypeRule()); }
	 ruleFunType
{ after(grammarAccess.getFunTypeRule()); } 
	 EOF 
;

// Rule FunType
ruleFunType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunTypeAccess().getGroup()); }
(rule__FunType__Group__0)
{ after(grammarAccess.getFunTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeGuards
entryRuleTypeGuards 
:
{ before(grammarAccess.getTypeGuardsRule()); }
	 ruleTypeGuards
{ after(grammarAccess.getTypeGuardsRule()); } 
	 EOF 
;

// Rule TypeGuards
ruleTypeGuards
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeGuardsAccess().getGroup()); }
(rule__TypeGuards__Group__0)
{ after(grammarAccess.getTypeGuardsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeGuard
entryRuleTypeGuard 
:
{ before(grammarAccess.getTypeGuardRule()); }
	 ruleTypeGuard
{ after(grammarAccess.getTypeGuardRule()); } 
	 EOF 
;

// Rule TypeGuard
ruleTypeGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeGuardAccess().getAlternatives()); }
(rule__TypeGuard__Alternatives)
{ after(grammarAccess.getTypeGuardAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopType
entryRuleTopType 
:
{ before(grammarAccess.getTopTypeRule()); }
	 ruleTopType
{ after(grammarAccess.getTopTypeRule()); } 
	 EOF 
;

// Rule TopType
ruleTopType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopTypeAccess().getGroup()); }
(rule__TopType__Group__0)
{ after(grammarAccess.getTopTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType100
entryRuleType100 
:
{ before(grammarAccess.getType100Rule()); }
	 ruleType100
{ after(grammarAccess.getType100Rule()); } 
	 EOF 
;

// Rule Type100
ruleType100
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType100Access().getGroup()); }
(rule__Type100__Group__0)
{ after(grammarAccess.getType100Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType200
entryRuleType200 
:
{ before(grammarAccess.getType200Rule()); }
	 ruleType200
{ after(grammarAccess.getType200Rule()); } 
	 EOF 
;

// Rule Type200
ruleType200
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType200Access().getGroup()); }
(rule__Type200__Group__0)
{ after(grammarAccess.getType200Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType300
entryRuleType300 
:
{ before(grammarAccess.getType300Rule()); }
	 ruleType300
{ after(grammarAccess.getType300Rule()); } 
	 EOF 
;

// Rule Type300
ruleType300
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType300Access().getGroup()); }
(rule__Type300__Group__0)
{ after(grammarAccess.getType300Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType400
entryRuleType400 
:
{ before(grammarAccess.getType400Rule()); }
	 ruleType400
{ after(grammarAccess.getType400Rule()); } 
	 EOF 
;

// Rule Type400
ruleType400
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType400Access().getGroup()); }
(rule__Type400__Group__0)
{ after(grammarAccess.getType400Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType500
entryRuleType500 
:
{ before(grammarAccess.getType500Rule()); }
	 ruleType500
{ after(grammarAccess.getType500Rule()); } 
	 EOF 
;

// Rule Type500
ruleType500
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType500Access().getAlternatives()); }
(rule__Type500__Alternatives)
{ after(grammarAccess.getType500Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldType
entryRuleFieldType 
:
{ before(grammarAccess.getFieldTypeRule()); }
	 ruleFieldType
{ after(grammarAccess.getFieldTypeRule()); } 
	 EOF 
;

// Rule FieldType
ruleFieldType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldTypeAccess().getGroup()); }
(rule__FieldType__Group__0)
{ after(grammarAccess.getFieldTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryType
entryRuleBinaryType 
:
{ before(grammarAccess.getBinaryTypeRule()); }
	 ruleBinaryType
{ after(grammarAccess.getBinaryTypeRule()); } 
	 EOF 
;

// Rule BinaryType
ruleBinaryType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryTypeAccess().getGroup()); }
(rule__BinaryType__Group__0)
{ after(grammarAccess.getBinaryTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinBaseType
entryRuleBinBaseType 
:
{ before(grammarAccess.getBinBaseTypeRule()); }
	 ruleBinBaseType
{ after(grammarAccess.getBinBaseTypeRule()); } 
	 EOF 
;

// Rule BinBaseType
ruleBinBaseType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinBaseTypeAccess().getGroup()); }
(rule__BinBaseType__Group__0)
{ after(grammarAccess.getBinBaseTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinUnitType
entryRuleBinUnitType 
:
{ before(grammarAccess.getBinUnitTypeRule()); }
	 ruleBinUnitType
{ after(grammarAccess.getBinUnitTypeRule()); } 
	 EOF 
;

// Rule BinUnitType
ruleBinUnitType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinUnitTypeAccess().getGroup()); }
(rule__BinUnitType__Group__0)
{ after(grammarAccess.getBinUnitTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunType100
entryRuleFunType100 
:
{ before(grammarAccess.getFunType100Rule()); }
	 ruleFunType100
{ after(grammarAccess.getFunType100Rule()); } 
	 EOF 
;

// Rule FunType100
ruleFunType100
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunType100Access().getGroup()); }
(rule__FunType100__Group__0)
{ after(grammarAccess.getFunType100Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Form__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getFormAccess().getAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFormAccess().getFunctionParserRuleCall_1()); }
	ruleFunction
{ after(grammarAccess.getFormAccess().getFunctionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFormAccess().getConditionalFormBlockParserRuleCall_2()); }
	ruleConditionalFormBlock
{ after(grammarAccess.getFormAccess().getConditionalFormBlockParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFormAccess().getGroup_3()); }
(rule__Form__Group_3__0)
{ after(grammarAccess.getFormAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getModuleAttributeParserRuleCall_0()); }
	ruleModuleAttribute
{ after(grammarAccess.getAttributeAccess().getModuleAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getDefineAttributeParserRuleCall_1()); }
	ruleDefineAttribute
{ after(grammarAccess.getAttributeAccess().getDefineAttributeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getUndefAttributeParserRuleCall_2()); }
	ruleUndefAttribute
{ after(grammarAccess.getAttributeAccess().getUndefAttributeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getAbstractIncludeAttributeParserRuleCall_3()); }
	ruleAbstractIncludeAttribute
{ after(grammarAccess.getAttributeAccess().getAbstractIncludeAttributeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getFileAttributeParserRuleCall_4()); }
	ruleFileAttribute
{ after(grammarAccess.getAttributeAccess().getFileAttributeParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getRecordAttributeParserRuleCall_5()); }
	ruleRecordAttribute
{ after(grammarAccess.getAttributeAccess().getRecordAttributeParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getAbstractTypeAttributeParserRuleCall_6()); }
	ruleAbstractTypeAttribute
{ after(grammarAccess.getAttributeAccess().getAbstractTypeAttributeParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getExportAttributeParserRuleCall_7()); }
	ruleExportAttribute
{ after(grammarAccess.getAttributeAccess().getExportAttributeParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getImportAttributeParserRuleCall_8()); }
	ruleImportAttribute
{ after(grammarAccess.getAttributeAccess().getImportAttributeParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getCompileAttributeParserRuleCall_9()); }
	ruleCompileAttribute
{ after(grammarAccess.getAttributeAccess().getCompileAttributeParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getCustomAttributeParserRuleCall_10()); }
	ruleCustomAttribute
{ after(grammarAccess.getAttributeAccess().getCustomAttributeParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfdefAttribute__TagAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getTagIfdefKeyword_1_0_0()); }

	'ifdef' 

{ after(grammarAccess.getIfdefAttributeAccess().getTagIfdefKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getIfdefAttributeAccess().getTagIfndefKeyword_1_0_1()); }

	'ifndef' 

{ after(grammarAccess.getIfdefAttributeAccess().getTagIfndefKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractIncludeAttribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractIncludeAttributeAccess().getIncludeAttributeParserRuleCall_0()); }
	ruleIncludeAttribute
{ after(grammarAccess.getAbstractIncludeAttributeAccess().getIncludeAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractIncludeAttributeAccess().getIncludeLibAttributeParserRuleCall_1()); }
	ruleIncludeLibAttribute
{ after(grammarAccess.getAbstractIncludeAttributeAccess().getIncludeLibAttributeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getGroup_5_0()); }
(rule__RecordAttribute__Group_5_0__0)
{ after(grammarAccess.getRecordAttributeAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getRecordAttributeAccess().getRecordMacroAssignment_5_1()); }
(rule__RecordAttribute__RecordMacroAssignment_5_1)
{ after(grammarAccess.getRecordAttributeAccess().getRecordMacroAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTypeAttribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractTypeAttributeAccess().getSpecAttributeParserRuleCall_0()); }
	ruleSpecAttribute
{ after(grammarAccess.getAbstractTypeAttributeAccess().getSpecAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractTypeAttributeAccess().getTypeAttributeParserRuleCall_1()); }
	ruleTypeAttribute
{ after(grammarAccess.getAbstractTypeAttributeAccess().getTypeAttributeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__TagAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getTagSpecKeyword_1_0_0()); }

	'spec' 

{ after(grammarAccess.getSpecAttributeAccess().getTagSpecKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getSpecAttributeAccess().getTagCallbackKeyword_1_0_1()); }

	'callback' 

{ after(grammarAccess.getSpecAttributeAccess().getTagCallbackKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getGroup_2_0()); }
(rule__SpecAttribute__Group_2_0__0)
{ after(grammarAccess.getSpecAttributeAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getSpecAttributeAccess().getGroup_2_1()); }
(rule__SpecAttribute__Group_2_1__0)
{ after(grammarAccess.getSpecAttributeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__TagAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getTagTypeKeyword_1_0_0()); }

	'type' 

{ after(grammarAccess.getTypeAttributeAccess().getTagTypeKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getTypeAttributeAccess().getTagOpaqueKeyword_1_0_1()); }

	'opaque' 

{ after(grammarAccess.getTypeAttributeAccess().getTagOpaqueKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getGroup_2_0()); }
(rule__TypeAttribute__Group_2_0__0)
{ after(grammarAccess.getTypeAttributeAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getTypeAttributeAccess().getGroup_2_1()); }
(rule__TypeAttribute__Group_2_1__0)
{ after(grammarAccess.getTypeAttributeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLExpressionAccess().getGroup_0()); }
(rule__LExpression__Group_0__0)
{ after(grammarAccess.getLExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getLExpressionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
(rule__Expression__Group_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getExpr100ParserRuleCall_1()); }
	ruleExpr100
{ after(grammarAccess.getExpressionAccess().getExpr100ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getGroup_1_0()); }
(rule__Expr100__Group_1_0__0)
{ after(grammarAccess.getExpr100Access().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExpr100Access().getGroup_1_1()); }
(rule__Expr100__Group_1_1__0)
{ after(grammarAccess.getExpr100Access().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getGroup_0()); }
(rule__UnaryExpr__Group_0__0)
{ after(grammarAccess.getUnaryExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExprAccess().getExpr700ParserRuleCall_1()); }
	ruleExpr700
{ after(grammarAccess.getUnaryExprAccess().getExpr700ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getGroup_1_0()); }
(rule__Expr700__Group_1_0__0)
{ after(grammarAccess.getExpr700Access().getGroup_1_0()); }
)

    |(
(
{ before(grammarAccess.getExpr700Access().getGroup_1_1()); }
(rule__Expr700__Group_1_1__0)
{ after(grammarAccess.getExpr700Access().getGroup_1_1()); }
)
(
{ before(grammarAccess.getExpr700Access().getGroup_1_1()); }
(rule__Expr700__Group_1_1__0)*
{ after(grammarAccess.getExpr700Access().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getTermExpressionParserRuleCall_0()); }
	ruleTermExpression
{ after(grammarAccess.getExprMaxAccess().getTermExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getGroup_1()); }
(rule__ExprMax__Group_1__0)
{ after(grammarAccess.getExprMaxAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getGroup_2()); }
(rule__ExprMax__Group_2__0)
{ after(grammarAccess.getExprMaxAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getIfExprParserRuleCall_3()); }
	ruleIfExpr
{ after(grammarAccess.getExprMaxAccess().getIfExprParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getCaseExprParserRuleCall_4()); }
	ruleCaseExpr
{ after(grammarAccess.getExprMaxAccess().getCaseExprParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getReceiveExprParserRuleCall_5()); }
	ruleReceiveExpr
{ after(grammarAccess.getExprMaxAccess().getReceiveExprParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getFunExprParserRuleCall_6()); }
	ruleFunExpr
{ after(grammarAccess.getExprMaxAccess().getFunExprParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getTryExprParserRuleCall_7()); }
	ruleTryExpr
{ after(grammarAccess.getExprMaxAccess().getTryExprParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getCondExprParserRuleCall_8()); }
	ruleCondExpr
{ after(grammarAccess.getExprMaxAccess().getCondExprParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getQueryExprParserRuleCall_9()); }
	ruleQueryExpr
{ after(grammarAccess.getExprMaxAccess().getQueryExprParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getExprMaxAccess().getLetExprParserRuleCall_10()); }
	ruleLetExpr
{ after(grammarAccess.getExprMaxAccess().getLetExprParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermExpressionAccess().getTupleParserRuleCall_0()); }
	ruleTuple
{ after(grammarAccess.getTermExpressionAccess().getTupleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTermExpressionAccess().getListComprehensionParserRuleCall_1()); }
(	ruleListComprehension)
{ after(grammarAccess.getTermExpressionAccess().getListComprehensionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTermExpressionAccess().getListParserRuleCall_2()); }
	ruleList
{ after(grammarAccess.getTermExpressionAccess().getListParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTermExpressionAccess().getBinaryComprehensionParserRuleCall_3()); }
(	ruleBinaryComprehension)
{ after(grammarAccess.getTermExpressionAccess().getBinaryComprehensionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTermExpressionAccess().getBinaryParserRuleCall_4()); }
	ruleBinary
{ after(grammarAccess.getTermExpressionAccess().getBinaryParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTermExpressionAccess().getGroup_5()); }
(rule__TermExpression__Group_5__0)
{ after(grammarAccess.getTermExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTermExpressionAccess().getLiteralExpressionParserRuleCall_6()); }
	ruleLiteralExpression
{ after(grammarAccess.getTermExpressionAccess().getLiteralExpressionParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getGroup_1_0()); }
(rule__RecordExpr__Group_1_0__0)
{ after(grammarAccess.getRecordExprAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getRecordExprAccess().getTupleAssignment_1_1()); }
(rule__RecordExpr__TupleAssignment_1_1)
{ after(grammarAccess.getRecordExprAccess().getTupleAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_0()); }
(rule__LiteralExpressionNoNumber__Group_0__0)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_1()); }
(rule__LiteralExpressionNoNumber__Group_1__0)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_2()); }
(rule__LiteralExpressionNoNumber__Group_2__0)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_3()); }
(rule__LiteralExpressionNoNumber__Group_3__0)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_4()); }
(rule__LiteralExpressionNoNumber__Group_4__0)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getLiteralExpressionNoNumberParserRuleCall_0()); }
	ruleLiteralExpressionNoNumber
{ after(grammarAccess.getLiteralExpressionAccess().getLiteralExpressionNoNumberParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionAccess().getGroup_1()); }
(rule__LiteralExpression__Group_1__0)
{ after(grammarAccess.getLiteralExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionAccess().getGroup_2()); }
(rule__LiteralExpression__Group_2__0)
{ after(grammarAccess.getLiteralExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPatternExpressionAccess().getGroup_1_0()); }
(rule__PatternExpression__Group_1_0__0)
{ after(grammarAccess.getPatternExpressionAccess().getGroup_1_0()); }
)
(
{ before(grammarAccess.getPatternExpressionAccess().getGroup_1_0()); }
(rule__PatternExpression__Group_1_0__0)*
{ after(grammarAccess.getPatternExpressionAccess().getGroup_1_0()); }
)
)

    |(
{ before(grammarAccess.getPatternExpressionAccess().getGroup_1_1()); }
(rule__PatternExpression__Group_1_1__0)
{ after(grammarAccess.getPatternExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErlString__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErlStringAccess().getSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING
{ after(grammarAccess.getErlStringAccess().getSTRINGTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getErlStringAccess().getMacroParserRuleCall_1_1()); }
	ruleMacro
{ after(grammarAccess.getErlStringAccess().getMacroParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getGroup_1_0()); }
(rule__ReceiveExpr__Group_1_0__0)
{ after(grammarAccess.getReceiveExprAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getReceiveExprAccess().getGroup_1_1()); }
(rule__ReceiveExpr__Group_1_1__0)
{ after(grammarAccess.getReceiveExprAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunExprAccess().getFunRefParserRuleCall_1_0()); }
	ruleFunRef
{ after(grammarAccess.getFunExprAccess().getFunRefParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getFunExprAccess().getInlineFunParserRuleCall_1_1()); }
	ruleInlineFun
{ after(grammarAccess.getFunExprAccess().getInlineFunParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getGroup_4_0()); }
(rule__TryExpr__Group_4_0__0)
{ after(grammarAccess.getTryExprAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getTryExprAccess().getGroup_4_1()); }
(rule__TryExpr__Group_4_1__0)
{ after(grammarAccess.getTryExprAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getErlListAction_1_0()); }
(

)
{ after(grammarAccess.getListAccess().getErlListAction_1_0()); }
)

    |(
{ before(grammarAccess.getListAccess().getGroup_1_1()); }
(rule__List__Group_1_1__0)
{ after(grammarAccess.getListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getErlTupleAction_1_0()); }
(

)
{ after(grammarAccess.getTupleAccess().getErlTupleAction_1_0()); }
)

    |(
{ before(grammarAccess.getTupleAccess().getGroup_1_1()); }
(rule__Tuple__Group_1_1__0)
{ after(grammarAccess.getTupleAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getErlBinaryAction_1_0()); }
(

)
{ after(grammarAccess.getBinaryAccess().getErlBinaryAction_1_0()); }
)

    |(
{ before(grammarAccess.getBinaryAccess().getGroup_1_1()); }
(rule__Binary__Group_1_1__0)
{ after(grammarAccess.getBinaryAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExprMax__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprMaxAccess().getGroup_0()); }
(rule__UnaryExprMax__Group_0__0)
{ after(grammarAccess.getUnaryExprMaxAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryExprMaxAccess().getExprMaxParserRuleCall_1()); }
	ruleExprMax
{ after(grammarAccess.getUnaryExprMaxAccess().getExprMaxParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LCExpr__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCExprAccess().getOpLessThanSignHyphenMinusKeyword_1_0_0_0()); }

	'<-' 

{ after(grammarAccess.getLCExprAccess().getOpLessThanSignHyphenMinusKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getLCExprAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_1()); }

	'<=' 

{ after(grammarAccess.getLCExprAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddOpAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getAddOpAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getAddOpAccess().getBorKeyword_2()); }

	'bor' 

{ after(grammarAccess.getAddOpAccess().getBorKeyword_2()); }
)

    |(
{ before(grammarAccess.getAddOpAccess().getBxorKeyword_3()); }

	'bxor' 

{ after(grammarAccess.getAddOpAccess().getBxorKeyword_3()); }
)

    |(
{ before(grammarAccess.getAddOpAccess().getBslKeyword_4()); }

	'bsl' 

{ after(grammarAccess.getAddOpAccess().getBslKeyword_4()); }
)

    |(
{ before(grammarAccess.getAddOpAccess().getBsrKeyword_5()); }

	'bsr' 

{ after(grammarAccess.getAddOpAccess().getBsrKeyword_5()); }
)

    |(
{ before(grammarAccess.getAddOpAccess().getOrKeyword_6()); }

	'or' 

{ after(grammarAccess.getAddOpAccess().getOrKeyword_6()); }
)

    |(
{ before(grammarAccess.getAddOpAccess().getXorKeyword_7()); }

	'xor' 

{ after(grammarAccess.getAddOpAccess().getXorKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOpAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getMultOpAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getMultOpAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getMultOpAccess().getSolidusKeyword_1()); }
)

    |(
{ before(grammarAccess.getMultOpAccess().getDivKeyword_2()); }

	'div' 

{ after(grammarAccess.getMultOpAccess().getDivKeyword_2()); }
)

    |(
{ before(grammarAccess.getMultOpAccess().getRemKeyword_3()); }

	'rem' 

{ after(grammarAccess.getMultOpAccess().getRemKeyword_3()); }
)

    |(
{ before(grammarAccess.getMultOpAccess().getBandKeyword_4()); }

	'band' 

{ after(grammarAccess.getMultOpAccess().getBandKeyword_4()); }
)

    |(
{ before(grammarAccess.getMultOpAccess().getAndKeyword_5()); }

	'and' 

{ after(grammarAccess.getMultOpAccess().getAndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixOpAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getPrefixOpAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getPrefixOpAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getPrefixOpAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getPrefixOpAccess().getBnotKeyword_2()); }

	'bnot' 

{ after(grammarAccess.getPrefixOpAccess().getBnotKeyword_2()); }
)

    |(
{ before(grammarAccess.getPrefixOpAccess().getNotKeyword_3()); }

	'not' 

{ after(grammarAccess.getPrefixOpAccess().getNotKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOpAccess().getPlusSignPlusSignKeyword_0()); }

	'++' 

{ after(grammarAccess.getListOpAccess().getPlusSignPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getListOpAccess().getHyphenMinusHyphenMinusKeyword_1()); }

	'--' 

{ after(grammarAccess.getListOpAccess().getHyphenMinusHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompOpAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getCompOpAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getCompOpAccess().getSolidusEqualsSignKeyword_1()); }

	'/=' 

{ after(grammarAccess.getCompOpAccess().getSolidusEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getCompOpAccess().getEqualsSignLessThanSignKeyword_2()); }

	'=<' 

{ after(grammarAccess.getCompOpAccess().getEqualsSignLessThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getCompOpAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getCompOpAccess().getLessThanSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getCompOpAccess().getGreaterThanSignEqualsSignKeyword_4()); }

	'>=' 

{ after(grammarAccess.getCompOpAccess().getGreaterThanSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getCompOpAccess().getGreaterThanSignKeyword_5()); }

	'>' 

{ after(grammarAccess.getCompOpAccess().getGreaterThanSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getCompOpAccess().getEqualsSignColonEqualsSignKeyword_6()); }

	'=:=' 

{ after(grammarAccess.getCompOpAccess().getEqualsSignColonEqualsSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getCompOpAccess().getEqualsSignSolidusEqualsSignKeyword_7()); }

	'=/=' 

{ after(grammarAccess.getCompOpAccess().getEqualsSignSolidusEqualsSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getAtomKwParserRuleCall_0()); }
	ruleAtomKw
{ after(grammarAccess.getNameAccess().getAtomKwParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNameAccess().getMacroParserRuleCall_1()); }
	ruleMacro
{ after(grammarAccess.getNameAccess().getMacroParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameVar__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameVarAccess().getAtomVarParserRuleCall_0()); }
	ruleAtomVar
{ after(grammarAccess.getNameVarAccess().getAtomVarParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNameVarAccess().getMacroParserRuleCall_1()); }
	ruleMacro
{ after(grammarAccess.getNameVarAccess().getMacroParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomVar__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomVarAccess().getAtomKwParserRuleCall_0()); }
	ruleAtomKw
{ after(grammarAccess.getAtomVarAccess().getAtomKwParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomVarAccess().getVARIABLETerminalRuleCall_1()); }
	RULE_VARIABLE
{ after(grammarAccess.getAtomVarAccess().getVARIABLETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getQuestionMarkKeyword_0_0()); }

	'?' 

{ after(grammarAccess.getMacroAccess().getQuestionMarkKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getQuestionMarkQuestionMarkKeyword_0_1()); }

	'??' 

{ after(grammarAccess.getMacroAccess().getQuestionMarkQuestionMarkKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getATOMTerminalRuleCall_1_0()); }
	RULE_ATOM
{ after(grammarAccess.getMacroAccess().getATOMTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getKW1ParserRuleCall_1_1()); }
	ruleKW1
{ after(grammarAccess.getMacroAccess().getKW1ParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getMacroAccess().getVARIABLETerminalRuleCall_1_2()); }
	RULE_VARIABLE
{ after(grammarAccess.getMacroAccess().getVARIABLETerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomKw__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomKwAccess().getATOMTerminalRuleCall_0()); }
	RULE_ATOM
{ after(grammarAccess.getAtomKwAccess().getATOMTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomKwAccess().getKWParserRuleCall_1()); }
	ruleKW
{ after(grammarAccess.getAtomKwAccess().getKWParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KW__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKWAccess().getKW1ParserRuleCall_0()); }
	ruleKW1
{ after(grammarAccess.getKWAccess().getKW1ParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getKWAccess().getLineKeyword_1()); }

	'line' 

{ after(grammarAccess.getKWAccess().getLineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KW1__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKW1Access().getSpecKeyword_0()); }

	'spec' 

{ after(grammarAccess.getKW1Access().getSpecKeyword_0()); }
)

    |(
{ before(grammarAccess.getKW1Access().getEndifKeyword_1()); }

	'endif' 

{ after(grammarAccess.getKW1Access().getEndifKeyword_1()); }
)

    |(
{ before(grammarAccess.getKW1Access().getIfdefKeyword_2()); }

	'ifdef' 

{ after(grammarAccess.getKW1Access().getIfdefKeyword_2()); }
)

    |(
{ before(grammarAccess.getKW1Access().getIfndefKeyword_3()); }

	'ifndef' 

{ after(grammarAccess.getKW1Access().getIfndefKeyword_3()); }
)

    |(
{ before(grammarAccess.getKW1Access().getTypeKeyword_4()); }

	'type' 

{ after(grammarAccess.getKW1Access().getTypeKeyword_4()); }
)

    |(
{ before(grammarAccess.getKW1Access().getOpaqueKeyword_5()); }

	'opaque' 

{ after(grammarAccess.getKW1Access().getOpaqueKeyword_5()); }
)

    |(
{ before(grammarAccess.getKW1Access().getRecordKeyword_6()); }

	'record' 

{ after(grammarAccess.getKW1Access().getRecordKeyword_6()); }
)

    |(
{ before(grammarAccess.getKW1Access().getUndefKeyword_7()); }

	'undef' 

{ after(grammarAccess.getKW1Access().getUndefKeyword_7()); }
)

    |(
{ before(grammarAccess.getKW1Access().getModuleKeyword_8()); }

	'module' 

{ after(grammarAccess.getKW1Access().getModuleKeyword_8()); }
)

    |(
{ before(grammarAccess.getKW1Access().getIncludeKeyword_9()); }

	'include' 

{ after(grammarAccess.getKW1Access().getIncludeKeyword_9()); }
)

    |(
{ before(grammarAccess.getKW1Access().getInclude_libKeyword_10()); }

	'include_lib' 

{ after(grammarAccess.getKW1Access().getInclude_libKeyword_10()); }
)

    |(
{ before(grammarAccess.getKW1Access().getDefineKeyword_11()); }

	'define' 

{ after(grammarAccess.getKW1Access().getDefineKeyword_11()); }
)

    |(
{ before(grammarAccess.getKW1Access().getFileKeyword_12()); }

	'file' 

{ after(grammarAccess.getKW1Access().getFileKeyword_12()); }
)

    |(
{ before(grammarAccess.getKW1Access().getCallbackKeyword_13()); }

	'callback' 

{ after(grammarAccess.getKW1Access().getCallbackKeyword_13()); }
)

    |(
{ before(grammarAccess.getKW1Access().getElseKeyword_14()); }

	'else' 

{ after(grammarAccess.getKW1Access().getElseKeyword_14()); }
)

    |(
{ before(grammarAccess.getKW1Access().getExportKeyword_15()); }

	'export' 

{ after(grammarAccess.getKW1Access().getExportKeyword_15()); }
)

    |(
{ before(grammarAccess.getKW1Access().getImportKeyword_16()); }

	'import' 

{ after(grammarAccess.getKW1Access().getImportKeyword_16()); }
)

    |(
{ before(grammarAccess.getKW1Access().getCompileKeyword_17()); }

	'compile' 

{ after(grammarAccess.getKW1Access().getCompileKeyword_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntMacro__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntMacroAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getIntMacroAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIntMacroAccess().getMacroParserRuleCall_1()); }
	ruleMacro
{ after(grammarAccess.getIntMacroAccess().getMacroParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIntMacroAccess().getVARIABLETerminalRuleCall_2()); }
	RULE_VARIABLE
{ after(grammarAccess.getIntMacroAccess().getVARIABLETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTEGER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getINTEGERAccess().getBASED_INTTerminalRuleCall_1()); }
	RULE_BASED_INT
{ after(grammarAccess.getINTEGERAccess().getBASED_INTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getEXT_INTTerminalRuleCall_2_0()); }
	RULE_EXT_INT
{ after(grammarAccess.getFLOATAccess().getEXT_INTTerminalRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getGroup_0()); }
(rule__TypeGuard__Group_0__0)
{ after(grammarAccess.getTypeGuardAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeGuardAccess().getGroup_1()); }
(rule__TypeGuard__Group_1__0)
{ after(grammarAccess.getTypeGuardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type500__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType500Access().getGroup_0()); }
(rule__Type500__Group_0__0)
{ after(grammarAccess.getType500Access().getGroup_0()); }
)

    |(
{ before(grammarAccess.getType500Access().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getType500Access().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_0()); }
(rule__Type__Group_0__0)
{ after(grammarAccess.getTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_1()); }
(rule__Type__Group_1__0)
{ after(grammarAccess.getTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getNameAssignment_2()); }
(rule__Type__NameAssignment_2)
{ after(grammarAccess.getTypeAccess().getNameAssignment_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getValueAssignment_3()); }
(rule__Type__ValueAssignment_3)
{ after(grammarAccess.getTypeAccess().getValueAssignment_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_4()); }
(rule__Type__Group_4__0)
{ after(grammarAccess.getTypeAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_5()); }
(rule__Type__Group_5__0)
{ after(grammarAccess.getTypeAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_6()); }
(rule__Type__Group_6__0)
{ after(grammarAccess.getTypeAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getBinaryTypeParserRuleCall_7()); }
	ruleBinaryType
{ after(grammarAccess.getTypeAccess().getBinaryTypeParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_8()); }
(rule__Type__Group_8__0)
{ after(grammarAccess.getTypeAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getGroup_2_0()); }
(rule__BinaryType__Group_2_0__0)
{ after(grammarAccess.getBinaryTypeAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_1()); }
(rule__BinaryType__TypeAssignment_2_1)
{ after(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getFullStopFullStopFullStopKeyword_2_0()); }

	'...' 

{ after(grammarAccess.getFunType100Access().getFullStopFullStopFullStopKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getFunType100Access().getGroup_2_1()); }
(rule__FunType100__Group_2_1__0)
{ after(grammarAccess.getFunType100Access().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Form__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group_3__0__Impl
	rule__Form__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getMacroFormAction_3_0()); }
(

)
{ after(grammarAccess.getFormAccess().getMacroFormAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group_3__1__Impl
	rule__Form__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getCallAssignment_3_1()); }
(rule__Form__CallAssignment_3_1)
{ after(grammarAccess.getFormAccess().getCallAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Form__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getFULL_STOPTerminalRuleCall_3_2()); }
	RULE_FULL_STOP
{ after(grammarAccess.getFormAccess().getFULL_STOPTerminalRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionalFormBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFormBlock__Group__0__Impl
	rule__ConditionalFormBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getConditionAssignment_0()); }
(rule__ConditionalFormBlock__ConditionAssignment_0)
{ after(grammarAccess.getConditionalFormBlockAccess().getConditionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalFormBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFormBlock__Group__1__Impl
	rule__ConditionalFormBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getIfFormsAssignment_1()); }
(rule__ConditionalFormBlock__IfFormsAssignment_1)*
{ after(grammarAccess.getConditionalFormBlockAccess().getIfFormsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalFormBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFormBlock__Group__2__Impl
	rule__ConditionalFormBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getGroup_2()); }
(rule__ConditionalFormBlock__Group_2__0)?
{ after(grammarAccess.getConditionalFormBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalFormBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFormBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getEndAssignment_3()); }
(rule__ConditionalFormBlock__EndAssignment_3)
{ after(grammarAccess.getConditionalFormBlockAccess().getEndAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConditionalFormBlock__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFormBlock__Group_2__0__Impl
	rule__ConditionalFormBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getHasElseAssignment_2_0()); }
(rule__ConditionalFormBlock__HasElseAssignment_2_0)
{ after(grammarAccess.getConditionalFormBlockAccess().getHasElseAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalFormBlock__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalFormBlock__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getElseFormsAssignment_2_1()); }
(rule__ConditionalFormBlock__ElseFormsAssignment_2_1)*
{ after(grammarAccess.getConditionalFormBlockAccess().getElseFormsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefineAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group__0__Impl
	rule__DefineAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getDefineAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group__1__Impl
	rule__DefineAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getTagAssignment_1()); }
(rule__DefineAttribute__TagAssignment_1)
{ after(grammarAccess.getDefineAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group__2__Impl
	rule__DefineAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getDefineAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group__3__Impl
	rule__DefineAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getMacroNameAssignment_3()); }
(rule__DefineAttribute__MacroNameAssignment_3)
{ after(grammarAccess.getDefineAttributeAccess().getMacroNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group__4__Impl
	rule__DefineAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getGroup_4()); }
(rule__DefineAttribute__Group_4__0)?
{ after(grammarAccess.getDefineAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group__5__Impl
	rule__DefineAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getGroup_5()); }
(rule__DefineAttribute__Group_5__0)?
{ after(grammarAccess.getDefineAttributeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group__6__Impl
	rule__DefineAttribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getDefineAttributeAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getFULL_STOPTerminalRuleCall_7()); }
	RULE_FULL_STOP
{ after(grammarAccess.getDefineAttributeAccess().getFULL_STOPTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__DefineAttribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_4__0__Impl
	rule__DefineAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getLeftParenthesisKeyword_4_0()); }

	'(' 

{ after(grammarAccess.getDefineAttributeAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_4__1__Impl
	rule__DefineAttribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getGroup_4_1()); }
(rule__DefineAttribute__Group_4_1__0)?
{ after(grammarAccess.getDefineAttributeAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getDefineAttributeAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DefineAttribute__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_4_1__0__Impl
	rule__DefineAttribute__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getArgsAssignment_4_1_0()); }
(rule__DefineAttribute__ArgsAssignment_4_1_0)
{ after(grammarAccess.getDefineAttributeAccess().getArgsAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getGroup_4_1_1()); }
(rule__DefineAttribute__Group_4_1_1__0)*
{ after(grammarAccess.getDefineAttributeAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefineAttribute__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_4_1_1__0__Impl
	rule__DefineAttribute__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getCommaKeyword_4_1_1_0()); }

	',' 

{ after(grammarAccess.getDefineAttributeAccess().getCommaKeyword_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getArgsAssignment_4_1_1_1()); }
(rule__DefineAttribute__ArgsAssignment_4_1_1_1)
{ after(grammarAccess.getDefineAttributeAccess().getArgsAssignment_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefineAttribute__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_5__0__Impl
	rule__DefineAttribute__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getDefineAttributeAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineAttribute__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineAttribute__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getValueAssignment_5_1()); }
(rule__DefineAttribute__ValueAssignment_5_1)?
{ after(grammarAccess.getDefineAttributeAccess().getValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UndefAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefAttribute__Group__0__Impl
	rule__UndefAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getUndefAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UndefAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefAttribute__Group__1__Impl
	rule__UndefAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefAttributeAccess().getTagAssignment_1()); }
(rule__UndefAttribute__TagAssignment_1)
{ after(grammarAccess.getUndefAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UndefAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefAttribute__Group__2__Impl
	rule__UndefAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getUndefAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UndefAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefAttribute__Group__3__Impl
	rule__UndefAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefAttributeAccess().getRefAssignment_3()); }
(rule__UndefAttribute__RefAssignment_3)
{ after(grammarAccess.getUndefAttributeAccess().getRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UndefAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefAttribute__Group__4__Impl
	rule__UndefAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefAttributeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getUndefAttributeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UndefAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
	RULE_FULL_STOP
{ after(grammarAccess.getUndefAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfdefAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfdefAttribute__Group__0__Impl
	rule__IfdefAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfdefAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getIfdefAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfdefAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfdefAttribute__Group__1__Impl
	rule__IfdefAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfdefAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getTagAssignment_1()); }
(rule__IfdefAttribute__TagAssignment_1)
{ after(grammarAccess.getIfdefAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfdefAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfdefAttribute__Group__2__Impl
	rule__IfdefAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfdefAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIfdefAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfdefAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfdefAttribute__Group__3__Impl
	rule__IfdefAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfdefAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getRefAssignment_3()); }
(rule__IfdefAttribute__RefAssignment_3)
{ after(grammarAccess.getIfdefAttributeAccess().getRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfdefAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfdefAttribute__Group__4__Impl
	rule__IfdefAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfdefAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getIfdefAttributeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfdefAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfdefAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfdefAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
	RULE_FULL_STOP
{ after(grammarAccess.getIfdefAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EndifAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndifAttribute__Group__0__Impl
	rule__EndifAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndifAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndifAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getEndifAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EndifAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndifAttribute__Group__1__Impl
	rule__EndifAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndifAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndifAttributeAccess().getTagAssignment_1()); }
(rule__EndifAttribute__TagAssignment_1)
{ after(grammarAccess.getEndifAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EndifAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndifAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndifAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndifAttributeAccess().getFULL_STOPTerminalRuleCall_2()); }
	RULE_FULL_STOP
{ after(grammarAccess.getEndifAttributeAccess().getFULL_STOPTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElseAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseAttribute__Group__0__Impl
	rule__ElseAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getElseAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseAttribute__Group__1__Impl
	rule__ElseAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAttributeAccess().getTagAssignment_1()); }
(rule__ElseAttribute__TagAssignment_1)
{ after(grammarAccess.getElseAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAttributeAccess().getFULL_STOPTerminalRuleCall_2()); }
	RULE_FULL_STOP
{ after(grammarAccess.getElseAttributeAccess().getFULL_STOPTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IncludeAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeAttribute__Group__0__Impl
	rule__IncludeAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getIncludeAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeAttribute__Group__1__Impl
	rule__IncludeAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAttributeAccess().getTagAssignment_1()); }
(rule__IncludeAttribute__TagAssignment_1)
{ after(grammarAccess.getIncludeAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeAttribute__Group__2__Impl
	rule__IncludeAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIncludeAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeAttribute__Group__3__Impl
	rule__IncludeAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAttributeAccess().getValueAssignment_3()); }
(rule__IncludeAttribute__ValueAssignment_3)
{ after(grammarAccess.getIncludeAttributeAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeAttribute__Group__4__Impl
	rule__IncludeAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAttributeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getIncludeAttributeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
	RULE_FULL_STOP
{ after(grammarAccess.getIncludeAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IncludeLibAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibAttribute__Group__0__Impl
	rule__IncludeLibAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getIncludeLibAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibAttribute__Group__1__Impl
	rule__IncludeLibAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getTagAssignment_1()); }
(rule__IncludeLibAttribute__TagAssignment_1)
{ after(grammarAccess.getIncludeLibAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibAttribute__Group__2__Impl
	rule__IncludeLibAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIncludeLibAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibAttribute__Group__3__Impl
	rule__IncludeLibAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getValueAssignment_3()); }
(rule__IncludeLibAttribute__ValueAssignment_3)
{ after(grammarAccess.getIncludeLibAttributeAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibAttribute__Group__4__Impl
	rule__IncludeLibAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getIncludeLibAttributeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
	RULE_FULL_STOP
{ after(grammarAccess.getIncludeLibAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FileAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileAttribute__Group__0__Impl
	rule__FileAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getFileAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileAttribute__Group__1__Impl
	rule__FileAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getTagAssignment_1()); }
(rule__FileAttribute__TagAssignment_1)
{ after(grammarAccess.getFileAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileAttribute__Group__2__Impl
	rule__FileAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFileAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileAttribute__Group__3__Impl
	rule__FileAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getFileAssignment_3()); }
(rule__FileAttribute__FileAssignment_3)
{ after(grammarAccess.getFileAttributeAccess().getFileAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileAttribute__Group__4__Impl
	rule__FileAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getFileAttributeAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileAttribute__Group__5__Impl
	rule__FileAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getLineAssignment_5()); }
(rule__FileAttribute__LineAssignment_5)
{ after(grammarAccess.getFileAttributeAccess().getLineAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileAttribute__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileAttribute__Group__6__Impl
	rule__FileAttribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getFileAttributeAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileAttribute__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileAttribute__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getFULL_STOPTerminalRuleCall_7()); }
	RULE_FULL_STOP
{ after(grammarAccess.getFileAttributeAccess().getFULL_STOPTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ModuleAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleAttribute__Group__0__Impl
	rule__ModuleAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getModuleAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleAttribute__Group__1__Impl
	rule__ModuleAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAttributeAccess().getTagAssignment_1()); }
(rule__ModuleAttribute__TagAssignment_1)
{ after(grammarAccess.getModuleAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleAttribute__Group__2__Impl
	rule__ModuleAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getModuleAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleAttribute__Group__3__Impl
	rule__ModuleAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAttributeAccess().getNameAssignment_3()); }
(rule__ModuleAttribute__NameAssignment_3)
{ after(grammarAccess.getModuleAttributeAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleAttribute__Group__4__Impl
	rule__ModuleAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAttributeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getModuleAttributeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
	RULE_FULL_STOP
{ after(grammarAccess.getModuleAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RecordAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group__0__Impl
	rule__RecordAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getRecordAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group__1__Impl
	rule__RecordAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getTagAssignment_1()); }
(rule__RecordAttribute__TagAssignment_1)
{ after(grammarAccess.getRecordAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group__2__Impl
	rule__RecordAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getRecordAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group__3__Impl
	rule__RecordAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getNameAssignment_3()); }
(rule__RecordAttribute__NameAssignment_3)
{ after(grammarAccess.getRecordAttributeAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group__4__Impl
	rule__RecordAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getRecordAttributeAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group__5__Impl
	rule__RecordAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getAlternatives_5()); }
(rule__RecordAttribute__Alternatives_5)
{ after(grammarAccess.getRecordAttributeAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group__6__Impl
	rule__RecordAttribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getRecordAttributeAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getFULL_STOPTerminalRuleCall_7()); }
	RULE_FULL_STOP
{ after(grammarAccess.getRecordAttributeAccess().getFULL_STOPTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__RecordAttribute__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group_5_0__0__Impl
	rule__RecordAttribute__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getLeftCurlyBracketKeyword_5_0_0()); }

	'{' 

{ after(grammarAccess.getRecordAttributeAccess().getLeftCurlyBracketKeyword_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group_5_0__1__Impl
	rule__RecordAttribute__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getGroup_5_0_1()); }
(rule__RecordAttribute__Group_5_0_1__0)?
{ after(grammarAccess.getRecordAttributeAccess().getGroup_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getRightCurlyBracketKeyword_5_0_2()); }

	'}' 

{ after(grammarAccess.getRecordAttributeAccess().getRightCurlyBracketKeyword_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RecordAttribute__Group_5_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group_5_0_1__0__Impl
	rule__RecordAttribute__Group_5_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group_5_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getFieldsAssignment_5_0_1_0()); }
(rule__RecordAttribute__FieldsAssignment_5_0_1_0)
{ after(grammarAccess.getRecordAttributeAccess().getFieldsAssignment_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group_5_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group_5_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group_5_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getGroup_5_0_1_1()); }
(rule__RecordAttribute__Group_5_0_1_1__0)*
{ after(grammarAccess.getRecordAttributeAccess().getGroup_5_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordAttribute__Group_5_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group_5_0_1_1__0__Impl
	rule__RecordAttribute__Group_5_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group_5_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getCommaKeyword_5_0_1_1_0()); }

	',' 

{ after(grammarAccess.getRecordAttributeAccess().getCommaKeyword_5_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAttribute__Group_5_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordAttribute__Group_5_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__Group_5_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getFieldsAssignment_5_0_1_1_1()); }
(rule__RecordAttribute__FieldsAssignment_5_0_1_1_1)
{ after(grammarAccess.getRecordAttributeAccess().getFieldsAssignment_5_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExportAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group__0__Impl
	rule__ExportAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getExportAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group__1__Impl
	rule__ExportAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getTagAssignment_1()); }
(rule__ExportAttribute__TagAssignment_1)
{ after(grammarAccess.getExportAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group__2__Impl
	rule__ExportAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getExportAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group__3__Impl
	rule__ExportAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getExportAttributeAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group__4__Impl
	rule__ExportAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getGroup_4()); }
(rule__ExportAttribute__Group_4__0)?
{ after(grammarAccess.getExportAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group__5__Impl
	rule__ExportAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getExportAttributeAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group__6__Impl
	rule__ExportAttribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getExportAttributeAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getFULL_STOPTerminalRuleCall_7()); }
	RULE_FULL_STOP
{ after(grammarAccess.getExportAttributeAccess().getFULL_STOPTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ExportAttribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group_4__0__Impl
	rule__ExportAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getFunsAssignment_4_0()); }
(rule__ExportAttribute__FunsAssignment_4_0)
{ after(grammarAccess.getExportAttributeAccess().getFunsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getGroup_4_1()); }
(rule__ExportAttribute__Group_4_1__0)*
{ after(grammarAccess.getExportAttributeAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExportAttribute__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group_4_1__0__Impl
	rule__ExportAttribute__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getExportAttributeAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportAttribute__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportAttribute__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getFunsAssignment_4_1_1()); }
(rule__ExportAttribute__FunsAssignment_4_1_1)
{ after(grammarAccess.getExportAttributeAccess().getFunsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__0__Impl
	rule__ImportAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getImportAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__1__Impl
	rule__ImportAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getTagAssignment_1()); }
(rule__ImportAttribute__TagAssignment_1)
{ after(grammarAccess.getImportAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__2__Impl
	rule__ImportAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getImportAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__3__Impl
	rule__ImportAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getModuleAssignment_3()); }
(rule__ImportAttribute__ModuleAssignment_3)
{ after(grammarAccess.getImportAttributeAccess().getModuleAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__4__Impl
	rule__ImportAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getImportAttributeAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__5__Impl
	rule__ImportAttribute__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getLeftSquareBracketKeyword_5()); }

	'[' 

{ after(grammarAccess.getImportAttributeAccess().getLeftSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__6__Impl
	rule__ImportAttribute__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getGroup_6()); }
(rule__ImportAttribute__Group_6__0)?
{ after(grammarAccess.getImportAttributeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__7__Impl
	rule__ImportAttribute__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getRightSquareBracketKeyword_7()); }

	']' 

{ after(grammarAccess.getImportAttributeAccess().getRightSquareBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__8__Impl
	rule__ImportAttribute__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getImportAttributeAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getFULL_STOPTerminalRuleCall_9()); }
	RULE_FULL_STOP
{ after(grammarAccess.getImportAttributeAccess().getFULL_STOPTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__ImportAttribute__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group_6__0__Impl
	rule__ImportAttribute__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getFunsAssignment_6_0()); }
(rule__ImportAttribute__FunsAssignment_6_0)
{ after(grammarAccess.getImportAttributeAccess().getFunsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getGroup_6_1()); }
(rule__ImportAttribute__Group_6_1__0)*
{ after(grammarAccess.getImportAttributeAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportAttribute__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group_6_1__0__Impl
	rule__ImportAttribute__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getImportAttributeAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAttribute__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAttribute__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getFunsAssignment_6_1_1()); }
(rule__ImportAttribute__FunsAssignment_6_1_1)
{ after(grammarAccess.getImportAttributeAccess().getFunsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompileAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompileAttribute__Group__0__Impl
	rule__CompileAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompileAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompileAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getCompileAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompileAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompileAttribute__Group__1__Impl
	rule__CompileAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompileAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompileAttributeAccess().getTagAssignment_1()); }
(rule__CompileAttribute__TagAssignment_1)
{ after(grammarAccess.getCompileAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompileAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompileAttribute__Group__2__Impl
	rule__CompileAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompileAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompileAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getCompileAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompileAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompileAttribute__Group__3__Impl
	rule__CompileAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompileAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompileAttributeAccess().getOptionsAssignment_3()); }
(rule__CompileAttribute__OptionsAssignment_3)
{ after(grammarAccess.getCompileAttributeAccess().getOptionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompileAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompileAttribute__Group__4__Impl
	rule__CompileAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompileAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompileAttributeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getCompileAttributeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompileAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompileAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompileAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompileAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
	RULE_FULL_STOP
{ after(grammarAccess.getCompileAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SpecAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group__0__Impl
	rule__SpecAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getSpecAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group__1__Impl
	rule__SpecAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getTagAssignment_1()); }
(rule__SpecAttribute__TagAssignment_1)
{ after(grammarAccess.getSpecAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group__2__Impl
	rule__SpecAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getAlternatives_2()); }
(rule__SpecAttribute__Alternatives_2)
{ after(grammarAccess.getSpecAttributeAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getFULL_STOPTerminalRuleCall_3()); }
	RULE_FULL_STOP
{ after(grammarAccess.getSpecAttributeAccess().getFULL_STOPTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SpecAttribute__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_0__0__Impl
	rule__SpecAttribute__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getRefAssignment_2_0_0()); }
(rule__SpecAttribute__RefAssignment_2_0_0)
{ after(grammarAccess.getSpecAttributeAccess().getRefAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_0__1__Impl
	rule__SpecAttribute__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_2_0_1()); }
(rule__SpecAttribute__SignaturesAssignment_2_0_1)
{ after(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getGroup_2_0_2()); }
(rule__SpecAttribute__Group_2_0_2__0)*
{ after(grammarAccess.getSpecAttributeAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpecAttribute__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_0_2__0__Impl
	rule__SpecAttribute__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSemicolonKeyword_2_0_2_0()); }

	';' 

{ after(grammarAccess.getSpecAttributeAccess().getSemicolonKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_2_0_2_1()); }
(rule__SpecAttribute__SignaturesAssignment_2_0_2_1)
{ after(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecAttribute__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_1__0__Impl
	rule__SpecAttribute__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getLeftParenthesisKeyword_2_1_0()); }

	'(' 

{ after(grammarAccess.getSpecAttributeAccess().getLeftParenthesisKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_1__1__Impl
	rule__SpecAttribute__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getRefAssignment_2_1_1()); }
(rule__SpecAttribute__RefAssignment_2_1_1)
{ after(grammarAccess.getSpecAttributeAccess().getRefAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_1__2__Impl
	rule__SpecAttribute__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_2_1_2()); }
(rule__SpecAttribute__SignaturesAssignment_2_1_2)
{ after(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_1__3__Impl
	rule__SpecAttribute__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getGroup_2_1_3()); }
(rule__SpecAttribute__Group_2_1_3__0)*
{ after(grammarAccess.getSpecAttributeAccess().getGroup_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getRightParenthesisKeyword_2_1_4()); }

	')' 

{ after(grammarAccess.getSpecAttributeAccess().getRightParenthesisKeyword_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SpecAttribute__Group_2_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_1_3__0__Impl
	rule__SpecAttribute__Group_2_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSemicolonKeyword_2_1_3_0()); }

	';' 

{ after(grammarAccess.getSpecAttributeAccess().getSemicolonKeyword_2_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecAttribute__Group_2_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecAttribute__Group_2_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__Group_2_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_2_1_3_1()); }
(rule__SpecAttribute__SignaturesAssignment_2_1_3_1)
{ after(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_2_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group__0__Impl
	rule__TypeAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getTypeAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group__1__Impl
	rule__TypeAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getTagAssignment_1()); }
(rule__TypeAttribute__TagAssignment_1)
{ after(grammarAccess.getTypeAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group__2__Impl
	rule__TypeAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getAlternatives_2()); }
(rule__TypeAttribute__Alternatives_2)
{ after(grammarAccess.getTypeAttributeAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getFULL_STOPTerminalRuleCall_3()); }
	RULE_FULL_STOP
{ after(grammarAccess.getTypeAttributeAccess().getFULL_STOPTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeAttribute__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0__0__Impl
	rule__TypeAttribute__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getNameAssignment_2_0_0()); }
(rule__TypeAttribute__NameAssignment_2_0_0)
{ after(grammarAccess.getTypeAttributeAccess().getNameAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0__1__Impl
	rule__TypeAttribute__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getLeftParenthesisKeyword_2_0_1()); }

	'(' 

{ after(grammarAccess.getTypeAttributeAccess().getLeftParenthesisKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0__2__Impl
	rule__TypeAttribute__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getGroup_2_0_2()); }
(rule__TypeAttribute__Group_2_0_2__0)?
{ after(grammarAccess.getTypeAttributeAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0__3__Impl
	rule__TypeAttribute__Group_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getRightParenthesisKeyword_2_0_3()); }

	')' 

{ after(grammarAccess.getTypeAttributeAccess().getRightParenthesisKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0__4__Impl
	rule__TypeAttribute__Group_2_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getColonColonKeyword_2_0_4()); }

	'::' 

{ after(grammarAccess.getTypeAttributeAccess().getColonColonKeyword_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getTypeAssignment_2_0_5()); }
(rule__TypeAttribute__TypeAssignment_2_0_5)
{ after(grammarAccess.getTypeAttributeAccess().getTypeAssignment_2_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeAttribute__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0_2__0__Impl
	rule__TypeAttribute__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getArgsAssignment_2_0_2_0()); }
(rule__TypeAttribute__ArgsAssignment_2_0_2_0)
{ after(grammarAccess.getTypeAttributeAccess().getArgsAssignment_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getGroup_2_0_2_1()); }
(rule__TypeAttribute__Group_2_0_2_1__0)*
{ after(grammarAccess.getTypeAttributeAccess().getGroup_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeAttribute__Group_2_0_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0_2_1__0__Impl
	rule__TypeAttribute__Group_2_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getCommaKeyword_2_0_2_1_0()); }

	',' 

{ after(grammarAccess.getTypeAttributeAccess().getCommaKeyword_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_0_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_0_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getArgsAssignment_2_0_2_1_1()); }
(rule__TypeAttribute__ArgsAssignment_2_0_2_1_1)
{ after(grammarAccess.getTypeAttributeAccess().getArgsAssignment_2_0_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeAttribute__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1__0__Impl
	rule__TypeAttribute__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getLeftParenthesisKeyword_2_1_0()); }

	'(' 

{ after(grammarAccess.getTypeAttributeAccess().getLeftParenthesisKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1__1__Impl
	rule__TypeAttribute__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getNameAssignment_2_1_1()); }
(rule__TypeAttribute__NameAssignment_2_1_1)
{ after(grammarAccess.getTypeAttributeAccess().getNameAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1__2__Impl
	rule__TypeAttribute__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getLeftParenthesisKeyword_2_1_2()); }

	'(' 

{ after(grammarAccess.getTypeAttributeAccess().getLeftParenthesisKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1__3__Impl
	rule__TypeAttribute__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getGroup_2_1_3()); }
(rule__TypeAttribute__Group_2_1_3__0)?
{ after(grammarAccess.getTypeAttributeAccess().getGroup_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1__4__Impl
	rule__TypeAttribute__Group_2_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getRightParenthesisKeyword_2_1_4()); }

	')' 

{ after(grammarAccess.getTypeAttributeAccess().getRightParenthesisKeyword_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1__5__Impl
	rule__TypeAttribute__Group_2_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getColonColonKeyword_2_1_5()); }

	'::' 

{ after(grammarAccess.getTypeAttributeAccess().getColonColonKeyword_2_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1__6__Impl
	rule__TypeAttribute__Group_2_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getTypeAssignment_2_1_6()); }
(rule__TypeAttribute__TypeAssignment_2_1_6)
{ after(grammarAccess.getTypeAttributeAccess().getTypeAssignment_2_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getRightParenthesisKeyword_2_1_7()); }

	')' 

{ after(grammarAccess.getTypeAttributeAccess().getRightParenthesisKeyword_2_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TypeAttribute__Group_2_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1_3__0__Impl
	rule__TypeAttribute__Group_2_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getArgsAssignment_2_1_3_0()); }
(rule__TypeAttribute__ArgsAssignment_2_1_3_0)
{ after(grammarAccess.getTypeAttributeAccess().getArgsAssignment_2_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getGroup_2_1_3_1()); }
(rule__TypeAttribute__Group_2_1_3_1__0)*
{ after(grammarAccess.getTypeAttributeAccess().getGroup_2_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeAttribute__Group_2_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1_3_1__0__Impl
	rule__TypeAttribute__Group_2_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getCommaKeyword_2_1_3_1_0()); }

	',' 

{ after(grammarAccess.getTypeAttributeAccess().getCommaKeyword_2_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAttribute__Group_2_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAttribute__Group_2_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__Group_2_1_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getArgsAssignment_2_1_3_1_1()); }
(rule__TypeAttribute__ArgsAssignment_2_1_3_1_1)
{ after(grammarAccess.getTypeAttributeAccess().getArgsAssignment_2_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CustomAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group__0__Impl
	rule__CustomAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getCustomAttributeAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group__1__Impl
	rule__CustomAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getTagAssignment_1()); }
(rule__CustomAttribute__TagAssignment_1)
{ after(grammarAccess.getCustomAttributeAccess().getTagAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group__2__Impl
	rule__CustomAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getCustomAttributeAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group__3__Impl
	rule__CustomAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getGroup_3()); }
(rule__CustomAttribute__Group_3__0)?
{ after(grammarAccess.getCustomAttributeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group__4__Impl
	rule__CustomAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getCustomAttributeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
	RULE_FULL_STOP
{ after(grammarAccess.getCustomAttributeAccess().getFULL_STOPTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CustomAttribute__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group_3__0__Impl
	rule__CustomAttribute__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getValueAssignment_3_0()); }
(rule__CustomAttribute__ValueAssignment_3_0)
{ after(grammarAccess.getCustomAttributeAccess().getValueAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttribute__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getGroup_3_1()); }
(rule__CustomAttribute__Group_3_1__0)*
{ after(grammarAccess.getCustomAttributeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CustomAttribute__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group_3_1__0__Impl
	rule__CustomAttribute__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getCustomAttributeAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttribute__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttribute__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getValueAssignment_3_1_1()); }
(rule__CustomAttribute__ValueAssignment_3_1_1)
{ after(grammarAccess.getCustomAttributeAccess().getValueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
(rule__Function__NameAssignment_0)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getClausesAssignment_1()); }
(rule__Function__ClausesAssignment_1)
{ after(grammarAccess.getFunctionAccess().getClausesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2()); }
(rule__Function__Group_2__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFULL_STOPTerminalRuleCall_3()); }
	RULE_FULL_STOP
{ after(grammarAccess.getFunctionAccess().getFULL_STOPTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Function__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__0__Impl
	rule__Function__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getFunctionAccess().getSemicolonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getClausesAssignment_2_1()); }
(rule__Function__ClausesAssignment_2_1)
{ after(grammarAccess.getFunctionAccess().getClausesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group__0__Impl
	rule__FunctionClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getRefAssignment_0()); }
(rule__FunctionClause__RefAssignment_0)?
{ after(grammarAccess.getFunctionClauseAccess().getRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group__1__Impl
	rule__FunctionClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group__2__Impl
	rule__FunctionClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getGroup_2()); }
(rule__FunctionClause__Group_2__0)?
{ after(grammarAccess.getFunctionClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group__3__Impl
	rule__FunctionClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionClauseAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group__4__Impl
	rule__FunctionClause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getGroup_4()); }
(rule__FunctionClause__Group_4__0)?
{ after(grammarAccess.getFunctionClauseAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group__5__Impl
	rule__FunctionClause__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getHyphenMinusGreaterThanSignKeyword_5()); }

	'->' 

{ after(grammarAccess.getFunctionClauseAccess().getHyphenMinusGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group__6__Impl
	rule__FunctionClause__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getBodyAssignment_6()); }
(rule__FunctionClause__BodyAssignment_6)
{ after(grammarAccess.getFunctionClauseAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getGroup_7()); }
(rule__FunctionClause__Group_7__0)*
{ after(grammarAccess.getFunctionClauseAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FunctionClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group_2__0__Impl
	rule__FunctionClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getParamsAssignment_2_0()); }
(rule__FunctionClause__ParamsAssignment_2_0)
{ after(grammarAccess.getFunctionClauseAccess().getParamsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getGroup_2_1()); }
(rule__FunctionClause__Group_2_1__0)*
{ after(grammarAccess.getFunctionClauseAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionClause__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group_2_1__0__Impl
	rule__FunctionClause__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getFunctionClauseAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getParamsAssignment_2_1_1()); }
(rule__FunctionClause__ParamsAssignment_2_1_1)
{ after(grammarAccess.getFunctionClauseAccess().getParamsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionClause__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group_4__0__Impl
	rule__FunctionClause__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getWhenKeyword_4_0()); }
(
	'when' 
)?
{ after(grammarAccess.getFunctionClauseAccess().getWhenKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getGuardAssignment_4_1()); }
(rule__FunctionClause__GuardAssignment_4_1)
{ after(grammarAccess.getFunctionClauseAccess().getGuardAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionClause__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group_7__0__Impl
	rule__FunctionClause__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getFunctionClauseAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionClause__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionClause__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getBodyAssignment_7_1()); }
(rule__FunctionClause__BodyAssignment_7_1)
{ after(grammarAccess.getFunctionClauseAccess().getBodyAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Guard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__0__Impl
	rule__Guard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getGuardsAssignment_0()); }
(rule__Guard__GuardsAssignment_0)
{ after(grammarAccess.getGuardAccess().getGuardsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getGroup_1()); }
(rule__Guard__Group_1__0)*
{ after(grammarAccess.getGuardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Guard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group_1__0__Impl
	rule__Guard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getGuardAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Guard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Guard__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getGuardsAssignment_1_1()); }
(rule__Guard__GuardsAssignment_1_1)
{ after(grammarAccess.getGuardAccess().getGuardsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expressions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expressions__Group__0__Impl
	rule__Expressions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsAccess().getExprsAssignment_0()); }
(rule__Expressions__ExprsAssignment_0)
{ after(grammarAccess.getExpressionsAccess().getExprsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expressions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expressions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsAccess().getGroup_1()); }
(rule__Expressions__Group_1__0)*
{ after(grammarAccess.getExpressionsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expressions__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expressions__Group_1__0__Impl
	rule__Expressions__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressions__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpressionsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expressions__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expressions__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressions__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsAccess().getExprsAssignment_1_1()); }
(rule__Expressions__ExprsAssignment_1_1)
{ after(grammarAccess.getExpressionsAccess().getExprsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LExpression__Group_0__0__Impl
	rule__LExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLExpressionAccess().getLineAssignment_0_0()); }
(rule__LExpression__LineAssignment_0_0)
{ after(grammarAccess.getLExpressionAccess().getLineAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLExpressionAccess().getExprAssignment_0_1()); }
(rule__LExpression__ExprAssignment_0_1)
{ after(grammarAccess.getLExpressionAccess().getExprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LineExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LineExpr__Group__0__Impl
	rule__LineExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineExprAccess().getQuestionMarkKeyword_0()); }

	'?' 

{ after(grammarAccess.getLineExprAccess().getQuestionMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LineExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LineExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineExprAccess().getLineKeyword_1()); }

	'line' 

{ after(grammarAccess.getLineExprAccess().getLineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCatchExprAction_0_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getCatchExprAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__1__Impl
	rule__Expression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCatchKeyword_0_1()); }

	'catch' 

{ after(grammarAccess.getExpressionAccess().getCatchKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_0_2()); }
(rule__Expression__ExprAssignment_0_2)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr100__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr100__Group__0__Impl
	rule__Expr100__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getExpr150ParserRuleCall_0()); }
	ruleExpr150
{ after(grammarAccess.getExpr100Access().getExpr150ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr100__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr100__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getAlternatives_1()); }
(rule__Expr100__Alternatives_1)?
{ after(grammarAccess.getExpr100Access().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr100__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr100__Group_1_0__0__Impl
	rule__Expr100__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getMatchExprOpLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getExpr100Access().getMatchExprOpLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr100__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr100__Group_1_0__1__Impl
	rule__Expr100__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getOpAssignment_1_0_1()); }
(rule__Expr100__OpAssignment_1_0_1)
{ after(grammarAccess.getExpr100Access().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr100__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr100__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getOpRightAssignment_1_0_2()); }
(rule__Expr100__OpRightAssignment_1_0_2)
{ after(grammarAccess.getExpr100Access().getOpRightAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr100__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr100__Group_1_1__0__Impl
	rule__Expr100__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getBinOpOpLeftAction_1_1_0()); }
(

)
{ after(grammarAccess.getExpr100Access().getBinOpOpLeftAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr100__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr100__Group_1_1__1__Impl
	rule__Expr100__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getOpAssignment_1_1_1()); }
(rule__Expr100__OpAssignment_1_1_1)
{ after(grammarAccess.getExpr100Access().getOpAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr100__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr100__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getOpRightAssignment_1_1_2()); }
(rule__Expr100__OpRightAssignment_1_1_2)
{ after(grammarAccess.getExpr100Access().getOpRightAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr150__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr150__Group__0__Impl
	rule__Expr150__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr150__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr150Access().getExpr160ParserRuleCall_0()); }
	ruleExpr160
{ after(grammarAccess.getExpr150Access().getExpr160ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr150__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr150__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr150__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr150Access().getGroup_1()); }
(rule__Expr150__Group_1__0)*
{ after(grammarAccess.getExpr150Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr150__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr150__Group_1__0__Impl
	rule__Expr150__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr150__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr150Access().getBinOpOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpr150Access().getBinOpOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr150__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr150__Group_1__1__Impl
	rule__Expr150__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr150__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr150Access().getOpAssignment_1_1()); }
(rule__Expr150__OpAssignment_1_1)
{ after(grammarAccess.getExpr150Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr150__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr150__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr150__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr150Access().getOpRightAssignment_1_2()); }
(rule__Expr150__OpRightAssignment_1_2)
{ after(grammarAccess.getExpr150Access().getOpRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr160__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr160__Group__0__Impl
	rule__Expr160__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr160__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr160Access().getExpr200ParserRuleCall_0()); }
	ruleExpr200
{ after(grammarAccess.getExpr160Access().getExpr200ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr160__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr160__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr160__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr160Access().getGroup_1()); }
(rule__Expr160__Group_1__0)*
{ after(grammarAccess.getExpr160Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr160__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr160__Group_1__0__Impl
	rule__Expr160__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr160__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr160Access().getBinOpOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpr160Access().getBinOpOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr160__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr160__Group_1__1__Impl
	rule__Expr160__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr160__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr160Access().getOpAssignment_1_1()); }
(rule__Expr160__OpAssignment_1_1)
{ after(grammarAccess.getExpr160Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr160__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr160__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr160__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr160Access().getOpRight2Assignment_1_2()); }
(rule__Expr160__OpRight2Assignment_1_2)
{ after(grammarAccess.getExpr160Access().getOpRight2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr200__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr200__Group__0__Impl
	rule__Expr200__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr200__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr200Access().getExpr300ParserRuleCall_0()); }
	ruleExpr300
{ after(grammarAccess.getExpr200Access().getExpr300ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr200__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr200__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr200__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr200Access().getGroup_1()); }
(rule__Expr200__Group_1__0)?
{ after(grammarAccess.getExpr200Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr200__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr200__Group_1__0__Impl
	rule__Expr200__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr200__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr200Access().getBinOpOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpr200Access().getBinOpOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr200__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr200__Group_1__1__Impl
	rule__Expr200__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr200__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr200Access().getOpAssignment_1_1()); }
(rule__Expr200__OpAssignment_1_1)
{ after(grammarAccess.getExpr200Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr200__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr200__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr200__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr200Access().getOpRightAssignment_1_2()); }
(rule__Expr200__OpRightAssignment_1_2)
{ after(grammarAccess.getExpr200Access().getOpRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr300__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr300__Group__0__Impl
	rule__Expr300__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr300__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr300Access().getExpr400ParserRuleCall_0()); }
	ruleExpr400
{ after(grammarAccess.getExpr300Access().getExpr400ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr300__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr300__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr300__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr300Access().getGroup_1()); }
(rule__Expr300__Group_1__0)*
{ after(grammarAccess.getExpr300Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr300__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr300__Group_1__0__Impl
	rule__Expr300__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr300__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr300Access().getBinOpOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpr300Access().getBinOpOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr300__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr300__Group_1__1__Impl
	rule__Expr300__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr300__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr300Access().getOpAssignment_1_1()); }
(rule__Expr300__OpAssignment_1_1)
{ after(grammarAccess.getExpr300Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr300__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr300__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr300__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr300Access().getOpRightAssignment_1_2()); }
(rule__Expr300__OpRightAssignment_1_2)
{ after(grammarAccess.getExpr300Access().getOpRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr400__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr400__Group__0__Impl
	rule__Expr400__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr400__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr400Access().getExpr500ParserRuleCall_0()); }
	ruleExpr500
{ after(grammarAccess.getExpr400Access().getExpr500ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr400__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr400__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr400__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr400Access().getGroup_1()); }
(rule__Expr400__Group_1__0)*
{ after(grammarAccess.getExpr400Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr400__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr400__Group_1__0__Impl
	rule__Expr400__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr400__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr400Access().getAddOpOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpr400Access().getAddOpOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr400__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr400__Group_1__1__Impl
	rule__Expr400__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr400__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr400Access().getOpAssignment_1_1()); }
(rule__Expr400__OpAssignment_1_1)
{ after(grammarAccess.getExpr400Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr400__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr400__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr400__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr400Access().getOpRightAssignment_1_2()); }
(rule__Expr400__OpRightAssignment_1_2)
{ after(grammarAccess.getExpr400Access().getOpRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr500__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr500__Group__0__Impl
	rule__Expr500__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr500__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr500Access().getUnaryExprParserRuleCall_0()); }
	ruleUnaryExpr
{ after(grammarAccess.getExpr500Access().getUnaryExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr500__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr500__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr500__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr500Access().getGroup_1()); }
(rule__Expr500__Group_1__0)*
{ after(grammarAccess.getExpr500Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr500__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr500__Group_1__0__Impl
	rule__Expr500__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr500__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr500Access().getMultOpOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpr500Access().getMultOpOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr500__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr500__Group_1__1__Impl
	rule__Expr500__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr500__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr500Access().getOpAssignment_1_1()); }
(rule__Expr500__OpAssignment_1_1)
{ after(grammarAccess.getExpr500Access().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr500__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr500__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr500__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr500Access().getOpRightAssignment_1_2()); }
(rule__Expr500__OpRightAssignment_1_2)
{ after(grammarAccess.getExpr500Access().getOpRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_0__0__Impl
	rule__UnaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getUnaryExprAction_0_0()); }
(

)
{ after(grammarAccess.getUnaryExprAccess().getUnaryExprAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_0__1__Impl
	rule__UnaryExpr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getOpAssignment_0_1()); }
(rule__UnaryExpr__OpAssignment_0_1)
{ after(grammarAccess.getUnaryExprAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getOperandAssignment_0_2()); }
(rule__UnaryExpr__OperandAssignment_0_2)
{ after(grammarAccess.getUnaryExprAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr700__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group__0__Impl
	rule__Expr700__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getExpr800ParserRuleCall_0()); }
	ruleExpr800
{ after(grammarAccess.getExpr700Access().getExpr800ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getAlternatives_1()); }
(rule__Expr700__Alternatives_1)?
{ after(grammarAccess.getExpr700Access().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr700__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0__0__Impl
	rule__Expr700__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getLeftParenthesisKeyword_1_0_0()); }

	'(' 

{ after(grammarAccess.getExpr700Access().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0__1__Impl
	rule__Expr700__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getFunCallTargetAction_1_0_1()); }
(

)
{ after(grammarAccess.getExpr700Access().getFunCallTargetAction_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0__2__Impl
	rule__Expr700__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getGroup_1_0_2()); }
(rule__Expr700__Group_1_0_2__0)?
{ after(grammarAccess.getExpr700Access().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0__3__Impl
	rule__Expr700__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getRightParenthesisKeyword_1_0_3()); }

	')' 

{ after(grammarAccess.getExpr700Access().getRightParenthesisKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getGroup_1_0_4()); }
(rule__Expr700__Group_1_0_4__0)?
{ after(grammarAccess.getExpr700Access().getGroup_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expr700__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_2__0__Impl
	rule__Expr700__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getArgsAssignment_1_0_2_0()); }
(rule__Expr700__ArgsAssignment_1_0_2_0)
{ after(grammarAccess.getExpr700Access().getArgsAssignment_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getGroup_1_0_2_1()); }
(rule__Expr700__Group_1_0_2_1__0)*
{ after(grammarAccess.getExpr700Access().getGroup_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr700__Group_1_0_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_2_1__0__Impl
	rule__Expr700__Group_1_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getCommaKeyword_1_0_2_1_0()); }

	',' 

{ after(grammarAccess.getExpr700Access().getCommaKeyword_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getArgsAssignment_1_0_2_1_1()); }
(rule__Expr700__ArgsAssignment_1_0_2_1_1)
{ after(grammarAccess.getExpr700Access().getArgsAssignment_1_0_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr700__Group_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_4__0__Impl
	rule__Expr700__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getLeftParenthesisKeyword_1_0_4_0()); }

	'(' 

{ after(grammarAccess.getExpr700Access().getLeftParenthesisKeyword_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_4__1__Impl
	rule__Expr700__Group_1_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getGroup_1_0_4_1()); }
(rule__Expr700__Group_1_0_4_1__0)?
{ after(grammarAccess.getExpr700Access().getGroup_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getRightParenthesisKeyword_1_0_4_2()); }

	')' 

{ after(grammarAccess.getExpr700Access().getRightParenthesisKeyword_1_0_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr700__Group_1_0_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_4_1__0__Impl
	rule__Expr700__Group_1_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getArgs2Assignment_1_0_4_1_0()); }
(rule__Expr700__Args2Assignment_1_0_4_1_0)
{ after(grammarAccess.getExpr700Access().getArgs2Assignment_1_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getGroup_1_0_4_1_1()); }
(rule__Expr700__Group_1_0_4_1_1__0)*
{ after(grammarAccess.getExpr700Access().getGroup_1_0_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr700__Group_1_0_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_4_1_1__0__Impl
	rule__Expr700__Group_1_0_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getCommaKeyword_1_0_4_1_1_0()); }

	',' 

{ after(grammarAccess.getExpr700Access().getCommaKeyword_1_0_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_0_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_0_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_0_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getArgs2Assignment_1_0_4_1_1_1()); }
(rule__Expr700__Args2Assignment_1_0_4_1_1_1)
{ after(grammarAccess.getExpr700Access().getArgs2Assignment_1_0_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr700__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_1__0__Impl
	rule__Expr700__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getNumberSignKeyword_1_1_0()); }

	'#' 

{ after(grammarAccess.getExpr700Access().getNumberSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_1__1__Impl
	rule__Expr700__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getRecordExprRefAction_1_1_1()); }
(

)
{ after(grammarAccess.getExpr700Access().getRecordExprRefAction_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr700__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr700__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getRecordAssignment_1_1_2()); }
(rule__Expr700__RecordAssignment_1_1_2)
{ after(grammarAccess.getExpr700Access().getRecordAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr800__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr800__Group__0__Impl
	rule__Expr800__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr800__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr800Access().getExprMaxParserRuleCall_0()); }
	ruleExprMax
{ after(grammarAccess.getExpr800Access().getExprMaxParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr800__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr800__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr800__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr800Access().getGroup_1()); }
(rule__Expr800__Group_1__0)?
{ after(grammarAccess.getExpr800Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr800__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr800__Group_1__0__Impl
	rule__Expr800__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr800__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr800Access().getRemoteTargetModuleAction_1_0()); }
(

)
{ after(grammarAccess.getExpr800Access().getRemoteTargetModuleAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr800__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr800__Group_1__1__Impl
	rule__Expr800__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr800__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr800Access().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getExpr800Access().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr800__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr800__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr800__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr800Access().getFunctionAssignment_1_2()); }
(rule__Expr800__FunctionAssignment_1_2)
{ after(grammarAccess.getExpr800Access().getFunctionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprMax__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_1__0__Impl
	rule__ExprMax__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getExprMaxAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMax__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_1__1__Impl
	rule__ExprMax__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
{ after(grammarAccess.getExprMaxAccess().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMax__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getExprMaxAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprMax__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_2__0__Impl
	rule__ExprMax__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getBlockExprAction_2_0()); }
(

)
{ after(grammarAccess.getExprMaxAccess().getBlockExprAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMax__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_2__1__Impl
	rule__ExprMax__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getBeginKeyword_2_1()); }

	'begin' 

{ after(grammarAccess.getExprMaxAccess().getBeginKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMax__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_2__2__Impl
	rule__ExprMax__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getBodyAssignment_2_2()); }
(rule__ExprMax__BodyAssignment_2_2)
{ after(grammarAccess.getExprMaxAccess().getBodyAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMax__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_2__3__Impl
	rule__ExprMax__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getGroup_2_3()); }
(rule__ExprMax__Group_2_3__0)*
{ after(grammarAccess.getExprMaxAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMax__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getEndKeyword_2_4()); }

	'end' 

{ after(grammarAccess.getExprMaxAccess().getEndKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExprMax__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_2_3__0__Impl
	rule__ExprMax__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getCommaKeyword_2_3_0()); }

	',' 

{ after(grammarAccess.getExprMaxAccess().getCommaKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMax__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMax__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getBodyAssignment_2_3_1()); }
(rule__ExprMax__BodyAssignment_2_3_1)
{ after(grammarAccess.getExprMaxAccess().getBodyAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TermExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TermExpression__Group_5__0__Impl
	rule__TermExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermExpressionAccess().getNumberSignKeyword_5_0()); }

	'#' 

{ after(grammarAccess.getTermExpressionAccess().getNumberSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TermExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TermExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermExpressionAccess().getRecordExprParserRuleCall_5_1()); }
	ruleRecordExpr
{ after(grammarAccess.getTermExpressionAccess().getRecordExprParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group__0__Impl
	rule__MacroCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getMacroNameAssignment_0()); }
(rule__MacroCall__MacroNameAssignment_0)
{ after(grammarAccess.getMacroCallAccess().getMacroNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getGroup_1()); }
(rule__MacroCall__Group_1__0)?
{ after(grammarAccess.getMacroCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group_1__0__Impl
	rule__MacroCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getMacroCallAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group_1__1__Impl
	rule__MacroCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getGroup_1_1()); }
(rule__MacroCall__Group_1_1__0)?
{ after(grammarAccess.getMacroCallAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getMacroCallAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MacroCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group_1_1__0__Impl
	rule__MacroCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getArgsAssignment_1_1_0()); }
(rule__MacroCall__ArgsAssignment_1_1_0)
{ after(grammarAccess.getMacroCallAccess().getArgsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getGroup_1_1_1()); }
(rule__MacroCall__Group_1_1_1__0)*
{ after(grammarAccess.getMacroCallAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroCall__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group_1_1_1__0__Impl
	rule__MacroCall__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getMacroCallAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroCall__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroCall__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getArgsAssignment_1_1_1_1()); }
(rule__MacroCall__ArgsAssignment_1_1_1_1)
{ after(grammarAccess.getMacroCallAccess().getArgsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group__0__Impl
	rule__RecordExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getRecAssignment_0()); }
(rule__RecordExpr__RecAssignment_0)
{ after(grammarAccess.getRecordExprAccess().getRecAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getAlternatives_1()); }
(rule__RecordExpr__Alternatives_1)
{ after(grammarAccess.getRecordExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group_1_0__0__Impl
	rule__RecordExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getRecordExprAccess().getFullStopKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getFieldAssignment_1_0_1()); }
(rule__RecordExpr__FieldAssignment_1_0_1)
{ after(grammarAccess.getRecordExprAccess().getFieldAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QueryExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryExpr__Group__0__Impl
	rule__QueryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryExprAccess().getQueryExprAction_0()); }
(

)
{ after(grammarAccess.getQueryExprAccess().getQueryExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QueryExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QueryExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQueryExprAccess().getQueryKeyword_1()); }

	'query' 

{ after(grammarAccess.getQueryExprAccess().getQueryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CondExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondExpr__Group__0__Impl
	rule__CondExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondExprAccess().getCondExprAction_0()); }
(

)
{ after(grammarAccess.getCondExprAccess().getCondExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CondExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondExprAccess().getCondKeyword_1()); }

	'cond' 

{ after(grammarAccess.getCondExprAccess().getCondKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpr__Group__0__Impl
	rule__LetExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExprAccess().getLetExprAction_0()); }
(

)
{ after(grammarAccess.getLetExprAccess().getLetExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExprAccess().getLetKeyword_1()); }

	'let' 

{ after(grammarAccess.getLetExprAccess().getLetKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordTuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTuple__Group__0__Impl
	rule__RecordTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getRecordTupleAction_0()); }
(

)
{ after(grammarAccess.getRecordTupleAccess().getRecordTupleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTuple__Group__1__Impl
	rule__RecordTuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRecordTupleAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTuple__Group__2__Impl
	rule__RecordTuple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getGroup_2()); }
(rule__RecordTuple__Group_2__0)?
{ after(grammarAccess.getRecordTupleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTuple__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTuple__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getRecordTupleAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RecordTuple__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTuple__Group_2__0__Impl
	rule__RecordTuple__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getFieldsAssignment_2_0()); }
(rule__RecordTuple__FieldsAssignment_2_0)
{ after(grammarAccess.getRecordTupleAccess().getFieldsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTuple__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTuple__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getGroup_2_1()); }
(rule__RecordTuple__Group_2_1__0)*
{ after(grammarAccess.getRecordTupleAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordTuple__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTuple__Group_2_1__0__Impl
	rule__RecordTuple__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getRecordTupleAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTuple__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTuple__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getFieldsAssignment_2_1_1()); }
(rule__RecordTuple__FieldsAssignment_2_1_1)
{ after(grammarAccess.getRecordTupleAccess().getFieldsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordFieldDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDef__Group__0__Impl
	rule__RecordFieldDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getNameAssignment_0()); }
(rule__RecordFieldDef__NameAssignment_0)
{ after(grammarAccess.getRecordFieldDefAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDef__Group__1__Impl
	rule__RecordFieldDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getGroup_1()); }
(rule__RecordFieldDef__Group_1__0)?
{ after(grammarAccess.getRecordFieldDefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getGroup_2()); }
(rule__RecordFieldDef__Group_2__0)?
{ after(grammarAccess.getRecordFieldDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RecordFieldDef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDef__Group_1__0__Impl
	rule__RecordFieldDef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getRecordFieldDefAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldDef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getValueAssignment_1_1()); }
(rule__RecordFieldDef__ValueAssignment_1_1)
{ after(grammarAccess.getRecordFieldDefAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordFieldDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDef__Group_2__0__Impl
	rule__RecordFieldDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getColonColonKeyword_2_0()); }

	'::' 

{ after(grammarAccess.getRecordFieldDefAccess().getColonColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getTypeAssignment_2_1()); }
(rule__RecordFieldDef__TypeAssignment_2_1)
{ after(grammarAccess.getRecordFieldDefAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordField__Group__0__Impl
	rule__RecordField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getRefAssignment_0()); }
(rule__RecordField__RefAssignment_0)
{ after(grammarAccess.getRecordFieldAccess().getRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordField__Group__1__Impl
	rule__RecordField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getGroup_1()); }
(rule__RecordField__Group_1__0)?
{ after(grammarAccess.getRecordFieldAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getGroup_2()); }
(rule__RecordField__Group_2__0)?
{ after(grammarAccess.getRecordFieldAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RecordField__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordField__Group_1__0__Impl
	rule__RecordField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getRecordFieldAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordField__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordField__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getValueAssignment_1_1()); }
(rule__RecordField__ValueAssignment_1_1)
{ after(grammarAccess.getRecordFieldAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordField__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordField__Group_2__0__Impl
	rule__RecordField__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getColonColonKeyword_2_0()); }

	'::' 

{ after(grammarAccess.getRecordFieldAccess().getColonColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordField__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordField__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getTypeAssignment_2_1()); }
(rule__RecordField__TypeAssignment_2_1)
{ after(grammarAccess.getRecordFieldAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralExpressionNoNumber__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_0__0__Impl
	rule__LiteralExpressionNoNumber__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getAtomAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getAtomAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralExpressionNoNumber__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_0_1()); }
(rule__LiteralExpressionNoNumber__ValueAssignment_0_1)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralExpressionNoNumber__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_1__0__Impl
	rule__LiteralExpressionNoNumber__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getVariableAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getVariableAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralExpressionNoNumber__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_1_1()); }
(rule__LiteralExpressionNoNumber__ValueAssignment_1_1)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralExpressionNoNumber__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_2__0__Impl
	rule__LiteralExpressionNoNumber__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getErlCharAction_2_0()); }
(

)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getErlCharAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralExpressionNoNumber__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_2_1()); }
(rule__LiteralExpressionNoNumber__ValueAssignment_2_1)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralExpressionNoNumber__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_3__0__Impl
	rule__LiteralExpressionNoNumber__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getMacroExprAction_3_0()); }
(

)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getMacroExprAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralExpressionNoNumber__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_3_1()); }
(rule__LiteralExpressionNoNumber__ValueAssignment_3_1)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralExpressionNoNumber__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_4__0__Impl
	rule__LiteralExpressionNoNumber__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getErlStringAction_4_0()); }
(

)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getErlStringAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralExpressionNoNumber__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpressionNoNumber__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_4_1()); }
(rule__LiteralExpressionNoNumber__ValueAssignment_4_1)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpression__Group_1__0__Impl
	rule__LiteralExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getErlIntegerAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralExpressionAccess().getErlIntegerAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getValueAssignment_1_1()); }
(rule__LiteralExpression__ValueAssignment_1_1)
{ after(grammarAccess.getLiteralExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpression__Group_2__0__Impl
	rule__LiteralExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getErlFloatAction_2_0()); }
(

)
{ after(grammarAccess.getLiteralExpressionAccess().getErlFloatAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getValueAssignment_2_1()); }
(rule__LiteralExpression__ValueAssignment_2_1)
{ after(grammarAccess.getLiteralExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PatternExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group__0__Impl
	rule__PatternExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getTermExpressionParserRuleCall_0()); }
	ruleTermExpression
{ after(grammarAccess.getPatternExpressionAccess().getTermExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getAlternatives_1()); }
(rule__PatternExpression__Alternatives_1)?
{ after(grammarAccess.getPatternExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PatternExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_0__0__Impl
	rule__PatternExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getMatchExprOpLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getPatternExpressionAccess().getMatchExprOpLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_0__1__Impl
	rule__PatternExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getOpAssignment_1_0_1()); }
(rule__PatternExpression__OpAssignment_1_0_1)
{ after(grammarAccess.getPatternExpressionAccess().getOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getOpRightAssignment_1_0_2()); }
(rule__PatternExpression__OpRightAssignment_1_0_2)
{ after(grammarAccess.getPatternExpressionAccess().getOpRightAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PatternExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_1__0__Impl
	rule__PatternExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getFunCallTargetAction_1_1_0()); }
(

)
{ after(grammarAccess.getPatternExpressionAccess().getFunCallTargetAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_1__1__Impl
	rule__PatternExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getLeftParenthesisKeyword_1_1_1()); }

	'(' 

{ after(grammarAccess.getPatternExpressionAccess().getLeftParenthesisKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_1__2__Impl
	rule__PatternExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getGroup_1_1_2()); }
(rule__PatternExpression__Group_1_1_2__0)?
{ after(grammarAccess.getPatternExpressionAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExpression__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getRightParenthesisKeyword_1_1_3()); }

	')' 

{ after(grammarAccess.getPatternExpressionAccess().getRightParenthesisKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PatternExpression__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_1_2__0__Impl
	rule__PatternExpression__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getArgsAssignment_1_1_2_0()); }
(rule__PatternExpression__ArgsAssignment_1_1_2_0)
{ after(grammarAccess.getPatternExpressionAccess().getArgsAssignment_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExpression__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getGroup_1_1_2_1()); }
(rule__PatternExpression__Group_1_1_2_1__0)*
{ after(grammarAccess.getPatternExpressionAccess().getGroup_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PatternExpression__Group_1_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_1_2_1__0__Impl
	rule__PatternExpression__Group_1_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getCommaKeyword_1_1_2_1_0()); }

	',' 

{ after(grammarAccess.getPatternExpressionAccess().getCommaKeyword_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PatternExpression__Group_1_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PatternExpression__Group_1_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__Group_1_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getArgsAssignment_1_1_2_1_1()); }
(rule__PatternExpression__ArgsAssignment_1_1_2_1_1)
{ after(grammarAccess.getPatternExpressionAccess().getArgsAssignment_1_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ErlString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErlString__Group__0__Impl
	rule__ErlString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErlString__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErlStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getErlStringAccess().getSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErlString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErlString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErlString__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErlStringAccess().getAlternatives_1()); }
(rule__ErlString__Alternatives_1)*
{ after(grammarAccess.getErlStringAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpr__Group__0__Impl
	rule__IfExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExprAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfExprAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpr__Group__1__Impl
	rule__IfExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExprAccess().getClausesAssignment_1()); }
(rule__IfExpr__ClausesAssignment_1)
{ after(grammarAccess.getIfExprAccess().getClausesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpr__Group__2__Impl
	rule__IfExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExprAccess().getGroup_2()); }
(rule__IfExpr__Group_2__0)*
{ after(grammarAccess.getIfExprAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExprAccess().getEndKeyword_3()); }

	'end' 

{ after(grammarAccess.getIfExprAccess().getEndKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpr__Group_2__0__Impl
	rule__IfExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExprAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getIfExprAccess().getSemicolonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExprAccess().getClausesAssignment_2_1()); }
(rule__IfExpr__ClausesAssignment_2_1)
{ after(grammarAccess.getIfExprAccess().getClausesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfClause__Group__0__Impl
	rule__IfClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getGuardAssignment_0()); }
(rule__IfClause__GuardAssignment_0)
{ after(grammarAccess.getIfClauseAccess().getGuardAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfClause__Group__1__Impl
	rule__IfClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getIfClauseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfClause__Group__2__Impl
	rule__IfClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getBodyAssignment_2()); }
(rule__IfClause__BodyAssignment_2)
{ after(grammarAccess.getIfClauseAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getGroup_3()); }
(rule__IfClause__Group_3__0)*
{ after(grammarAccess.getIfClauseAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfClause__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfClause__Group_3__0__Impl
	rule__IfClause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getIfClauseAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfClause__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfClause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getBodyAssignment_3_1()); }
(rule__IfClause__BodyAssignment_3_1)
{ after(grammarAccess.getIfClauseAccess().getBodyAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CaseExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpr__Group__0__Impl
	rule__CaseExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getCaseExprAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpr__Group__1__Impl
	rule__CaseExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getExprAssignment_1()); }
(rule__CaseExpr__ExprAssignment_1)
{ after(grammarAccess.getCaseExprAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpr__Group__2__Impl
	rule__CaseExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getOfKeyword_2()); }

	'of' 

{ after(grammarAccess.getCaseExprAccess().getOfKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpr__Group__3__Impl
	rule__CaseExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getClausesAssignment_3()); }
(rule__CaseExpr__ClausesAssignment_3)
{ after(grammarAccess.getCaseExprAccess().getClausesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpr__Group__4__Impl
	rule__CaseExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getGroup_4()); }
(rule__CaseExpr__Group_4__0)*
{ after(grammarAccess.getCaseExprAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getCaseExprAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CaseExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpr__Group_4__0__Impl
	rule__CaseExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getSemicolonKeyword_4_0()); }

	';' 

{ after(grammarAccess.getCaseExprAccess().getSemicolonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaseExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getClausesAssignment_4_1()); }
(rule__CaseExpr__ClausesAssignment_4_1)
{ after(grammarAccess.getCaseExprAccess().getClausesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CrClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group__0__Impl
	rule__CrClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getExprAssignment_0()); }
(rule__CrClause__ExprAssignment_0)
{ after(grammarAccess.getCrClauseAccess().getExprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group__1__Impl
	rule__CrClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getGroup_1()); }
(rule__CrClause__Group_1__0)?
{ after(grammarAccess.getCrClauseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group__2__Impl
	rule__CrClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getHyphenMinusGreaterThanSignKeyword_2()); }

	'->' 

{ after(grammarAccess.getCrClauseAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group__3__Impl
	rule__CrClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getBodyAssignment_3()); }
(rule__CrClause__BodyAssignment_3)
{ after(grammarAccess.getCrClauseAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getGroup_4()); }
(rule__CrClause__Group_4__0)*
{ after(grammarAccess.getCrClauseAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CrClause__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group_1__0__Impl
	rule__CrClause__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getWhenKeyword_1_0()); }

	'when' 

{ after(grammarAccess.getCrClauseAccess().getWhenKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrClause__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getGuardAssignment_1_1()); }
(rule__CrClause__GuardAssignment_1_1)
{ after(grammarAccess.getCrClauseAccess().getGuardAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CrClause__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group_4__0__Impl
	rule__CrClause__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getCrClauseAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CrClause__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CrClause__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getBodyAssignment_4_1()); }
(rule__CrClause__BodyAssignment_4_1)
{ after(grammarAccess.getCrClauseAccess().getBodyAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReceiveExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group__0__Impl
	rule__ReceiveExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getReceiveKeyword_0()); }

	'receive' 

{ after(grammarAccess.getReceiveExprAccess().getReceiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group__1__Impl
	rule__ReceiveExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAlternatives_1()); }
(rule__ReceiveExpr__Alternatives_1)
{ after(grammarAccess.getReceiveExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getReceiveExprAccess().getEndKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReceiveExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0__0__Impl
	rule__ReceiveExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getClausesAssignment_1_0_0()); }
(rule__ReceiveExpr__ClausesAssignment_1_0_0)
{ after(grammarAccess.getReceiveExprAccess().getClausesAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0__1__Impl
	rule__ReceiveExpr__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getGroup_1_0_1()); }
(rule__ReceiveExpr__Group_1_0_1__0)*
{ after(grammarAccess.getReceiveExprAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getGroup_1_0_2()); }
(rule__ReceiveExpr__Group_1_0_2__0)?
{ after(grammarAccess.getReceiveExprAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReceiveExpr__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_1__0__Impl
	rule__ReceiveExpr__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getSemicolonKeyword_1_0_1_0()); }

	';' 

{ after(grammarAccess.getReceiveExprAccess().getSemicolonKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getClausesAssignment_1_0_1_1()); }
(rule__ReceiveExpr__ClausesAssignment_1_0_1_1)
{ after(grammarAccess.getReceiveExprAccess().getClausesAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReceiveExpr__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_2__0__Impl
	rule__ReceiveExpr__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfterKeyword_1_0_2_0()); }

	'after' 

{ after(grammarAccess.getReceiveExprAccess().getAfterKeyword_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_2__1__Impl
	rule__ReceiveExpr__Group_1_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_exprAssignment_1_0_2_1()); }
(rule__ReceiveExpr__After_exprAssignment_1_0_2_1)
{ after(grammarAccess.getReceiveExprAccess().getAfter_exprAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_2__2__Impl
	rule__ReceiveExpr__Group_1_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getHyphenMinusGreaterThanSignKeyword_1_0_2_2()); }

	'->' 

{ after(grammarAccess.getReceiveExprAccess().getHyphenMinusGreaterThanSignKeyword_1_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_2__3__Impl
	rule__ReceiveExpr__Group_1_0_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_0_2_3()); }
(rule__ReceiveExpr__After_bodyAssignment_1_0_2_3)
{ after(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_0_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_0_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getGroup_1_0_2_4()); }
(rule__ReceiveExpr__Group_1_0_2_4__0)*
{ after(grammarAccess.getReceiveExprAccess().getGroup_1_0_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ReceiveExpr__Group_1_0_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_2_4__0__Impl
	rule__ReceiveExpr__Group_1_0_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getCommaKeyword_1_0_2_4_0()); }

	',' 

{ after(grammarAccess.getReceiveExprAccess().getCommaKeyword_1_0_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_0_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_0_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_0_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_0_2_4_1()); }
(rule__ReceiveExpr__After_bodyAssignment_1_0_2_4_1)
{ after(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_0_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReceiveExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_1__0__Impl
	rule__ReceiveExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfterKeyword_1_1_0()); }

	'after' 

{ after(grammarAccess.getReceiveExprAccess().getAfterKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_1__1__Impl
	rule__ReceiveExpr__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_exprAssignment_1_1_1()); }
(rule__ReceiveExpr__After_exprAssignment_1_1_1)
{ after(grammarAccess.getReceiveExprAccess().getAfter_exprAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_1__2__Impl
	rule__ReceiveExpr__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getHyphenMinusGreaterThanSignKeyword_1_1_2()); }

	'->' 

{ after(grammarAccess.getReceiveExprAccess().getHyphenMinusGreaterThanSignKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_1__3__Impl
	rule__ReceiveExpr__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_1_3()); }
(rule__ReceiveExpr__After_bodyAssignment_1_1_3)
{ after(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getGroup_1_1_4()); }
(rule__ReceiveExpr__Group_1_1_4__0)*
{ after(grammarAccess.getReceiveExprAccess().getGroup_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ReceiveExpr__Group_1_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_1_4__0__Impl
	rule__ReceiveExpr__Group_1_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getCommaKeyword_1_1_4_0()); }

	',' 

{ after(grammarAccess.getReceiveExprAccess().getCommaKeyword_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveExpr__Group_1_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceiveExpr__Group_1_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__Group_1_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_1_4_1()); }
(rule__ReceiveExpr__After_bodyAssignment_1_1_4_1)
{ after(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunExpr__Group__0__Impl
	rule__FunExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunExprAccess().getFunKeyword_0()); }

	'fun' 

{ after(grammarAccess.getFunExprAccess().getFunKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunExprAccess().getAlternatives_1()); }
(rule__FunExpr__Alternatives_1)
{ after(grammarAccess.getFunExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunRef__Group__0__Impl
	rule__FunRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getGroup_0()); }
(rule__FunRef__Group_0__0)?
{ after(grammarAccess.getFunRefAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunRef__Group__1__Impl
	rule__FunRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getFunctionAssignment_1()); }
(rule__FunRef__FunctionAssignment_1)
{ after(grammarAccess.getFunRefAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunRef__Group__2__Impl
	rule__FunRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getSolidusKeyword_2()); }

	'/' 

{ after(grammarAccess.getFunRefAccess().getSolidusKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunRef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getArityAssignment_3()); }
(rule__FunRef__ArityAssignment_3)
{ after(grammarAccess.getFunRefAccess().getArityAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunRef__Group_0__0__Impl
	rule__FunRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getModuleAssignment_0_0()); }
(rule__FunRef__ModuleAssignment_0_0)
{ after(grammarAccess.getFunRefAccess().getModuleAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getFunRefAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InlineFun__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineFun__Group__0__Impl
	rule__InlineFun__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFun__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineFunAccess().getClausesAssignment_0()); }
(rule__InlineFun__ClausesAssignment_0)
{ after(grammarAccess.getInlineFunAccess().getClausesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineFun__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineFun__Group__1__Impl
	rule__InlineFun__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFun__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineFunAccess().getGroup_1()); }
(rule__InlineFun__Group_1__0)*
{ after(grammarAccess.getInlineFunAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineFun__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineFun__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFun__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineFunAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getInlineFunAccess().getEndKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InlineFun__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineFun__Group_1__0__Impl
	rule__InlineFun__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFun__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineFunAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getInlineFunAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InlineFun__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InlineFun__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFun__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineFunAccess().getClausesAssignment_1_1()); }
(rule__InlineFun__ClausesAssignment_1_1)
{ after(grammarAccess.getInlineFunAccess().getClausesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group__0__Impl
	rule__TryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getTryKeyword_0()); }

	'try' 

{ after(grammarAccess.getTryExprAccess().getTryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group__1__Impl
	rule__TryExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getBodyAssignment_1()); }
(rule__TryExpr__BodyAssignment_1)
{ after(grammarAccess.getTryExprAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group__2__Impl
	rule__TryExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getGroup_2()); }
(rule__TryExpr__Group_2__0)*
{ after(grammarAccess.getTryExprAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group__3__Impl
	rule__TryExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getGroup_3()); }
(rule__TryExpr__Group_3__0)?
{ after(grammarAccess.getTryExprAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group__4__Impl
	rule__TryExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAlternatives_4()); }
(rule__TryExpr__Alternatives_4)
{ after(grammarAccess.getTryExprAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getTryExprAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TryExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_2__0__Impl
	rule__TryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTryExprAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getBodyAssignment_2_1()); }
(rule__TryExpr__BodyAssignment_2_1)
{ after(grammarAccess.getTryExprAccess().getBodyAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_3__0__Impl
	rule__TryExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getOfKeyword_3_0()); }

	'of' 

{ after(grammarAccess.getTryExprAccess().getOfKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_3__1__Impl
	rule__TryExpr__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getOf_clausesAssignment_3_1()); }
(rule__TryExpr__Of_clausesAssignment_3_1)
{ after(grammarAccess.getTryExprAccess().getOf_clausesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getGroup_3_2()); }
(rule__TryExpr__Group_3_2__0)*
{ after(grammarAccess.getTryExprAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TryExpr__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_3_2__0__Impl
	rule__TryExpr__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getSemicolonKeyword_3_2_0()); }

	';' 

{ after(grammarAccess.getTryExprAccess().getSemicolonKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getOf_clausesAssignment_3_2_1()); }
(rule__TryExpr__Of_clausesAssignment_3_2_1)
{ after(grammarAccess.getTryExprAccess().getOf_clausesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryExpr__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0__0__Impl
	rule__TryExpr__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getCatchKeyword_4_0_0()); }

	'catch' 

{ after(grammarAccess.getTryExprAccess().getCatchKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0__1__Impl
	rule__TryExpr__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getCatchAssignment_4_0_1()); }
(rule__TryExpr__CatchAssignment_4_0_1)
{ after(grammarAccess.getTryExprAccess().getCatchAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0__2__Impl
	rule__TryExpr__Group_4_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getGroup_4_0_2()); }
(rule__TryExpr__Group_4_0_2__0)*
{ after(grammarAccess.getTryExprAccess().getGroup_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getGroup_4_0_3()); }
(rule__TryExpr__Group_4_0_3__0)?
{ after(grammarAccess.getTryExprAccess().getGroup_4_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TryExpr__Group_4_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0_2__0__Impl
	rule__TryExpr__Group_4_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getSemicolonKeyword_4_0_2_0()); }

	';' 

{ after(grammarAccess.getTryExprAccess().getSemicolonKeyword_4_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getCatchAssignment_4_0_2_1()); }
(rule__TryExpr__CatchAssignment_4_0_2_1)
{ after(grammarAccess.getTryExprAccess().getCatchAssignment_4_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryExpr__Group_4_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0_3__0__Impl
	rule__TryExpr__Group_4_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfterKeyword_4_0_3_0()); }

	'after' 

{ after(grammarAccess.getTryExprAccess().getAfterKeyword_4_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0_3__1__Impl
	rule__TryExpr__Group_4_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_4_0_3_1()); }
(rule__TryExpr__After_bodyAssignment_4_0_3_1)
{ after(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_4_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getGroup_4_0_3_2()); }
(rule__TryExpr__Group_4_0_3_2__0)*
{ after(grammarAccess.getTryExprAccess().getGroup_4_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TryExpr__Group_4_0_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0_3_2__0__Impl
	rule__TryExpr__Group_4_0_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getCommaKeyword_4_0_3_2_0()); }

	',' 

{ after(grammarAccess.getTryExprAccess().getCommaKeyword_4_0_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_0_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_0_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_0_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_4_0_3_2_1()); }
(rule__TryExpr__After_bodyAssignment_4_0_3_2_1)
{ after(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_4_0_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryExpr__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_1__0__Impl
	rule__TryExpr__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfterKeyword_4_1_0()); }

	'after' 

{ after(grammarAccess.getTryExprAccess().getAfterKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_1__1__Impl
	rule__TryExpr__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_4_1_1()); }
(rule__TryExpr__After_bodyAssignment_4_1_1)
{ after(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getGroup_4_1_2()); }
(rule__TryExpr__Group_4_1_2__0)*
{ after(grammarAccess.getTryExprAccess().getGroup_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TryExpr__Group_4_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_1_2__0__Impl
	rule__TryExpr__Group_4_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getCommaKeyword_4_1_2_0()); }

	',' 

{ after(grammarAccess.getTryExprAccess().getCommaKeyword_4_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryExpr__Group_4_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryExpr__Group_4_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Group_4_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_4_1_2_1()); }
(rule__TryExpr__After_bodyAssignment_4_1_2_1)
{ after(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_4_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group__0__Impl
	rule__TryClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getGroup_0()); }
(rule__TryClause__Group_0__0)?
{ after(grammarAccess.getTryClauseAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group__1__Impl
	rule__TryClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getCondAssignment_1()); }
(rule__TryClause__CondAssignment_1)
{ after(grammarAccess.getTryClauseAccess().getCondAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group__2__Impl
	rule__TryClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getGroup_2()); }
(rule__TryClause__Group_2__0)?
{ after(grammarAccess.getTryClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group__3__Impl
	rule__TryClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getHyphenMinusGreaterThanSignKeyword_3()); }

	'->' 

{ after(grammarAccess.getTryClauseAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group__4__Impl
	rule__TryClause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getBodyAssignment_4()); }
(rule__TryClause__BodyAssignment_4)
{ after(grammarAccess.getTryClauseAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryClause__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getGroup_5()); }
(rule__TryClause__Group_5__0)*
{ after(grammarAccess.getTryClauseAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TryClause__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getGroup_0_0()); }
(rule__TryClause__Group_0_0__0)
{ after(grammarAccess.getTryClauseAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TryClause__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group_0_0__0__Impl
	rule__TryClause__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getHdrAssignment_0_0_0()); }
(rule__TryClause__HdrAssignment_0_0_0)
{ after(grammarAccess.getTryClauseAccess().getHdrAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryClause__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getColonKeyword_0_0_1()); }

	':' 

{ after(grammarAccess.getTryClauseAccess().getColonKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group_2__0__Impl
	rule__TryClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getWhenKeyword_2_0()); }

	'when' 

{ after(grammarAccess.getTryClauseAccess().getWhenKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getGuardAssignment_2_1()); }
(rule__TryClause__GuardAssignment_2_1)
{ after(grammarAccess.getTryClauseAccess().getGuardAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryClause__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group_5__0__Impl
	rule__TryClause__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getTryClauseAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryClause__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryClause__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getBodyAssignment_5_1()); }
(rule__TryClause__BodyAssignment_5_1)
{ after(grammarAccess.getTryClauseAccess().getBodyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__List__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group__0__Impl
	rule__List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getListAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group__1__Impl
	rule__List__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getAlternatives_1()); }
(rule__List__Alternatives_1)
{ after(grammarAccess.getListAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getListAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__List__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_1_1__0__Impl
	rule__List__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getElementsAssignment_1_1_0()); }
(rule__List__ElementsAssignment_1_1_0)
{ after(grammarAccess.getListAccess().getElementsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_1_1__1__Impl
	rule__List__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getGroup_1_1_1()); }
(rule__List__Group_1_1_1__0)*
{ after(grammarAccess.getListAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getGroup_1_1_2()); }
(rule__List__Group_1_1_2__0)?
{ after(grammarAccess.getListAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__List__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_1_1_1__0__Impl
	rule__List__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getListAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getElementsAssignment_1_1_1_1()); }
(rule__List__ElementsAssignment_1_1_1_1)
{ after(grammarAccess.getListAccess().getElementsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__List__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_1_1_2__0__Impl
	rule__List__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getVerticalLineKeyword_1_1_2_0()); }

	'|' 

{ after(grammarAccess.getListAccess().getVerticalLineKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getTailAssignment_1_1_2_1()); }
(rule__List__TailAssignment_1_1_2_1)
{ after(grammarAccess.getListAccess().getTailAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListComprehension__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComprehension__Group__0__Impl
	rule__ListComprehension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getListComprehensionAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehension__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComprehension__Group__1__Impl
	rule__ListComprehension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getElementAssignment_1()); }
(rule__ListComprehension__ElementAssignment_1)
{ after(grammarAccess.getListComprehensionAccess().getElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehension__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComprehension__Group__2__Impl
	rule__ListComprehension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getVerticalLineVerticalLineKeyword_2()); }

	'||' 

{ after(grammarAccess.getListComprehensionAccess().getVerticalLineVerticalLineKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehension__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComprehension__Group__3__Impl
	rule__ListComprehension__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getGeneratorsAssignment_3()); }
(rule__ListComprehension__GeneratorsAssignment_3)
{ after(grammarAccess.getListComprehensionAccess().getGeneratorsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehension__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComprehension__Group__4__Impl
	rule__ListComprehension__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getGroup_4()); }
(rule__ListComprehension__Group_4__0)*
{ after(grammarAccess.getListComprehensionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehension__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComprehension__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getListComprehensionAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ListComprehension__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComprehension__Group_4__0__Impl
	rule__ListComprehension__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getListComprehensionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListComprehension__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListComprehension__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getGeneratorsAssignment_4_1()); }
(rule__ListComprehension__GeneratorsAssignment_4_1)
{ after(grammarAccess.getListComprehensionAccess().getGeneratorsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Tuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__0__Impl
	rule__Tuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getTupleAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__1__Impl
	rule__Tuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getAlternatives_1()); }
(rule__Tuple__Alternatives_1)
{ after(grammarAccess.getTupleAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getTupleAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Tuple__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group_1_1__0__Impl
	rule__Tuple__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getElementsAssignment_1_1_0()); }
(rule__Tuple__ElementsAssignment_1_1_0)
{ after(grammarAccess.getTupleAccess().getElementsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getGroup_1_1_1()); }
(rule__Tuple__Group_1_1_1__0)*
{ after(grammarAccess.getTupleAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Tuple__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group_1_1_1__0__Impl
	rule__Tuple__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getTupleAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getElementsAssignment_1_1_1_1()); }
(rule__Tuple__ElementsAssignment_1_1_1_1)
{ after(grammarAccess.getTupleAccess().getElementsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryComprehension__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryComprehension__Group__0__Impl
	rule__BinaryComprehension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getLessThanSignLessThanSignKeyword_0()); }

	'<<' 

{ after(grammarAccess.getBinaryComprehensionAccess().getLessThanSignLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryComprehension__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryComprehension__Group__1__Impl
	rule__BinaryComprehension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getExprAssignment_1()); }
(rule__BinaryComprehension__ExprAssignment_1)
{ after(grammarAccess.getBinaryComprehensionAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryComprehension__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryComprehension__Group__2__Impl
	rule__BinaryComprehension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getVerticalLineVerticalLineKeyword_2()); }

	'||' 

{ after(grammarAccess.getBinaryComprehensionAccess().getVerticalLineVerticalLineKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryComprehension__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryComprehension__Group__3__Impl
	rule__BinaryComprehension__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getGeneratorsAssignment_3()); }
(rule__BinaryComprehension__GeneratorsAssignment_3)
{ after(grammarAccess.getBinaryComprehensionAccess().getGeneratorsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryComprehension__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryComprehension__Group__4__Impl
	rule__BinaryComprehension__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getGroup_4()); }
(rule__BinaryComprehension__Group_4__0)*
{ after(grammarAccess.getBinaryComprehensionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryComprehension__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryComprehension__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getGreaterThanSignGreaterThanSignKeyword_5()); }

	'>>' 

{ after(grammarAccess.getBinaryComprehensionAccess().getGreaterThanSignGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__BinaryComprehension__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryComprehension__Group_4__0__Impl
	rule__BinaryComprehension__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getBinaryComprehensionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryComprehension__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryComprehension__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getGeneratorsAssignment_4_1()); }
(rule__BinaryComprehension__GeneratorsAssignment_4_1)
{ after(grammarAccess.getBinaryComprehensionAccess().getGeneratorsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Binary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__0__Impl
	rule__Binary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getLessThanSignLessThanSignKeyword_0()); }

	'<<' 

{ after(grammarAccess.getBinaryAccess().getLessThanSignLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__1__Impl
	rule__Binary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getAlternatives_1()); }
(rule__Binary__Alternatives_1)
{ after(grammarAccess.getBinaryAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getGreaterThanSignGreaterThanSignKeyword_2()); }

	'>>' 

{ after(grammarAccess.getBinaryAccess().getGreaterThanSignGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Binary__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_1_1__0__Impl
	rule__Binary__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getElementsAssignment_1_1_0()); }
(rule__Binary__ElementsAssignment_1_1_0)
{ after(grammarAccess.getBinaryAccess().getElementsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getGroup_1_1_1()); }
(rule__Binary__Group_1_1_1__0)*
{ after(grammarAccess.getBinaryAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Binary__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_1_1_1__0__Impl
	rule__Binary__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getBinaryAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getElementsAssignment_1_1_1_1()); }
(rule__Binary__ElementsAssignment_1_1_1_1)
{ after(grammarAccess.getBinaryAccess().getElementsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group__0__Impl
	rule__BinaryItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getExprAssignment_0()); }
(rule__BinaryItem__ExprAssignment_0)
{ after(grammarAccess.getBinaryItemAccess().getExprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group__1__Impl
	rule__BinaryItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getGroup_1()); }
(rule__BinaryItem__Group_1__0)?
{ after(grammarAccess.getBinaryItemAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getGroup_2()); }
(rule__BinaryItem__Group_2__0)?
{ after(grammarAccess.getBinaryItemAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryItem__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group_1__0__Impl
	rule__BinaryItem__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getColonKeyword_1_0()); }
(
	':' 
)
{ after(grammarAccess.getBinaryItemAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryItem__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getSizeAssignment_1_1()); }
(rule__BinaryItem__SizeAssignment_1_1)
{ after(grammarAccess.getBinaryItemAccess().getSizeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryItem__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group_2__0__Impl
	rule__BinaryItem__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getSolidusKeyword_2_0()); }
(
	'/' 
)
{ after(grammarAccess.getBinaryItemAccess().getSolidusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryItem__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group_2__1__Impl
	rule__BinaryItem__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getTypesAssignment_2_1()); }
(rule__BinaryItem__TypesAssignment_2_1)
{ after(grammarAccess.getBinaryItemAccess().getTypesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryItem__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getGroup_2_2()); }
(rule__BinaryItem__Group_2_2__0)*
{ after(grammarAccess.getBinaryItemAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryItem__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group_2_2__0__Impl
	rule__BinaryItem__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getHyphenMinusKeyword_2_2_0()); }

	'-' 

{ after(grammarAccess.getBinaryItemAccess().getHyphenMinusKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryItem__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryItem__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getTypeAssignment_2_2_1()); }
(rule__BinaryItem__TypeAssignment_2_2_1)
{ after(grammarAccess.getBinaryItemAccess().getTypeAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitType__Group__0__Impl
	rule__BitType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitTypeAccess().getNameAssignment_0()); }
(rule__BitType__NameAssignment_0)
{ after(grammarAccess.getBitTypeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitTypeAccess().getGroup_1()); }
(rule__BitType__Group_1__0)?
{ after(grammarAccess.getBitTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitType__Group_1__0__Impl
	rule__BitType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitTypeAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getBitTypeAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitTypeAccess().getSizeAssignment_1_1()); }
(rule__BitType__SizeAssignment_1_1)
{ after(grammarAccess.getBitTypeAccess().getSizeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExprMax__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExprMax__Group_0__0__Impl
	rule__UnaryExprMax__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExprMax__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprMaxAccess().getUnaryExprAction_0_0()); }
(

)
{ after(grammarAccess.getUnaryExprMaxAccess().getUnaryExprAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExprMax__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExprMax__Group_0__1__Impl
	rule__UnaryExprMax__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExprMax__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprMaxAccess().getOpAssignment_0_1()); }
(rule__UnaryExprMax__OpAssignment_0_1)
{ after(grammarAccess.getUnaryExprMaxAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExprMax__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExprMax__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExprMax__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprMaxAccess().getOperandAssignment_0_2()); }
(rule__UnaryExprMax__OperandAssignment_0_2)
{ after(grammarAccess.getUnaryExprMaxAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LCExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LCExpr__Group__0__Impl
	rule__LCExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LCExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCExprAccess().getO1Assignment_0()); }
(rule__LCExpr__O1Assignment_0)
{ after(grammarAccess.getLCExprAccess().getO1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LCExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LCExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LCExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCExprAccess().getGroup_1()); }
(rule__LCExpr__Group_1__0)?
{ after(grammarAccess.getLCExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LCExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LCExpr__Group_1__0__Impl
	rule__LCExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LCExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCExprAccess().getOpAssignment_1_0()); }
(rule__LCExpr__OpAssignment_1_0)
{ after(grammarAccess.getLCExprAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LCExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LCExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LCExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCExprAccess().getO2Assignment_1_1()); }
(rule__LCExpr__O2Assignment_1_1)
{ after(grammarAccess.getLCExprAccess().getO2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Macro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__0__Impl
	rule__Macro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getAlternatives_0()); }
(rule__Macro__Alternatives_0)
{ after(grammarAccess.getMacroAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getAlternatives_1()); }
(rule__Macro__Alternatives_1)
{ after(grammarAccess.getMacroAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FLOAT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__0__Impl
	rule__FLOAT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__1__Impl
	rule__FLOAT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getAlternatives_2()); }
(rule__FLOAT__Alternatives_2)
{ after(grammarAccess.getFLOATAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpecFun__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecFun__Group__0__Impl
	rule__SpecFun__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getGroup_0()); }
(rule__SpecFun__Group_0__0)?
{ after(grammarAccess.getSpecFunAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecFun__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecFun__Group__1__Impl
	rule__SpecFun__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getFunctionAssignment_1()); }
(rule__SpecFun__FunctionAssignment_1)
{ after(grammarAccess.getSpecFunAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecFun__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecFun__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getGroup_2()); }
(rule__SpecFun__Group_2__0)?
{ after(grammarAccess.getSpecFunAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SpecFun__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecFun__Group_0__0__Impl
	rule__SpecFun__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getModuleAssignment_0_0()); }
(rule__SpecFun__ModuleAssignment_0_0)
{ after(grammarAccess.getSpecFunAccess().getModuleAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecFun__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecFun__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getSpecFunAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecFun__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecFun__Group_2__0__Impl
	rule__SpecFun__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getSolidusKeyword_2_0()); }

	'/' 

{ after(grammarAccess.getSpecFunAccess().getSolidusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecFun__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecFun__Group_2__1__Impl
	rule__SpecFun__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getArityAssignment_2_1()); }
(rule__SpecFun__ArityAssignment_2_1)
{ after(grammarAccess.getSpecFunAccess().getArityAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecFun__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecFun__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getColonColonKeyword_2_2()); }

	'::' 

{ after(grammarAccess.getSpecFunAccess().getColonColonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeSig__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSig__Group__0__Impl
	rule__TypeSig__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSig__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSigAccess().getDeclAssignment_0()); }
(rule__TypeSig__DeclAssignment_0)
{ after(grammarAccess.getTypeSigAccess().getDeclAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSig__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSig__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSig__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSigAccess().getGroup_1()); }
(rule__TypeSig__Group_1__0)?
{ after(grammarAccess.getTypeSigAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeSig__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSig__Group_1__0__Impl
	rule__TypeSig__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSig__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSigAccess().getWhenKeyword_1_0()); }

	'when' 

{ after(grammarAccess.getTypeSigAccess().getWhenKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSig__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeSig__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSig__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSigAccess().getGuardsAssignment_1_1()); }
(rule__TypeSig__GuardsAssignment_1_1)
{ after(grammarAccess.getTypeSigAccess().getGuardsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group__0__Impl
	rule__FunType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getFunTypeAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group__1__Impl
	rule__FunType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getGroup_1()); }
(rule__FunType__Group_1__0)?
{ after(grammarAccess.getFunTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group__2__Impl
	rule__FunType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getFunTypeAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group__3__Impl
	rule__FunType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getHyphenMinusGreaterThanSignKeyword_3()); }

	'->' 

{ after(grammarAccess.getFunTypeAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getReturnAssignment_4()); }
(rule__FunType__ReturnAssignment_4)
{ after(grammarAccess.getFunTypeAccess().getReturnAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group_1__0__Impl
	rule__FunType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getArgsAssignment_1_0()); }
(rule__FunType__ArgsAssignment_1_0)
{ after(grammarAccess.getFunTypeAccess().getArgsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getGroup_1_1()); }
(rule__FunType__Group_1_1__0)*
{ after(grammarAccess.getFunTypeAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunType__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group_1_1__0__Impl
	rule__FunType__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getFunTypeAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getArgsAssignment_1_1_1()); }
(rule__FunType__ArgsAssignment_1_1_1)
{ after(grammarAccess.getFunTypeAccess().getArgsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeGuards__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuards__Group__0__Impl
	rule__TypeGuards__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuards__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardsAccess().getItemsAssignment_0()); }
(rule__TypeGuards__ItemsAssignment_0)
{ after(grammarAccess.getTypeGuardsAccess().getItemsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuards__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuards__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuards__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardsAccess().getGroup_1()); }
(rule__TypeGuards__Group_1__0)*
{ after(grammarAccess.getTypeGuardsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeGuards__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuards__Group_1__0__Impl
	rule__TypeGuards__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuards__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTypeGuardsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuards__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuards__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuards__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardsAccess().getItemsAssignment_1_1()); }
(rule__TypeGuards__ItemsAssignment_1_1)
{ after(grammarAccess.getTypeGuardsAccess().getItemsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeGuard__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_0__0__Impl
	rule__TypeGuard__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getNameAssignment_0_0()); }
(rule__TypeGuard__NameAssignment_0_0)
{ after(grammarAccess.getTypeGuardAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuard__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_0__1__Impl
	rule__TypeGuard__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getTypeGuardAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuard__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_0__2__Impl
	rule__TypeGuard__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getTypesAssignment_0_2()); }
(rule__TypeGuard__TypesAssignment_0_2)
{ after(grammarAccess.getTypeGuardAccess().getTypesAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuard__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_0__3__Impl
	rule__TypeGuard__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getGroup_0_3()); }
(rule__TypeGuard__Group_0_3__0)*
{ after(grammarAccess.getTypeGuardAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuard__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getTypeGuardAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeGuard__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_0_3__0__Impl
	rule__TypeGuard__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getCommaKeyword_0_3_0()); }

	',' 

{ after(grammarAccess.getTypeGuardAccess().getCommaKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuard__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getTypesAssignment_0_3_1()); }
(rule__TypeGuard__TypesAssignment_0_3_1)
{ after(grammarAccess.getTypeGuardAccess().getTypesAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeGuard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_1__0__Impl
	rule__TypeGuard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getNameAssignment_1_0()); }
(rule__TypeGuard__NameAssignment_1_0)
{ after(grammarAccess.getTypeGuardAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_1__1__Impl
	rule__TypeGuard__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getColonColonKeyword_1_1()); }

	'::' 

{ after(grammarAccess.getTypeGuardAccess().getColonColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeGuard__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeGuard__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getTypeAssignment_1_2()); }
(rule__TypeGuard__TypeAssignment_1_2)
{ after(grammarAccess.getTypeGuardAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TopType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopType__Group__0__Impl
	rule__TopType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopTypeAccess().getGroup_0()); }
(rule__TopType__Group_0__0)?
{ after(grammarAccess.getTopTypeAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopTypeAccess().getTypeAssignment_1()); }
(rule__TopType__TypeAssignment_1)
{ after(grammarAccess.getTopTypeAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TopType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopType__Group_0__0__Impl
	rule__TopType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopTypeAccess().getVarAssignment_0_0()); }
(rule__TopType__VarAssignment_0_0)
{ after(grammarAccess.getTopTypeAccess().getVarAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopTypeAccess().getColonColonKeyword_0_1()); }

	'::' 

{ after(grammarAccess.getTopTypeAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type100__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type100__Group__0__Impl
	rule__Type100__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getType200ParserRuleCall_0()); }
	ruleType200
{ after(grammarAccess.getType100Access().getType200ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type100__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type100__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getGroup_1()); }
(rule__Type100__Group_1__0)*
{ after(grammarAccess.getType100Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type100__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type100__Group_1__0__Impl
	rule__Type100__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getGroup_1_0()); }
(rule__Type100__Group_1_0__0)
{ after(grammarAccess.getType100Access().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type100__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type100__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getRightOperandAssignment_1_1()); }
(rule__Type100__RightOperandAssignment_1_1)
{ after(grammarAccess.getType100Access().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type100__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type100__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getGroup_1_0_0()); }
(rule__Type100__Group_1_0_0__0)
{ after(grammarAccess.getType100Access().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type100__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type100__Group_1_0_0__0__Impl
	rule__Type100__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getTopTypeLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getType100Access().getTopTypeLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type100__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type100__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getOpAssignment_1_0_0_1()); }
(rule__Type100__OpAssignment_1_0_0_1)
{ after(grammarAccess.getType100Access().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type200__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type200__Group__0__Impl
	rule__Type200__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getType300ParserRuleCall_0()); }
	ruleType300
{ after(grammarAccess.getType200Access().getType300ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type200__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type200__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getGroup_1()); }
(rule__Type200__Group_1__0)*
{ after(grammarAccess.getType200Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type200__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type200__Group_1__0__Impl
	rule__Type200__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getGroup_1_0()); }
(rule__Type200__Group_1_0__0)
{ after(grammarAccess.getType200Access().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type200__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type200__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getRightOperandAssignment_1_1()); }
(rule__Type200__RightOperandAssignment_1_1)
{ after(grammarAccess.getType200Access().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type200__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type200__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getGroup_1_0_0()); }
(rule__Type200__Group_1_0_0__0)
{ after(grammarAccess.getType200Access().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type200__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type200__Group_1_0_0__0__Impl
	rule__Type200__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getTopTypeLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getType200Access().getTopTypeLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type200__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type200__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getOpAssignment_1_0_0_1()); }
(rule__Type200__OpAssignment_1_0_0_1)
{ after(grammarAccess.getType200Access().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type300__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type300__Group__0__Impl
	rule__Type300__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getType400ParserRuleCall_0()); }
	ruleType400
{ after(grammarAccess.getType300Access().getType400ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type300__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type300__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getGroup_1()); }
(rule__Type300__Group_1__0)*
{ after(grammarAccess.getType300Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type300__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type300__Group_1__0__Impl
	rule__Type300__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getGroup_1_0()); }
(rule__Type300__Group_1_0__0)
{ after(grammarAccess.getType300Access().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type300__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type300__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getRightOperandAssignment_1_1()); }
(rule__Type300__RightOperandAssignment_1_1)
{ after(grammarAccess.getType300Access().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type300__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type300__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getGroup_1_0_0()); }
(rule__Type300__Group_1_0_0__0)
{ after(grammarAccess.getType300Access().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type300__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type300__Group_1_0_0__0__Impl
	rule__Type300__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getTopTypeLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getType300Access().getTopTypeLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type300__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type300__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getOpAssignment_1_0_0_1()); }
(rule__Type300__OpAssignment_1_0_0_1)
{ after(grammarAccess.getType300Access().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type400__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type400__Group__0__Impl
	rule__Type400__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getType500ParserRuleCall_0()); }
	ruleType500
{ after(grammarAccess.getType400Access().getType500ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type400__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type400__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getGroup_1()); }
(rule__Type400__Group_1__0)*
{ after(grammarAccess.getType400Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type400__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type400__Group_1__0__Impl
	rule__Type400__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getGroup_1_0()); }
(rule__Type400__Group_1_0__0)
{ after(grammarAccess.getType400Access().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type400__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type400__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getRightOperandAssignment_1_1()); }
(rule__Type400__RightOperandAssignment_1_1)
{ after(grammarAccess.getType400Access().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type400__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type400__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getGroup_1_0_0()); }
(rule__Type400__Group_1_0_0__0)
{ after(grammarAccess.getType400Access().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type400__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type400__Group_1_0_0__0__Impl
	rule__Type400__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getTopTypeLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getType400Access().getTopTypeLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type400__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type400__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getOpAssignment_1_0_0_1()); }
(rule__Type400__OpAssignment_1_0_0_1)
{ after(grammarAccess.getType400Access().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type500__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type500__Group_0__0__Impl
	rule__Type500__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type500__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType500Access().getUnaryTypeAction_0_0()); }
(

)
{ after(grammarAccess.getType500Access().getUnaryTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type500__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type500__Group_0__1__Impl
	rule__Type500__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type500__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType500Access().getOpAssignment_0_1()); }
(rule__Type500__OpAssignment_0_1)
{ after(grammarAccess.getType500Access().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type500__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type500__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type500__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType500Access().getOperandAssignment_0_2()); }
(rule__Type500__OperandAssignment_0_2)
{ after(grammarAccess.getType500Access().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__1__Impl
	rule__Type__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTopTypeParserRuleCall_0_1()); }
	ruleTopType
{ after(grammarAccess.getTypeAccess().getTopTypeParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRemoteTypeAction_1_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getRemoteTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__1__Impl
	rule__Type__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1_1()); }
(rule__Type__Group_1_1__0)?
{ after(grammarAccess.getTypeAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__2__Impl
	rule__Type__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_1_2()); }
(rule__Type__NameAssignment_1_2)
{ after(grammarAccess.getTypeAccess().getNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1_3()); }
(rule__Type__Group_1_3__0)?
{ after(grammarAccess.getTypeAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_1__0__Impl
	rule__Type__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMAssignment_1_1_0()); }
(rule__Type__MAssignment_1_1_0)
{ after(grammarAccess.getTypeAccess().getMAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getColonKeyword_1_1_1()); }

	':' 

{ after(grammarAccess.getTypeAccess().getColonKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3__0__Impl
	rule__Type__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_1_3_0()); }

	'(' 

{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3__1__Impl
	rule__Type__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1_3_1()); }
(rule__Type__Group_1_3_1__0)?
{ after(grammarAccess.getTypeAccess().getGroup_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_1_3_2()); }

	')' 

{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3_1__0__Impl
	rule__Type__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArgsAssignment_1_3_1_0()); }
(rule__Type__ArgsAssignment_1_3_1_0)
{ after(grammarAccess.getTypeAccess().getArgsAssignment_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1_3_1_1()); }
(rule__Type__Group_1_3_1_1__0)*
{ after(grammarAccess.getTypeAccess().getGroup_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_1_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3_1_1__0__Impl
	rule__Type__Group_1_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getCommaKeyword_1_3_1_1_0()); }

	',' 

{ after(grammarAccess.getTypeAccess().getCommaKeyword_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArgsAssignment_1_3_1_1_1()); }
(rule__Type__ArgsAssignment_1_3_1_1_1)
{ after(grammarAccess.getTypeAccess().getArgsAssignment_1_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__0__Impl
	rule__Type__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_4_0()); }

	'[' 

{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__1__Impl
	rule__Type__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getListTypeAction_4_1()); }
(

)
{ after(grammarAccess.getTypeAccess().getListTypeAction_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__2__Impl
	rule__Type__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_4_2()); }
(rule__Type__Group_4_2__0)?
{ after(grammarAccess.getTypeAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_4_3()); }

	']' 

{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4_2__0__Impl
	rule__Type__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_4_2_0()); }
(rule__Type__TypeAssignment_4_2_0)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_4_2_1()); }
(rule__Type__Group_4_2_1__0)?
{ after(grammarAccess.getTypeAccess().getGroup_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_4_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4_2_1__0__Impl
	rule__Type__Group_4_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getCommaKeyword_4_2_1_0()); }

	',' 

{ after(grammarAccess.getTypeAccess().getCommaKeyword_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFullStopFullStopFullStopKeyword_4_2_1_1()); }

	'...' 

{ after(grammarAccess.getTypeAccess().getFullStopFullStopFullStopKeyword_4_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__0__Impl
	rule__Type__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_5_0()); }

	'{' 

{ after(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__1__Impl
	rule__Type__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTupleTypeAction_5_1()); }
(

)
{ after(grammarAccess.getTypeAccess().getTupleTypeAction_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__2__Impl
	rule__Type__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_5_2()); }
(rule__Type__Group_5_2__0)?
{ after(grammarAccess.getTypeAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_5_3()); }

	'}' 

{ after(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5_2__0__Impl
	rule__Type__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesAssignment_5_2_0()); }
(rule__Type__TypesAssignment_5_2_0)
{ after(grammarAccess.getTypeAccess().getTypesAssignment_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_5_2_1()); }
(rule__Type__Group_5_2_1__0)*
{ after(grammarAccess.getTypeAccess().getGroup_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_5_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5_2_1__0__Impl
	rule__Type__Group_5_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getCommaKeyword_5_2_1_0()); }

	',' 

{ after(grammarAccess.getTypeAccess().getCommaKeyword_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_5_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_5_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_5_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesAssignment_5_2_1_1()); }
(rule__Type__TypesAssignment_5_2_1_1)
{ after(grammarAccess.getTypeAccess().getTypesAssignment_5_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__0__Impl
	rule__Type__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNumberSignKeyword_6_0()); }

	'#' 

{ after(grammarAccess.getTypeAccess().getNumberSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__1__Impl
	rule__Type__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRecordTypeAction_6_1()); }
(

)
{ after(grammarAccess.getTypeAccess().getRecordTypeAction_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__2__Impl
	rule__Type__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRecAssignment_6_2()); }
(rule__Type__RecAssignment_6_2)
{ after(grammarAccess.getTypeAccess().getRecAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__3__Impl
	rule__Type__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_6_3()); }

	'{' 

{ after(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__4__Impl
	rule__Type__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_6_4()); }
(rule__Type__Group_6_4__0)?
{ after(grammarAccess.getTypeAccess().getGroup_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_6_5()); }

	'}' 

{ after(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Type__Group_6_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6_4__0__Impl
	rule__Type__Group_6_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFieldsAssignment_6_4_0()); }
(rule__Type__FieldsAssignment_6_4_0)
{ after(grammarAccess.getTypeAccess().getFieldsAssignment_6_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_6_4_1()); }
(rule__Type__Group_6_4_1__0)*
{ after(grammarAccess.getTypeAccess().getGroup_6_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_6_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6_4_1__0__Impl
	rule__Type__Group_6_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getCommaKeyword_6_4_1_0()); }

	',' 

{ after(grammarAccess.getTypeAccess().getCommaKeyword_6_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_6_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_6_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_6_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFieldsAssignment_6_4_1_1()); }
(rule__Type__FieldsAssignment_6_4_1_1)
{ after(grammarAccess.getTypeAccess().getFieldsAssignment_6_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__0__Impl
	rule__Type__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFunKeyword_8_0()); }

	'fun' 

{ after(grammarAccess.getTypeAccess().getFunKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__1__Impl
	rule__Type__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFunTypeAction_8_1()); }
(

)
{ after(grammarAccess.getTypeAccess().getFunTypeAction_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__2__Impl
	rule__Type__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_8_2()); }

	'(' 

{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__3__Impl
	rule__Type__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_8_3()); }
(rule__Type__TypeAssignment_8_3)?
{ after(grammarAccess.getTypeAccess().getTypeAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_8_4()); }

	')' 

{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FieldType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldType__Group__0__Impl
	rule__FieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getNameAssignment_0()); }
(rule__FieldType__NameAssignment_0)
{ after(grammarAccess.getFieldTypeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldType__Group__1__Impl
	rule__FieldType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getColonColonKeyword_1()); }

	'::' 

{ after(grammarAccess.getFieldTypeAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getTypeAssignment_2()); }
(rule__FieldType__TypeAssignment_2)
{ after(grammarAccess.getFieldTypeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryType__Group__0__Impl
	rule__BinaryType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getLessThanSignLessThanSignKeyword_0()); }

	'<<' 

{ after(grammarAccess.getBinaryTypeAccess().getLessThanSignLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryType__Group__1__Impl
	rule__BinaryType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getBinaryTypeAction_1()); }
(

)
{ after(grammarAccess.getBinaryTypeAccess().getBinaryTypeAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryType__Group__2__Impl
	rule__BinaryType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getAlternatives_2()); }
(rule__BinaryType__Alternatives_2)?
{ after(grammarAccess.getBinaryTypeAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getGreaterThanSignGreaterThanSignKeyword_3()); }

	'>>' 

{ after(grammarAccess.getBinaryTypeAccess().getGreaterThanSignGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BinaryType__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryType__Group_2_0__0__Impl
	rule__BinaryType__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_0_0()); }
(rule__BinaryType__TypeAssignment_2_0_0)
{ after(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryType__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryType__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getGroup_2_0_1()); }
(rule__BinaryType__Group_2_0_1__0)?
{ after(grammarAccess.getBinaryTypeAccess().getGroup_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryType__Group_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryType__Group_2_0_1__0__Impl
	rule__BinaryType__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Group_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getCommaKeyword_2_0_1_0()); }

	',' 

{ after(grammarAccess.getBinaryTypeAccess().getCommaKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryType__Group_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryType__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__Group_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_0_1_1()); }
(rule__BinaryType__TypeAssignment_2_0_1_1)
{ after(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinBaseType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinBaseType__Group__0__Impl
	rule__BinBaseType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinBaseType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinBaseTypeAccess().getNameAssignment_0()); }
(rule__BinBaseType__NameAssignment_0)
{ after(grammarAccess.getBinBaseTypeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinBaseType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinBaseType__Group__1__Impl
	rule__BinBaseType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinBaseType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinBaseTypeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getBinBaseTypeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinBaseType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinBaseType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinBaseType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinBaseTypeAccess().getTypeAssignment_2()); }
(rule__BinBaseType__TypeAssignment_2)
{ after(grammarAccess.getBinBaseTypeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinUnitType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinUnitType__Group__0__Impl
	rule__BinUnitType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinUnitType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinUnitTypeAccess().getNameAssignment_0()); }
(rule__BinUnitType__NameAssignment_0)
{ after(grammarAccess.getBinUnitTypeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinUnitType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinUnitType__Group__1__Impl
	rule__BinUnitType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinUnitType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinUnitTypeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getBinUnitTypeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinUnitType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinUnitType__Group__2__Impl
	rule__BinUnitType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinUnitType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinUnitTypeAccess().getMAssignment_2()); }
(rule__BinUnitType__MAssignment_2)
{ after(grammarAccess.getBinUnitTypeAccess().getMAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinUnitType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinUnitType__Group__3__Impl
	rule__BinUnitType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinUnitType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinUnitTypeAccess().getAsteriskKeyword_3()); }

	'*' 

{ after(grammarAccess.getBinUnitTypeAccess().getAsteriskKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinUnitType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinUnitType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinUnitType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinUnitTypeAccess().getTypeAssignment_4()); }
(rule__BinUnitType__TypeAssignment_4)
{ after(grammarAccess.getBinUnitTypeAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunType100__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group__0__Impl
	rule__FunType100__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getFunTypeListAction_0()); }
(

)
{ after(grammarAccess.getFunType100Access().getFunTypeListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType100__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group__1__Impl
	rule__FunType100__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunType100Access().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType100__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group__2__Impl
	rule__FunType100__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getAlternatives_2()); }
(rule__FunType100__Alternatives_2)?
{ after(grammarAccess.getFunType100Access().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType100__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group__3__Impl
	rule__FunType100__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunType100Access().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType100__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group__4__Impl
	rule__FunType100__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getHyphenMinusGreaterThanSignKeyword_4()); }

	'->' 

{ after(grammarAccess.getFunType100Access().getHyphenMinusGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType100__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getReturnAssignment_5()); }
(rule__FunType100__ReturnAssignment_5)
{ after(grammarAccess.getFunType100Access().getReturnAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FunType100__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group_2_1__0__Impl
	rule__FunType100__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getItemsAssignment_2_1_0()); }
(rule__FunType100__ItemsAssignment_2_1_0)
{ after(grammarAccess.getFunType100Access().getItemsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType100__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getGroup_2_1_1()); }
(rule__FunType100__Group_2_1_1__0)*
{ after(grammarAccess.getFunType100Access().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunType100__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group_2_1_1__0__Impl
	rule__FunType100__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getFunType100Access().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunType100__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunType100__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getItemsAssignment_2_1_1_1()); }
(rule__FunType100__ItemsAssignment_2_1_1_1)
{ after(grammarAccess.getFunType100Access().getItemsAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Module__FormsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getFormsFormParserRuleCall_0()); }
	ruleForm{ after(grammarAccess.getModuleAccess().getFormsFormParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Form__CallAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormAccess().getCallMacroCallParserRuleCall_3_1_0()); }
	ruleMacroCall{ after(grammarAccess.getFormAccess().getCallMacroCallParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__ConditionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getConditionIfdefAttributeParserRuleCall_0_0()); }
	ruleIfdefAttribute{ after(grammarAccess.getConditionalFormBlockAccess().getConditionIfdefAttributeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__IfFormsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getIfFormsFormParserRuleCall_1_0()); }
	ruleForm{ after(grammarAccess.getConditionalFormBlockAccess().getIfFormsFormParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__HasElseAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getHasElseElseAttributeParserRuleCall_2_0_0()); }
	ruleElseAttribute{ after(grammarAccess.getConditionalFormBlockAccess().getHasElseElseAttributeParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__ElseFormsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getElseFormsFormParserRuleCall_2_1_0()); }
	ruleForm{ after(grammarAccess.getConditionalFormBlockAccess().getElseFormsFormParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalFormBlock__EndAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalFormBlockAccess().getEndEndifAttributeParserRuleCall_3_0()); }
	ruleEndifAttribute{ after(grammarAccess.getConditionalFormBlockAccess().getEndEndifAttributeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getTagDefineKeyword_1_0()); }
(
{ before(grammarAccess.getDefineAttributeAccess().getTagDefineKeyword_1_0()); }

	'define' 

{ after(grammarAccess.getDefineAttributeAccess().getTagDefineKeyword_1_0()); }
)

{ after(grammarAccess.getDefineAttributeAccess().getTagDefineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__MacroNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getMacroNameAtomVarParserRuleCall_3_0()); }
	ruleAtomVar{ after(grammarAccess.getDefineAttributeAccess().getMacroNameAtomVarParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__ArgsAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getArgsPatternExpressionParserRuleCall_4_1_0_0()); }
	rulePatternExpression{ after(grammarAccess.getDefineAttributeAccess().getArgsPatternExpressionParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__ArgsAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getArgsPatternExpressionParserRuleCall_4_1_1_1_0()); }
	rulePatternExpression{ after(grammarAccess.getDefineAttributeAccess().getArgsPatternExpressionParserRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineAttribute__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineAttributeAccess().getValueGuardParserRuleCall_5_1_0()); }
	ruleGuard{ after(grammarAccess.getDefineAttributeAccess().getValueGuardParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UndefAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefAttributeAccess().getTagUndefKeyword_1_0()); }
(
{ before(grammarAccess.getUndefAttributeAccess().getTagUndefKeyword_1_0()); }

	'undef' 

{ after(grammarAccess.getUndefAttributeAccess().getTagUndefKeyword_1_0()); }
)

{ after(grammarAccess.getUndefAttributeAccess().getTagUndefKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UndefAttribute__RefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefAttributeAccess().getRefDefineAttributeCrossReference_3_0()); }
(
{ before(grammarAccess.getUndefAttributeAccess().getRefDefineAttributeAtomVarParserRuleCall_3_0_1()); }
	ruleAtomVar{ after(grammarAccess.getUndefAttributeAccess().getRefDefineAttributeAtomVarParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getUndefAttributeAccess().getRefDefineAttributeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfdefAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getTagAlternatives_1_0()); }
(rule__IfdefAttribute__TagAlternatives_1_0)
{ after(grammarAccess.getIfdefAttributeAccess().getTagAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfdefAttribute__RefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfdefAttributeAccess().getRefDefineAttributeCrossReference_3_0()); }
(
{ before(grammarAccess.getIfdefAttributeAccess().getRefDefineAttributeAtomVarParserRuleCall_3_0_1()); }
	ruleAtomVar{ after(grammarAccess.getIfdefAttributeAccess().getRefDefineAttributeAtomVarParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getIfdefAttributeAccess().getRefDefineAttributeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EndifAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndifAttributeAccess().getTagEndifKeyword_1_0()); }
(
{ before(grammarAccess.getEndifAttributeAccess().getTagEndifKeyword_1_0()); }

	'endif' 

{ after(grammarAccess.getEndifAttributeAccess().getTagEndifKeyword_1_0()); }
)

{ after(grammarAccess.getEndifAttributeAccess().getTagEndifKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAttributeAccess().getTagElseKeyword_1_0()); }
(
{ before(grammarAccess.getElseAttributeAccess().getTagElseKeyword_1_0()); }

	'else' 

{ after(grammarAccess.getElseAttributeAccess().getTagElseKeyword_1_0()); }
)

{ after(grammarAccess.getElseAttributeAccess().getTagElseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAttributeAccess().getTagIncludeKeyword_1_0()); }
(
{ before(grammarAccess.getIncludeAttributeAccess().getTagIncludeKeyword_1_0()); }

	'include' 

{ after(grammarAccess.getIncludeAttributeAccess().getTagIncludeKeyword_1_0()); }
)

{ after(grammarAccess.getIncludeAttributeAccess().getTagIncludeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeAttribute__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAttributeAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getIncludeAttributeAccess().getValueSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getTagInclude_libKeyword_1_0()); }
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getTagInclude_libKeyword_1_0()); }

	'include_lib' 

{ after(grammarAccess.getIncludeLibAttributeAccess().getTagInclude_libKeyword_1_0()); }
)

{ after(grammarAccess.getIncludeLibAttributeAccess().getTagInclude_libKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibAttribute__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibAttributeAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getIncludeLibAttributeAccess().getValueSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getTagFileKeyword_1_0()); }
(
{ before(grammarAccess.getFileAttributeAccess().getTagFileKeyword_1_0()); }

	'file' 

{ after(grammarAccess.getFileAttributeAccess().getTagFileKeyword_1_0()); }
)

{ after(grammarAccess.getFileAttributeAccess().getTagFileKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__FileAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getFileSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getFileAttributeAccess().getFileSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileAttribute__LineAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileAttributeAccess().getLineINTEGERParserRuleCall_5_0()); }
	ruleINTEGER{ after(grammarAccess.getFileAttributeAccess().getLineINTEGERParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAttributeAccess().getTagModuleKeyword_1_0()); }
(
{ before(grammarAccess.getModuleAttributeAccess().getTagModuleKeyword_1_0()); }

	'module' 

{ after(grammarAccess.getModuleAttributeAccess().getTagModuleKeyword_1_0()); }
)

{ after(grammarAccess.getModuleAttributeAccess().getTagModuleKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleAttribute__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAttributeAccess().getNameNameParserRuleCall_3_0()); }
	ruleName{ after(grammarAccess.getModuleAttributeAccess().getNameNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getTagRecordKeyword_1_0()); }
(
{ before(grammarAccess.getRecordAttributeAccess().getTagRecordKeyword_1_0()); }

	'record' 

{ after(grammarAccess.getRecordAttributeAccess().getTagRecordKeyword_1_0()); }
)

{ after(grammarAccess.getRecordAttributeAccess().getTagRecordKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getNameNameVarParserRuleCall_3_0()); }
	ruleNameVar{ after(grammarAccess.getRecordAttributeAccess().getNameNameVarParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__FieldsAssignment_5_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getFieldsRecordFieldDefParserRuleCall_5_0_1_0_0()); }
	ruleRecordFieldDef{ after(grammarAccess.getRecordAttributeAccess().getFieldsRecordFieldDefParserRuleCall_5_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__FieldsAssignment_5_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getFieldsRecordFieldDefParserRuleCall_5_0_1_1_1_0()); }
	ruleRecordFieldDef{ after(grammarAccess.getRecordAttributeAccess().getFieldsRecordFieldDefParserRuleCall_5_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAttribute__RecordMacroAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAttributeAccess().getRecordMacroDefineAttributeCrossReference_5_1_0()); }
(
{ before(grammarAccess.getRecordAttributeAccess().getRecordMacroDefineAttributeMacroParserRuleCall_5_1_0_1()); }
	ruleMacro{ after(grammarAccess.getRecordAttributeAccess().getRecordMacroDefineAttributeMacroParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getRecordAttributeAccess().getRecordMacroDefineAttributeCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getTagExportKeyword_1_0()); }
(
{ before(grammarAccess.getExportAttributeAccess().getTagExportKeyword_1_0()); }

	'export' 

{ after(grammarAccess.getExportAttributeAccess().getTagExportKeyword_1_0()); }
)

{ after(grammarAccess.getExportAttributeAccess().getTagExportKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__FunsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getFunsFunRefParserRuleCall_4_0_0()); }
	ruleFunRef{ after(grammarAccess.getExportAttributeAccess().getFunsFunRefParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportAttribute__FunsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAttributeAccess().getFunsFunRefParserRuleCall_4_1_1_0()); }
	ruleFunRef{ after(grammarAccess.getExportAttributeAccess().getFunsFunRefParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getTagImportKeyword_1_0()); }
(
{ before(grammarAccess.getImportAttributeAccess().getTagImportKeyword_1_0()); }

	'import' 

{ after(grammarAccess.getImportAttributeAccess().getTagImportKeyword_1_0()); }
)

{ after(grammarAccess.getImportAttributeAccess().getTagImportKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__ModuleAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getModuleNameParserRuleCall_3_0()); }
	ruleName{ after(grammarAccess.getImportAttributeAccess().getModuleNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__FunsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getFunsFunRefParserRuleCall_6_0_0()); }
	ruleFunRef{ after(grammarAccess.getImportAttributeAccess().getFunsFunRefParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAttribute__FunsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAttributeAccess().getFunsFunRefParserRuleCall_6_1_1_0()); }
	ruleFunRef{ after(grammarAccess.getImportAttributeAccess().getFunsFunRefParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompileAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompileAttributeAccess().getTagCompileKeyword_1_0()); }
(
{ before(grammarAccess.getCompileAttributeAccess().getTagCompileKeyword_1_0()); }

	'compile' 

{ after(grammarAccess.getCompileAttributeAccess().getTagCompileKeyword_1_0()); }
)

{ after(grammarAccess.getCompileAttributeAccess().getTagCompileKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompileAttribute__OptionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompileAttributeAccess().getOptionsExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getCompileAttributeAccess().getOptionsExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getTagAlternatives_1_0()); }
(rule__SpecAttribute__TagAlternatives_1_0)
{ after(grammarAccess.getSpecAttributeAccess().getTagAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__RefAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getRefSpecFunParserRuleCall_2_0_0_0()); }
	ruleSpecFun{ after(grammarAccess.getSpecAttributeAccess().getRefSpecFunParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__SignaturesAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSignaturesTypeSigParserRuleCall_2_0_1_0()); }
	ruleTypeSig{ after(grammarAccess.getSpecAttributeAccess().getSignaturesTypeSigParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__SignaturesAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSignaturesTypeSigParserRuleCall_2_0_2_1_0()); }
	ruleTypeSig{ after(grammarAccess.getSpecAttributeAccess().getSignaturesTypeSigParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__RefAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getRefSpecFunParserRuleCall_2_1_1_0()); }
	ruleSpecFun{ after(grammarAccess.getSpecAttributeAccess().getRefSpecFunParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__SignaturesAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSignaturesTypeSigParserRuleCall_2_1_2_0()); }
	ruleTypeSig{ after(grammarAccess.getSpecAttributeAccess().getSignaturesTypeSigParserRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecAttribute__SignaturesAssignment_2_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecAttributeAccess().getSignaturesTypeSigParserRuleCall_2_1_3_1_0()); }
	ruleTypeSig{ after(grammarAccess.getSpecAttributeAccess().getSignaturesTypeSigParserRuleCall_2_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getTagAlternatives_1_0()); }
(rule__TypeAttribute__TagAlternatives_1_0)
{ after(grammarAccess.getTypeAttributeAccess().getTagAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__NameAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getNameNameVarParserRuleCall_2_0_0_0()); }
	ruleNameVar{ after(grammarAccess.getTypeAttributeAccess().getNameNameVarParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__ArgsAssignment_2_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getArgsPatternExpressionParserRuleCall_2_0_2_0_0()); }
	rulePatternExpression{ after(grammarAccess.getTypeAttributeAccess().getArgsPatternExpressionParserRuleCall_2_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__ArgsAssignment_2_0_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getArgsPatternExpressionParserRuleCall_2_0_2_1_1_0()); }
	rulePatternExpression{ after(grammarAccess.getTypeAttributeAccess().getArgsPatternExpressionParserRuleCall_2_0_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__TypeAssignment_2_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getTypeTopTypeParserRuleCall_2_0_5_0()); }
	ruleTopType{ after(grammarAccess.getTypeAttributeAccess().getTypeTopTypeParserRuleCall_2_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__NameAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getNameNameVarParserRuleCall_2_1_1_0()); }
	ruleNameVar{ after(grammarAccess.getTypeAttributeAccess().getNameNameVarParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__ArgsAssignment_2_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getArgsPatternExpressionParserRuleCall_2_1_3_0_0()); }
	rulePatternExpression{ after(grammarAccess.getTypeAttributeAccess().getArgsPatternExpressionParserRuleCall_2_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__ArgsAssignment_2_1_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getArgsPatternExpressionParserRuleCall_2_1_3_1_1_0()); }
	rulePatternExpression{ after(grammarAccess.getTypeAttributeAccess().getArgsPatternExpressionParserRuleCall_2_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAttribute__TypeAssignment_2_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAttributeAccess().getTypeTopTypeParserRuleCall_2_1_6_0()); }
	ruleTopType{ after(grammarAccess.getTypeAttributeAccess().getTypeTopTypeParserRuleCall_2_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__TagAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getTagATOMTerminalRuleCall_1_0()); }
	RULE_ATOM{ after(grammarAccess.getCustomAttributeAccess().getTagATOMTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__ValueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getValueExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getCustomAttributeAccess().getValueExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttribute__ValueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributeAccess().getValueExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getCustomAttributeAccess().getValueExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAtomKwParserRuleCall_0_0()); }
	ruleAtomKw{ after(grammarAccess.getFunctionAccess().getNameAtomKwParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ClausesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getClausesFunctionClauseParserRuleCall_1_0()); }
	ruleFunctionClause{ after(grammarAccess.getFunctionAccess().getClausesFunctionClauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ClausesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getClausesFunctionClauseParserRuleCall_2_1_0()); }
	ruleFunctionClause{ after(grammarAccess.getFunctionAccess().getClausesFunctionClauseParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getRefAtomKwParserRuleCall_0_0()); }
	ruleAtomKw{ after(grammarAccess.getFunctionClauseAccess().getRefAtomKwParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__ParamsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getParamsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getFunctionClauseAccess().getParamsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__ParamsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getParamsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionClauseAccess().getParamsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__GuardAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getGuardGuardParserRuleCall_4_1_0()); }
	ruleGuard{ after(grammarAccess.getFunctionClauseAccess().getGuardGuardParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getBodyLExpressionParserRuleCall_6_0()); }
	ruleLExpression{ after(grammarAccess.getFunctionClauseAccess().getBodyLExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionClause__BodyAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionClauseAccess().getBodyLExpressionParserRuleCall_7_1_0()); }
	ruleLExpression{ after(grammarAccess.getFunctionClauseAccess().getBodyLExpressionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__GuardsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getGuardsExpressionsParserRuleCall_0_0()); }
	ruleExpressions{ after(grammarAccess.getGuardAccess().getGuardsExpressionsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__GuardsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getGuardsExpressionsParserRuleCall_1_1_0()); }
	ruleExpressions{ after(grammarAccess.getGuardAccess().getGuardsExpressionsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expressions__ExprsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsAccess().getExprsLExpressionParserRuleCall_0_0()); }
	ruleLExpression{ after(grammarAccess.getExpressionsAccess().getExprsLExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expressions__ExprsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsAccess().getExprsLExpressionParserRuleCall_1_1_0()); }
	ruleLExpression{ after(grammarAccess.getExpressionsAccess().getExprsLExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LExpression__LineAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLExpressionAccess().getLineLineExprParserRuleCall_0_0_0()); }
	ruleLineExpr{ after(grammarAccess.getLExpressionAccess().getLineLineExprParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LExpression__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLExpressionAccess().getExprExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getLExpressionAccess().getExprExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_0_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getOpEqualsSignKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getExpr100Access().getOpEqualsSignKeyword_1_0_1_0()); }

	'=' 

{ after(grammarAccess.getExpr100Access().getOpEqualsSignKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getExpr100Access().getOpEqualsSignKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__OpRightAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getOpRightExpr100ParserRuleCall_1_0_2_0()); }
	ruleExpr100{ after(grammarAccess.getExpr100Access().getOpRightExpr100ParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__OpAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getOpExclamationMarkKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getExpr100Access().getOpExclamationMarkKeyword_1_1_1_0()); }

	'!' 

{ after(grammarAccess.getExpr100Access().getOpExclamationMarkKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getExpr100Access().getOpExclamationMarkKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr100__OpRightAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr100Access().getOpRightExpr100ParserRuleCall_1_1_2_0()); }
	ruleExpr100{ after(grammarAccess.getExpr100Access().getOpRightExpr100ParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr150__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr150Access().getOpOrelseKeyword_1_1_0()); }
(
{ before(grammarAccess.getExpr150Access().getOpOrelseKeyword_1_1_0()); }

	'orelse' 

{ after(grammarAccess.getExpr150Access().getOpOrelseKeyword_1_1_0()); }
)

{ after(grammarAccess.getExpr150Access().getOpOrelseKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr150__OpRightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr150Access().getOpRightExpr160ParserRuleCall_1_2_0()); }
	ruleExpr160{ after(grammarAccess.getExpr150Access().getOpRightExpr160ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr160__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr160Access().getOpAndalsoKeyword_1_1_0()); }
(
{ before(grammarAccess.getExpr160Access().getOpAndalsoKeyword_1_1_0()); }

	'andalso' 

{ after(grammarAccess.getExpr160Access().getOpAndalsoKeyword_1_1_0()); }
)

{ after(grammarAccess.getExpr160Access().getOpAndalsoKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr160__OpRight2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr160Access().getOpRight2Expr200ParserRuleCall_1_2_0()); }
	ruleExpr200{ after(grammarAccess.getExpr160Access().getOpRight2Expr200ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr200__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr200Access().getOpCompOpParserRuleCall_1_1_0()); }
	ruleCompOp{ after(grammarAccess.getExpr200Access().getOpCompOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr200__OpRightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr200Access().getOpRightExpr300ParserRuleCall_1_2_0()); }
	ruleExpr300{ after(grammarAccess.getExpr200Access().getOpRightExpr300ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr300__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr300Access().getOpListOpParserRuleCall_1_1_0()); }
	ruleListOp{ after(grammarAccess.getExpr300Access().getOpListOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr300__OpRightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr300Access().getOpRightExpr400ParserRuleCall_1_2_0()); }
	ruleExpr400{ after(grammarAccess.getExpr300Access().getOpRightExpr400ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr400__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr400Access().getOpAddOpParserRuleCall_1_1_0()); }
	ruleAddOp{ after(grammarAccess.getExpr400Access().getOpAddOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr400__OpRightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr400Access().getOpRightExpr500ParserRuleCall_1_2_0()); }
	ruleExpr500{ after(grammarAccess.getExpr400Access().getOpRightExpr500ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr500__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr500Access().getOpMultOpParserRuleCall_1_1_0()); }
	ruleMultOp{ after(grammarAccess.getExpr500Access().getOpMultOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr500__OpRightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr500Access().getOpRightUnaryExprParserRuleCall_1_2_0()); }
	ruleUnaryExpr{ after(grammarAccess.getExpr500Access().getOpRightUnaryExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getOpPrefixOpParserRuleCall_0_1_0()); }
	rulePrefixOp{ after(grammarAccess.getUnaryExprAccess().getOpPrefixOpParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getOperandExpr700ParserRuleCall_0_2_0()); }
	ruleExpr700{ after(grammarAccess.getUnaryExprAccess().getOperandExpr700ParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__ArgsAssignment_1_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getArgsExpressionParserRuleCall_1_0_2_0_0()); }
	ruleExpression{ after(grammarAccess.getExpr700Access().getArgsExpressionParserRuleCall_1_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__ArgsAssignment_1_0_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getArgsExpressionParserRuleCall_1_0_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpr700Access().getArgsExpressionParserRuleCall_1_0_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Args2Assignment_1_0_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getArgs2ExpressionParserRuleCall_1_0_4_1_0_0()); }
	ruleExpression{ after(grammarAccess.getExpr700Access().getArgs2ExpressionParserRuleCall_1_0_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__Args2Assignment_1_0_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getArgs2ExpressionParserRuleCall_1_0_4_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpr700Access().getArgs2ExpressionParserRuleCall_1_0_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr700__RecordAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr700Access().getRecordRecordExprParserRuleCall_1_1_2_0()); }
	ruleRecordExpr{ after(grammarAccess.getExpr700Access().getRecordRecordExprParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr800__FunctionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpr800Access().getFunctionExprMaxParserRuleCall_1_2_0()); }
	ruleExprMax{ after(grammarAccess.getExpr800Access().getFunctionExprMaxParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__BodyAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getBodyLExpressionParserRuleCall_2_2_0()); }
	ruleLExpression{ after(grammarAccess.getExprMaxAccess().getBodyLExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMax__BodyAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMaxAccess().getBodyLExpressionParserRuleCall_2_3_1_0()); }
	ruleLExpression{ after(grammarAccess.getExprMaxAccess().getBodyLExpressionParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__MacroNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getMacroNameDefineAttributeCrossReference_0_0()); }
(
{ before(grammarAccess.getMacroCallAccess().getMacroNameDefineAttributeMacroParserRuleCall_0_0_1()); }
	ruleMacro{ after(grammarAccess.getMacroCallAccess().getMacroNameDefineAttributeMacroParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMacroCallAccess().getMacroNameDefineAttributeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__ArgsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getArgsExpressionParserRuleCall_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getMacroCallAccess().getArgsExpressionParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCall__ArgsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroCallAccess().getArgsExpressionParserRuleCall_1_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getMacroCallAccess().getArgsExpressionParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__RecAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getRecRecordAttributeCrossReference_0_0()); }
(
{ before(grammarAccess.getRecordExprAccess().getRecRecordAttributeNameVarParserRuleCall_0_0_1()); }
	ruleNameVar{ after(grammarAccess.getRecordExprAccess().getRecRecordAttributeNameVarParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRecordExprAccess().getRecRecordAttributeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__FieldAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getFieldRecordFieldDefCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getRecordExprAccess().getFieldRecordFieldDefNameParserRuleCall_1_0_1_0_1()); }
	ruleName{ after(grammarAccess.getRecordExprAccess().getFieldRecordFieldDefNameParserRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getRecordExprAccess().getFieldRecordFieldDefCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordExpr__TupleAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordExprAccess().getTupleRecordTupleParserRuleCall_1_1_0()); }
	ruleRecordTuple{ after(grammarAccess.getRecordExprAccess().getTupleRecordTupleParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__FieldsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getFieldsRecordFieldParserRuleCall_2_0_0()); }
	ruleRecordField{ after(grammarAccess.getRecordTupleAccess().getFieldsRecordFieldParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTuple__FieldsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTupleAccess().getFieldsRecordFieldParserRuleCall_2_1_1_0()); }
	ruleRecordField{ after(grammarAccess.getRecordTupleAccess().getFieldsRecordFieldParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getNameNameVarParserRuleCall_0_0()); }
	ruleNameVar{ after(grammarAccess.getRecordFieldDefAccess().getNameNameVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getValueExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getRecordFieldDefAccess().getValueExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDef__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDefAccess().getTypeTopTypeParserRuleCall_2_1_0()); }
	ruleTopType{ after(grammarAccess.getRecordFieldDefAccess().getTypeTopTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getRefRecordFieldDefCrossReference_0_0()); }
(
{ before(grammarAccess.getRecordFieldAccess().getRefRecordFieldDefNameVarParserRuleCall_0_0_1()); }
	ruleNameVar{ after(grammarAccess.getRecordFieldAccess().getRefRecordFieldDefNameVarParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRecordFieldAccess().getRefRecordFieldDefCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getValueExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getRecordFieldAccess().getValueExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldAccess().getTypeTopTypeParserRuleCall_2_1_0()); }
	ruleTopType{ after(grammarAccess.getRecordFieldAccess().getTypeTopTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueFormCrossReference_0_1_0()); }
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueFormAtomKwParserRuleCall_0_1_0_1()); }
	ruleAtomKw{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueFormAtomKwParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueFormCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueVARIABLETerminalRuleCall_1_1_0()); }
	RULE_VARIABLE{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueVARIABLETerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueCHARTerminalRuleCall_2_1_0()); }
	RULE_CHAR{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueCHARTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueDefineAttributeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueDefineAttributeMacroParserRuleCall_3_1_0_1()); }
	ruleMacro{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueDefineAttributeMacroParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueDefineAttributeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpressionNoNumber__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionNoNumberAccess().getValueErlStringParserRuleCall_4_1_0()); }
	ruleErlString{ after(grammarAccess.getLiteralExpressionNoNumberAccess().getValueErlStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getValueINTEGERParserRuleCall_1_1_0()); }
	ruleINTEGER{ after(grammarAccess.getLiteralExpressionAccess().getValueINTEGERParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getValueFLOATParserRuleCall_2_1_0()); }
	ruleFLOAT{ after(grammarAccess.getLiteralExpressionAccess().getValueFLOATParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__OpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getOpEqualsSignKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getPatternExpressionAccess().getOpEqualsSignKeyword_1_0_1_0()); }

	'=' 

{ after(grammarAccess.getPatternExpressionAccess().getOpEqualsSignKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getPatternExpressionAccess().getOpEqualsSignKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__OpRightAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getOpRightTermExpressionParserRuleCall_1_0_2_0()); }
	ruleTermExpression{ after(grammarAccess.getPatternExpressionAccess().getOpRightTermExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__ArgsAssignment_1_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getArgsExpressionParserRuleCall_1_1_2_0_0()); }
	ruleExpression{ after(grammarAccess.getPatternExpressionAccess().getArgsExpressionParserRuleCall_1_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternExpression__ArgsAssignment_1_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternExpressionAccess().getArgsExpressionParserRuleCall_1_1_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPatternExpressionAccess().getArgsExpressionParserRuleCall_1_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpr__ClausesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExprAccess().getClausesIfClauseParserRuleCall_1_0()); }
	ruleIfClause{ after(grammarAccess.getIfExprAccess().getClausesIfClauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpr__ClausesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExprAccess().getClausesIfClauseParserRuleCall_2_1_0()); }
	ruleIfClause{ after(grammarAccess.getIfExprAccess().getClausesIfClauseParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__GuardAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getGuardGuardParserRuleCall_0_0()); }
	ruleGuard{ after(grammarAccess.getIfClauseAccess().getGuardGuardParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getBodyLExpressionParserRuleCall_2_0()); }
	ruleLExpression{ after(grammarAccess.getIfClauseAccess().getBodyLExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfClause__BodyAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfClauseAccess().getBodyLExpressionParserRuleCall_3_1_0()); }
	ruleLExpression{ after(grammarAccess.getIfClauseAccess().getBodyLExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCaseExprAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__ClausesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getClausesCrClauseParserRuleCall_3_0()); }
	ruleCrClause{ after(grammarAccess.getCaseExprAccess().getClausesCrClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpr__ClausesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseExprAccess().getClausesCrClauseParserRuleCall_4_1_0()); }
	ruleCrClause{ after(grammarAccess.getCaseExprAccess().getClausesCrClauseParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getExprExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getCrClauseAccess().getExprExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__GuardAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getGuardGuardParserRuleCall_1_1_0()); }
	ruleGuard{ after(grammarAccess.getCrClauseAccess().getGuardGuardParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getBodyLExpressionParserRuleCall_3_0()); }
	ruleLExpression{ after(grammarAccess.getCrClauseAccess().getBodyLExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CrClause__BodyAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrClauseAccess().getBodyLExpressionParserRuleCall_4_1_0()); }
	ruleLExpression{ after(grammarAccess.getCrClauseAccess().getBodyLExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__ClausesAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getClausesCrClauseParserRuleCall_1_0_0_0()); }
	ruleCrClause{ after(grammarAccess.getReceiveExprAccess().getClausesCrClauseParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__ClausesAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getClausesCrClauseParserRuleCall_1_0_1_1_0()); }
	ruleCrClause{ after(grammarAccess.getReceiveExprAccess().getClausesCrClauseParserRuleCall_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__After_exprAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_exprExpressionParserRuleCall_1_0_2_1_0()); }
	ruleExpression{ after(grammarAccess.getReceiveExprAccess().getAfter_exprExpressionParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__After_bodyAssignment_1_0_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_bodyLExpressionParserRuleCall_1_0_2_3_0()); }
	ruleLExpression{ after(grammarAccess.getReceiveExprAccess().getAfter_bodyLExpressionParserRuleCall_1_0_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__After_bodyAssignment_1_0_2_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_bodyLExpressionParserRuleCall_1_0_2_4_1_0()); }
	ruleLExpression{ after(grammarAccess.getReceiveExprAccess().getAfter_bodyLExpressionParserRuleCall_1_0_2_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__After_exprAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_exprExpressionParserRuleCall_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getReceiveExprAccess().getAfter_exprExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__After_bodyAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_bodyLExpressionParserRuleCall_1_1_3_0()); }
	ruleLExpression{ after(grammarAccess.getReceiveExprAccess().getAfter_bodyLExpressionParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveExpr__After_bodyAssignment_1_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceiveExprAccess().getAfter_bodyLExpressionParserRuleCall_1_1_4_1_0()); }
	ruleLExpression{ after(grammarAccess.getReceiveExprAccess().getAfter_bodyLExpressionParserRuleCall_1_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__ModuleAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getModuleNameVarParserRuleCall_0_0_0()); }
	ruleNameVar{ after(grammarAccess.getFunRefAccess().getModuleNameVarParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getFunctionNameVarParserRuleCall_1_0()); }
	ruleNameVar{ after(grammarAccess.getFunRefAccess().getFunctionNameVarParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunRef__ArityAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunRefAccess().getArityIntMacroParserRuleCall_3_0()); }
	ruleIntMacro{ after(grammarAccess.getFunRefAccess().getArityIntMacroParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFun__ClausesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineFunAccess().getClausesFunctionClauseParserRuleCall_0_0()); }
	ruleFunctionClause{ after(grammarAccess.getInlineFunAccess().getClausesFunctionClauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFun__ClausesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInlineFunAccess().getClausesFunctionClauseParserRuleCall_1_1_0()); }
	ruleFunctionClause{ after(grammarAccess.getInlineFunAccess().getClausesFunctionClauseParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getBodyLExpressionParserRuleCall_1_0()); }
	ruleLExpression{ after(grammarAccess.getTryExprAccess().getBodyLExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__BodyAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getBodyLExpressionParserRuleCall_2_1_0()); }
	ruleLExpression{ after(grammarAccess.getTryExprAccess().getBodyLExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Of_clausesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getOf_clausesCrClauseParserRuleCall_3_1_0()); }
	ruleCrClause{ after(grammarAccess.getTryExprAccess().getOf_clausesCrClauseParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__Of_clausesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getOf_clausesCrClauseParserRuleCall_3_2_1_0()); }
	ruleCrClause{ after(grammarAccess.getTryExprAccess().getOf_clausesCrClauseParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__CatchAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getCatchTryClauseParserRuleCall_4_0_1_0()); }
	ruleTryClause{ after(grammarAccess.getTryExprAccess().getCatchTryClauseParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__CatchAssignment_4_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getCatchTryClauseParserRuleCall_4_0_2_1_0()); }
	ruleTryClause{ after(grammarAccess.getTryExprAccess().getCatchTryClauseParserRuleCall_4_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__After_bodyAssignment_4_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfter_bodyLExpressionParserRuleCall_4_0_3_1_0()); }
	ruleLExpression{ after(grammarAccess.getTryExprAccess().getAfter_bodyLExpressionParserRuleCall_4_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__After_bodyAssignment_4_0_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfter_bodyLExpressionParserRuleCall_4_0_3_2_1_0()); }
	ruleLExpression{ after(grammarAccess.getTryExprAccess().getAfter_bodyLExpressionParserRuleCall_4_0_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__After_bodyAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfter_bodyLExpressionParserRuleCall_4_1_1_0()); }
	ruleLExpression{ after(grammarAccess.getTryExprAccess().getAfter_bodyLExpressionParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryExpr__After_bodyAssignment_4_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryExprAccess().getAfter_bodyLExpressionParserRuleCall_4_1_2_1_0()); }
	ruleLExpression{ after(grammarAccess.getTryExprAccess().getAfter_bodyLExpressionParserRuleCall_4_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__HdrAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getHdrNameVarParserRuleCall_0_0_0_0()); }
	ruleNameVar{ after(grammarAccess.getTryClauseAccess().getHdrNameVarParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getCondPatternExpressionParserRuleCall_1_0()); }
	rulePatternExpression{ after(grammarAccess.getTryClauseAccess().getCondPatternExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__GuardAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getGuardGuardParserRuleCall_2_1_0()); }
	ruleGuard{ after(grammarAccess.getTryClauseAccess().getGuardGuardParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getBodyLExpressionParserRuleCall_4_0()); }
	ruleLExpression{ after(grammarAccess.getTryClauseAccess().getBodyLExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryClause__BodyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryClauseAccess().getBodyLExpressionParserRuleCall_5_1_0()); }
	ruleLExpression{ after(grammarAccess.getTryClauseAccess().getBodyLExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__ElementsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getElementsExpressionParserRuleCall_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getListAccess().getElementsExpressionParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__ElementsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getElementsExpressionParserRuleCall_1_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getListAccess().getElementsExpressionParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__TailAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getTailExpressionParserRuleCall_1_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getListAccess().getTailExpressionParserRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__ElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getElementExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getListComprehensionAccess().getElementExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__GeneratorsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getGeneratorsLCExprParserRuleCall_3_0()); }
	ruleLCExpr{ after(grammarAccess.getListComprehensionAccess().getGeneratorsLCExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListComprehension__GeneratorsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListComprehensionAccess().getGeneratorsLCExprParserRuleCall_4_1_0()); }
	ruleLCExpr{ after(grammarAccess.getListComprehensionAccess().getGeneratorsLCExprParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__ElementsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getElementsExpressionParserRuleCall_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getTupleAccess().getElementsExpressionParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__ElementsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getElementsExpressionParserRuleCall_1_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getTupleAccess().getElementsExpressionParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getExprTermExpressionParserRuleCall_1_0()); }
	ruleTermExpression{ after(grammarAccess.getBinaryComprehensionAccess().getExprTermExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__GeneratorsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getGeneratorsLCExprParserRuleCall_3_0()); }
	ruleLCExpr{ after(grammarAccess.getBinaryComprehensionAccess().getGeneratorsLCExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryComprehension__GeneratorsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryComprehensionAccess().getGeneratorsLCExprParserRuleCall_4_1_0()); }
	ruleLCExpr{ after(grammarAccess.getBinaryComprehensionAccess().getGeneratorsLCExprParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__ElementsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getElementsBinaryItemParserRuleCall_1_1_0_0()); }
	ruleBinaryItem{ after(grammarAccess.getBinaryAccess().getElementsBinaryItemParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__ElementsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getElementsBinaryItemParserRuleCall_1_1_1_1_0()); }
	ruleBinaryItem{ after(grammarAccess.getBinaryAccess().getElementsBinaryItemParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getExprUnaryExprMaxParserRuleCall_0_0()); }
	ruleUnaryExprMax{ after(grammarAccess.getBinaryItemAccess().getExprUnaryExprMaxParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__SizeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getSizeExprMaxParserRuleCall_1_1_0()); }
	ruleExprMax{ after(grammarAccess.getBinaryItemAccess().getSizeExprMaxParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__TypesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getTypesBitTypeParserRuleCall_2_1_0()); }
	ruleBitType{ after(grammarAccess.getBinaryItemAccess().getTypesBitTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryItem__TypeAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryItemAccess().getTypeBitTypeParserRuleCall_2_2_1_0()); }
	ruleBitType{ after(grammarAccess.getBinaryItemAccess().getTypeBitTypeParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitType__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitTypeAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getBitTypeAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitType__SizeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitTypeAccess().getSizeINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getBitTypeAccess().getSizeINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExprMax__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprMaxAccess().getOpPrefixOpParserRuleCall_0_1_0()); }
	rulePrefixOp{ after(grammarAccess.getUnaryExprMaxAccess().getOpPrefixOpParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExprMax__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprMaxAccess().getOperandExprMaxParserRuleCall_0_2_0()); }
	ruleExprMax{ after(grammarAccess.getUnaryExprMaxAccess().getOperandExprMaxParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LCExpr__O1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCExprAccess().getO1ExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getLCExprAccess().getO1ExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LCExpr__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCExprAccess().getOpAlternatives_1_0_0()); }
(rule__LCExpr__OpAlternatives_1_0_0)
{ after(grammarAccess.getLCExprAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LCExpr__O2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLCExprAccess().getO2ExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getLCExprAccess().getO2ExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__ModuleAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getModuleNameVarParserRuleCall_0_0_0()); }
	ruleNameVar{ after(grammarAccess.getSpecFunAccess().getModuleNameVarParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getFunctionNameVarParserRuleCall_1_0()); }
	ruleNameVar{ after(grammarAccess.getSpecFunAccess().getFunctionNameVarParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecFun__ArityAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecFunAccess().getArityIntMacroParserRuleCall_2_1_0()); }
	ruleIntMacro{ after(grammarAccess.getSpecFunAccess().getArityIntMacroParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSig__DeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSigAccess().getDeclFunTypeParserRuleCall_0_0()); }
	ruleFunType{ after(grammarAccess.getTypeSigAccess().getDeclFunTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSig__GuardsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeSigAccess().getGuardsTypeGuardsParserRuleCall_1_1_0()); }
	ruleTypeGuards{ after(grammarAccess.getTypeSigAccess().getGuardsTypeGuardsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__ArgsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getArgsTopTypeParserRuleCall_1_0_0()); }
	ruleTopType{ after(grammarAccess.getFunTypeAccess().getArgsTopTypeParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__ArgsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getArgsTopTypeParserRuleCall_1_1_1_0()); }
	ruleTopType{ after(grammarAccess.getFunTypeAccess().getArgsTopTypeParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunType__ReturnAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunTypeAccess().getReturnTopTypeParserRuleCall_4_0()); }
	ruleTopType{ after(grammarAccess.getFunTypeAccess().getReturnTopTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuards__ItemsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardsAccess().getItemsTypeGuardParserRuleCall_0_0()); }
	ruleTypeGuard{ after(grammarAccess.getTypeGuardsAccess().getItemsTypeGuardParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuards__ItemsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardsAccess().getItemsTypeGuardParserRuleCall_1_1_0()); }
	ruleTypeGuard{ after(grammarAccess.getTypeGuardsAccess().getItemsTypeGuardParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getNameNameParserRuleCall_0_0_0()); }
	ruleName{ after(grammarAccess.getTypeGuardAccess().getNameNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__TypesAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getTypesTopTypeParserRuleCall_0_2_0()); }
	ruleTopType{ after(grammarAccess.getTypeGuardAccess().getTypesTopTypeParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__TypesAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getTypesTopTypeParserRuleCall_0_3_1_0()); }
	ruleTopType{ after(grammarAccess.getTypeGuardAccess().getTypesTopTypeParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getNameVARIABLETerminalRuleCall_1_0_0()); }
	RULE_VARIABLE{ after(grammarAccess.getTypeGuardAccess().getNameVARIABLETerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGuard__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeGuardAccess().getTypeTopTypeParserRuleCall_1_2_0()); }
	ruleTopType{ after(grammarAccess.getTypeGuardAccess().getTypeTopTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopType__VarAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopTypeAccess().getVarVARIABLETerminalRuleCall_0_0_0()); }
	RULE_VARIABLE{ after(grammarAccess.getTopTypeAccess().getVarVARIABLETerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopTypeAccess().getTypeType100ParserRuleCall_1_0()); }
	ruleType100{ after(grammarAccess.getTopTypeAccess().getTypeType100ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getOpVerticalLineKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getType100Access().getOpVerticalLineKeyword_1_0_0_1_0()); }

	'|' 

{ after(grammarAccess.getType100Access().getOpVerticalLineKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getType100Access().getOpVerticalLineKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type100__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType100Access().getRightOperandType200ParserRuleCall_1_1_0()); }
	ruleType200{ after(grammarAccess.getType100Access().getRightOperandType200ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getOpFullStopFullStopKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getType200Access().getOpFullStopFullStopKeyword_1_0_0_1_0()); }

	'..' 

{ after(grammarAccess.getType200Access().getOpFullStopFullStopKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getType200Access().getOpFullStopFullStopKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type200__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType200Access().getRightOperandType300ParserRuleCall_1_1_0()); }
	ruleType300{ after(grammarAccess.getType200Access().getRightOperandType300ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getOpAddOpParserRuleCall_1_0_0_1_0()); }
	ruleAddOp{ after(grammarAccess.getType300Access().getOpAddOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type300__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType300Access().getRightOperandType400ParserRuleCall_1_1_0()); }
	ruleType400{ after(grammarAccess.getType300Access().getRightOperandType400ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getOpMultOpParserRuleCall_1_0_0_1_0()); }
	ruleMultOp{ after(grammarAccess.getType400Access().getOpMultOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type400__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType400Access().getRightOperandType500ParserRuleCall_1_1_0()); }
	ruleType500{ after(grammarAccess.getType400Access().getRightOperandType500ParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type500__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType500Access().getOpPrefixOpParserRuleCall_0_1_0()); }
	rulePrefixOp{ after(grammarAccess.getType500Access().getOpPrefixOpParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type500__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType500Access().getOperandTypeParserRuleCall_0_2_0()); }
	ruleType{ after(grammarAccess.getType500Access().getOperandTypeParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMModuleCrossReference_1_1_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getMModuleNameParserRuleCall_1_1_0_0_1()); }
	ruleName{ after(grammarAccess.getTypeAccess().getMModuleNameParserRuleCall_1_1_0_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getMModuleCrossReference_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameNameParserRuleCall_1_2_0()); }
	ruleName{ after(grammarAccess.getTypeAccess().getNameNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ArgsAssignment_1_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArgsTopTypeParserRuleCall_1_3_1_0_0()); }
	ruleTopType{ after(grammarAccess.getTypeAccess().getArgsTopTypeParserRuleCall_1_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ArgsAssignment_1_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArgsTopTypeParserRuleCall_1_3_1_1_1_0()); }
	ruleTopType{ after(grammarAccess.getTypeAccess().getArgsTopTypeParserRuleCall_1_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameVARIABLETerminalRuleCall_2_0()); }
	RULE_VARIABLE{ after(grammarAccess.getTypeAccess().getNameVARIABLETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getValueINTEGERParserRuleCall_3_0()); }
	ruleINTEGER{ after(grammarAccess.getTypeAccess().getValueINTEGERParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeTopTypeParserRuleCall_4_2_0_0()); }
	ruleTopType{ after(grammarAccess.getTypeAccess().getTypeTopTypeParserRuleCall_4_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypesAssignment_5_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesTopTypeParserRuleCall_5_2_0_0()); }
	ruleTopType{ after(grammarAccess.getTypeAccess().getTypesTopTypeParserRuleCall_5_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypesAssignment_5_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesTopTypeParserRuleCall_5_2_1_1_0()); }
	ruleTopType{ after(grammarAccess.getTypeAccess().getTypesTopTypeParserRuleCall_5_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__RecAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRecNameParserRuleCall_6_2_0()); }
	ruleName{ after(grammarAccess.getTypeAccess().getRecNameParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__FieldsAssignment_6_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFieldsFieldTypeParserRuleCall_6_4_0_0()); }
	ruleFieldType{ after(grammarAccess.getTypeAccess().getFieldsFieldTypeParserRuleCall_6_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__FieldsAssignment_6_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFieldsFieldTypeParserRuleCall_6_4_1_1_0()); }
	ruleFieldType{ after(grammarAccess.getTypeAccess().getFieldsFieldTypeParserRuleCall_6_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeFunType100ParserRuleCall_8_3_0()); }
	ruleFunType100{ after(grammarAccess.getTypeAccess().getTypeFunType100ParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getFieldTypeAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldTypeAccess().getTypeTopTypeParserRuleCall_2_0()); }
	ruleTopType{ after(grammarAccess.getFieldTypeAccess().getTypeTopTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__TypeAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getTypeBinBaseTypeParserRuleCall_2_0_0_0()); }
	ruleBinBaseType{ after(grammarAccess.getBinaryTypeAccess().getTypeBinBaseTypeParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__TypeAssignment_2_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getTypeBinUnitTypeParserRuleCall_2_0_1_1_0()); }
	ruleBinUnitType{ after(grammarAccess.getBinaryTypeAccess().getTypeBinUnitTypeParserRuleCall_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryType__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryTypeAccess().getTypeBinUnitTypeParserRuleCall_2_1_0()); }
	ruleBinUnitType{ after(grammarAccess.getBinaryTypeAccess().getTypeBinUnitTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinBaseType__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinBaseTypeAccess().getNameVARIABLETerminalRuleCall_0_0()); }
	RULE_VARIABLE{ after(grammarAccess.getBinBaseTypeAccess().getNameVARIABLETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinBaseType__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinBaseTypeAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getBinBaseTypeAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinUnitType__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinUnitTypeAccess().getNameVARIABLETerminalRuleCall_0_0()); }
	RULE_VARIABLE{ after(grammarAccess.getBinUnitTypeAccess().getNameVARIABLETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinUnitType__MAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinUnitTypeAccess().getMVARIABLETerminalRuleCall_2_0()); }
	RULE_VARIABLE{ after(grammarAccess.getBinUnitTypeAccess().getMVARIABLETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinUnitType__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinUnitTypeAccess().getTypeTypeParserRuleCall_4_0()); }
	ruleType{ after(grammarAccess.getBinUnitTypeAccess().getTypeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__ItemsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getItemsTopTypeParserRuleCall_2_1_0_0()); }
	ruleTopType{ after(grammarAccess.getFunType100Access().getItemsTopTypeParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__ItemsAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getItemsTopTypeParserRuleCall_2_1_1_1_0()); }
	ruleTopType{ after(grammarAccess.getFunType100Access().getItemsTopTypeParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunType100__ReturnAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunType100Access().getReturnTopTypeParserRuleCall_5_0()); }
	ruleTopType{ after(grammarAccess.getFunType100Access().getReturnTopTypeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ATOM : (RULE_ATOM_STARTER RULE_IN_WORD_CHAR*|'\'' ('\\' RULE_ESCAPE|~(('\\'|'\'')))* ('\''|EOF));

RULE_STRING : '"' ('\\' RULE_ESCAPE|~(('\\'|'"')))* ('"'|EOF);

RULE_VARIABLE : ('A'..'Z'|'_') RULE_IN_WORD_CHAR*;

RULE_SL_COMMENT : '%' ~(('\n'|'\r'))* ('\r'? '\n'|EOF);

RULE_WS : ~(('!'..'~'|'\u00A1'..'\u00FF'))+;

RULE_FULL_STOP : '.' (RULE_WS|RULE_SL_COMMENT|EOF);

RULE_BASED_INT : ('1'..'3')? '0'..'9' '#' ('0'..'9'|'a'..'z'|'A'..'Z')+;

RULE_INT : ('0'..'9')+;

RULE_EXT_INT : RULE_INT ('e'|'E') ('+'|'-')? RULE_INT;

RULE_CHAR : '$' ('\\' RULE_ESCAPE|.);

fragment RULE_IN_WORD_CHAR : ('a'..'z'|'A'..'Z'|'_'|'@'|'0'..'9'|'\u00DF'..'\u00F6'|'\u00F8'..'\u00FF'|'\u00C0'..'\u00D6'|'\u00D8'..'\u00DE');

fragment RULE_ATOM_STARTER : ('a'..'z'|'\u00DF'..'\u00F6'|'\u00F8'..'\u00FF');

fragment RULE_ESCAPE : ('b'|'d'|'e'|'f'|'n'|'r'|'s'|'t'|'v'|'0'..'7' ('0'..'7' ('0'..'7')?)?|('x'|'X') RULE_HEX_DIGIT RULE_HEX_DIGIT|('x'|'X') '{' RULE_HEX_DIGIT+ '}'|'^' ('a'..'z'|'A'..'Z'|']')|.);

fragment RULE_HEX_DIGIT : ('0'..'9'|'A'..'F'|'a'..'f');


