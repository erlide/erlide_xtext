/*
 * generated by Xtext
 */
package org.erlide.ui.contentassist.antlr;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.erlide.services.ErlangGrammarAccess;

import com.google.inject.Inject;

public class ErlangParser extends AbstractContentAssistParser {
	
	@Inject
	private ErlangGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.erlide.ui.contentassist.antlr.internal.InternalErlangParser createParser() {
		org.erlide.ui.contentassist.antlr.internal.InternalErlangParser result = new org.erlide.ui.contentassist.antlr.internal.InternalErlangParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAtomRefTargetAccess().getAlternatives(), "rule__AtomRefTarget__Alternatives");
					put(grammarAccess.getFormAccess().getAlternatives(), "rule__Form__Alternatives");
					put(grammarAccess.getAttributeAccess().getAlternatives_1(), "rule__Attribute__Alternatives_1");
					put(grammarAccess.getConditionalAttributeAccess().getAlternatives(), "rule__ConditionalAttribute__Alternatives");
					put(grammarAccess.getAbstractDefineAttributeAccess().getAlternatives(), "rule__AbstractDefineAttribute__Alternatives");
					put(grammarAccess.getIfdefAttributeAccess().getTagAlternatives_1_0(), "rule__IfdefAttribute__TagAlternatives_1_0");
					put(grammarAccess.getAbstractIncludeAttributeAccess().getAlternatives(), "rule__AbstractIncludeAttribute__Alternatives");
					put(grammarAccess.getEncodingAttributeAccess().getAlternatives_1(), "rule__EncodingAttribute__Alternatives_1");
					put(grammarAccess.getRecordAttributeAccess().getAlternatives_4(), "rule__RecordAttribute__Alternatives_4");
					put(grammarAccess.getAbstractTypeAttributeAccess().getAlternatives(), "rule__AbstractTypeAttribute__Alternatives");
					put(grammarAccess.getSpecAttributeAccess().getTagAlternatives_0_0(), "rule__SpecAttribute__TagAlternatives_0_0");
					put(grammarAccess.getSpecAttributeAccess().getAlternatives_1(), "rule__SpecAttribute__Alternatives_1");
					put(grammarAccess.getTypeAttributeAccess().getTagAlternatives_0_0(), "rule__TypeAttribute__TagAlternatives_0_0");
					put(grammarAccess.getTypeAttributeAccess().getAlternatives_1(), "rule__TypeAttribute__Alternatives_1");
					put(grammarAccess.getLExpressionAccess().getAlternatives(), "rule__LExpression__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getExpr100Access().getAlternatives_1(), "rule__Expr100__Alternatives_1");
					put(grammarAccess.getUnaryExprAccess().getAlternatives(), "rule__UnaryExpr__Alternatives");
					put(grammarAccess.getExpr700Access().getAlternatives_1(), "rule__Expr700__Alternatives_1");
					put(grammarAccess.getExprMaxAccess().getAlternatives(), "rule__ExprMax__Alternatives");
					put(grammarAccess.getTermExpressionAccess().getAlternatives(), "rule__TermExpression__Alternatives");
					put(grammarAccess.getRecordExprAccess().getAlternatives_1(), "rule__RecordExpr__Alternatives_1");
					put(grammarAccess.getLiteralExpressionNoNumberAccess().getAlternatives(), "rule__LiteralExpressionNoNumber__Alternatives");
					put(grammarAccess.getStringLiteralPartAccess().getAlternatives(), "rule__StringLiteralPart__Alternatives");
					put(grammarAccess.getLiteralExpressionAccess().getAlternatives(), "rule__LiteralExpression__Alternatives");
					put(grammarAccess.getPatternExpressionAccess().getAlternatives_1(), "rule__PatternExpression__Alternatives_1");
					put(grammarAccess.getReceiveExprAccess().getAlternatives_1(), "rule__ReceiveExpr__Alternatives_1");
					put(grammarAccess.getFunExprAccess().getAlternatives_1(), "rule__FunExpr__Alternatives_1");
					put(grammarAccess.getTryExprAccess().getAlternatives_3(), "rule__TryExpr__Alternatives_3");
					put(grammarAccess.getListOrComprehensionAccess().getAlternatives_1(), "rule__ListOrComprehension__Alternatives_1");
					put(grammarAccess.getListOrComprehensionAccess().getAlternatives_1_1_2(), "rule__ListOrComprehension__Alternatives_1_1_2");
					put(grammarAccess.getTupleAccess().getAlternatives_1(), "rule__Tuple__Alternatives_1");
					put(grammarAccess.getBinaryOrComprehensionAccess().getAlternatives_1(), "rule__BinaryOrComprehension__Alternatives_1");
					put(grammarAccess.getUnaryExprMaxAccess().getAlternatives(), "rule__UnaryExprMax__Alternatives");
					put(grammarAccess.getLCExprAccess().getOpAlternatives_1_0_0(), "rule__LCExpr__OpAlternatives_1_0_0");
					put(grammarAccess.getADDOPAccess().getAlternatives(), "rule__ADDOP__Alternatives");
					put(grammarAccess.getMULTOPAccess().getAlternatives(), "rule__MULTOP__Alternatives");
					put(grammarAccess.getPREFIXOPAccess().getAlternatives(), "rule__PREFIXOP__Alternatives");
					put(grammarAccess.getLISTOPAccess().getAlternatives(), "rule__LISTOP__Alternatives");
					put(grammarAccess.getCOMPOPAccess().getAlternatives(), "rule__COMPOP__Alternatives");
					put(grammarAccess.getModuleVarMacroAccess().getAlternatives(), "rule__ModuleVarMacro__Alternatives");
					put(grammarAccess.getFunctionVarMacroAccess().getAlternatives(), "rule__FunctionVarMacro__Alternatives");
					put(grammarAccess.getRecordVarMacroAccess().getAlternatives(), "rule__RecordVarMacro__Alternatives");
					put(grammarAccess.getRecordFieldVarMacroAccess().getAlternatives(), "rule__RecordFieldVarMacro__Alternatives");
					put(grammarAccess.getTypeVarMacroAccess().getAlternatives(), "rule__TypeVarMacro__Alternatives");
					put(grammarAccess.getIntVarMacroAccess().getAlternatives(), "rule__IntVarMacro__Alternatives");
					put(grammarAccess.getNAMEAccess().getAlternatives(), "rule__NAME__Alternatives");
					put(grammarAccess.getNAMEVARAccess().getAlternatives(), "rule__NAMEVAR__Alternatives");
					put(grammarAccess.getMACROAccess().getAlternatives_0(), "rule__MACRO__Alternatives_0");
					put(grammarAccess.getMACROAccess().getAlternatives_1(), "rule__MACRO__Alternatives_1");
					put(grammarAccess.getNAMEVARMACROAccess().getAlternatives(), "rule__NAMEVARMACRO__Alternatives");
					put(grammarAccess.getNAMEMACROAccess().getAlternatives(), "rule__NAMEMACRO__Alternatives");
					put(grammarAccess.getKWAccess().getAlternatives(), "rule__KW__Alternatives");
					put(grammarAccess.getKW1Access().getAlternatives(), "rule__KW1__Alternatives");
					put(grammarAccess.getRealKwAccess().getAlternatives(), "rule__RealKw__Alternatives");
					put(grammarAccess.getINTEGERAccess().getAlternatives(), "rule__INTEGER__Alternatives");
					put(grammarAccess.getFLOATAccess().getAlternatives_2(), "rule__FLOAT__Alternatives_2");
					put(grammarAccess.getTypeGuardAccess().getAlternatives(), "rule__TypeGuard__Alternatives");
					put(grammarAccess.getType500Access().getAlternatives(), "rule__Type500__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getBinaryTypeAccess().getAlternatives_2(), "rule__BinaryType__Alternatives_2");
					put(grammarAccess.getFunType100Access().getAlternatives_2(), "rule__FunType100__Alternatives_2");
					put(grammarAccess.getFormAccess().getGroup_3(), "rule__Form__Group_3__0");
					put(grammarAccess.getConditionalFormBlockAccess().getGroup(), "rule__ConditionalFormBlock__Group__0");
					put(grammarAccess.getConditionalFormBlockAccess().getGroup_2(), "rule__ConditionalFormBlock__Group_2__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getDefineAttributeAccess().getGroup(), "rule__DefineAttribute__Group__0");
					put(grammarAccess.getDefineAttributeAccess().getGroup_3(), "rule__DefineAttribute__Group_3__0");
					put(grammarAccess.getDefineAttributeAccess().getGroup_3_1(), "rule__DefineAttribute__Group_3_1__0");
					put(grammarAccess.getDefineAttributeAccess().getGroup_3_1_1(), "rule__DefineAttribute__Group_3_1_1__0");
					put(grammarAccess.getDefineAttributeAccess().getGroup_4(), "rule__DefineAttribute__Group_4__0");
					put(grammarAccess.getUndefAttributeAccess().getGroup(), "rule__UndefAttribute__Group__0");
					put(grammarAccess.getIfdefAttributeAccess().getGroup(), "rule__IfdefAttribute__Group__0");
					put(grammarAccess.getElseAttributeAccess().getGroup(), "rule__ElseAttribute__Group__0");
					put(grammarAccess.getEndifAttributeAccess().getGroup(), "rule__EndifAttribute__Group__0");
					put(grammarAccess.getIncludeAttributeAccess().getGroup(), "rule__IncludeAttribute__Group__0");
					put(grammarAccess.getIncludeLibAttributeAccess().getGroup(), "rule__IncludeLibAttribute__Group__0");
					put(grammarAccess.getFileAttributeAccess().getGroup(), "rule__FileAttribute__Group__0");
					put(grammarAccess.getModuleAttributeAccess().getGroup(), "rule__ModuleAttribute__Group__0");
					put(grammarAccess.getEncodingAttributeAccess().getGroup(), "rule__EncodingAttribute__Group__0");
					put(grammarAccess.getEncodingAttributeAccess().getGroup_1_0(), "rule__EncodingAttribute__Group_1_0__0");
					put(grammarAccess.getRecordAttributeAccess().getGroup(), "rule__RecordAttribute__Group__0");
					put(grammarAccess.getRecordAttributeAccess().getGroup_4_0(), "rule__RecordAttribute__Group_4_0__0");
					put(grammarAccess.getRecordAttributeAccess().getGroup_4_0_1(), "rule__RecordAttribute__Group_4_0_1__0");
					put(grammarAccess.getRecordAttributeAccess().getGroup_4_0_1_1(), "rule__RecordAttribute__Group_4_0_1_1__0");
					put(grammarAccess.getRecordFieldDefAccess().getGroup(), "rule__RecordFieldDef__Group__0");
					put(grammarAccess.getRecordFieldDefAccess().getGroup_1(), "rule__RecordFieldDef__Group_1__0");
					put(grammarAccess.getRecordFieldDefAccess().getGroup_2(), "rule__RecordFieldDef__Group_2__0");
					put(grammarAccess.getExportAttributeAccess().getGroup(), "rule__ExportAttribute__Group__0");
					put(grammarAccess.getExportAttributeAccess().getGroup_3(), "rule__ExportAttribute__Group_3__0");
					put(grammarAccess.getExportAttributeAccess().getGroup_3_1(), "rule__ExportAttribute__Group_3_1__0");
					put(grammarAccess.getImportAttributeAccess().getGroup(), "rule__ImportAttribute__Group__0");
					put(grammarAccess.getImportAttributeAccess().getGroup_5(), "rule__ImportAttribute__Group_5__0");
					put(grammarAccess.getImportAttributeAccess().getGroup_5_1(), "rule__ImportAttribute__Group_5_1__0");
					put(grammarAccess.getCompileAttributeAccess().getGroup(), "rule__CompileAttribute__Group__0");
					put(grammarAccess.getSpecAttributeAccess().getGroup(), "rule__SpecAttribute__Group__0");
					put(grammarAccess.getSpecAttributeAccess().getGroup_1_0(), "rule__SpecAttribute__Group_1_0__0");
					put(grammarAccess.getSpecAttributeAccess().getGroup_1_0_2(), "rule__SpecAttribute__Group_1_0_2__0");
					put(grammarAccess.getSpecAttributeAccess().getGroup_1_1(), "rule__SpecAttribute__Group_1_1__0");
					put(grammarAccess.getSpecAttributeAccess().getGroup_1_1_3(), "rule__SpecAttribute__Group_1_1_3__0");
					put(grammarAccess.getTypeAttributeAccess().getGroup(), "rule__TypeAttribute__Group__0");
					put(grammarAccess.getTypeAttributeAccess().getGroup_1_0(), "rule__TypeAttribute__Group_1_0__0");
					put(grammarAccess.getTypeAttributeAccess().getGroup_1_0_2(), "rule__TypeAttribute__Group_1_0_2__0");
					put(grammarAccess.getTypeAttributeAccess().getGroup_1_0_2_1(), "rule__TypeAttribute__Group_1_0_2_1__0");
					put(grammarAccess.getTypeAttributeAccess().getGroup_1_1(), "rule__TypeAttribute__Group_1_1__0");
					put(grammarAccess.getTypeAttributeAccess().getGroup_1_1_3(), "rule__TypeAttribute__Group_1_1_3__0");
					put(grammarAccess.getTypeAttributeAccess().getGroup_1_1_3_1(), "rule__TypeAttribute__Group_1_1_3_1__0");
					put(grammarAccess.getCustomAttributeAccess().getGroup(), "rule__CustomAttribute__Group__0");
					put(grammarAccess.getCustomAttributeAccess().getGroup_2(), "rule__CustomAttribute__Group_2__0");
					put(grammarAccess.getCustomAttributeAccess().getGroup_2_1(), "rule__CustomAttribute__Group_2_1__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup_2(), "rule__Function__Group_2__0");
					put(grammarAccess.getFunctionClauseAccess().getGroup(), "rule__FunctionClause__Group__0");
					put(grammarAccess.getFunctionClauseAccess().getGroup_4(), "rule__FunctionClause__Group_4__0");
					put(grammarAccess.getGuardAccess().getGroup(), "rule__Guard__Group__0");
					put(grammarAccess.getGuardAccess().getGroup_1(), "rule__Guard__Group_1__0");
					put(grammarAccess.getExpressionsAccess().getGroup(), "rule__Expressions__Group__0");
					put(grammarAccess.getExpressionsAccess().getGroup_1(), "rule__Expressions__Group_1__0");
					put(grammarAccess.getLExpressionAccess().getGroup_0(), "rule__LExpression__Group_0__0");
					put(grammarAccess.getLineExprAccess().getGroup(), "rule__LineExpr__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_0(), "rule__Expression__Group_0__0");
					put(grammarAccess.getExpr100Access().getGroup(), "rule__Expr100__Group__0");
					put(grammarAccess.getExpr100Access().getGroup_1_0(), "rule__Expr100__Group_1_0__0");
					put(grammarAccess.getExpr100Access().getGroup_1_1(), "rule__Expr100__Group_1_1__0");
					put(grammarAccess.getExpr150Access().getGroup(), "rule__Expr150__Group__0");
					put(grammarAccess.getExpr150Access().getGroup_1(), "rule__Expr150__Group_1__0");
					put(grammarAccess.getExpr160Access().getGroup(), "rule__Expr160__Group__0");
					put(grammarAccess.getExpr160Access().getGroup_1(), "rule__Expr160__Group_1__0");
					put(grammarAccess.getExpr200Access().getGroup(), "rule__Expr200__Group__0");
					put(grammarAccess.getExpr200Access().getGroup_1(), "rule__Expr200__Group_1__0");
					put(grammarAccess.getExpr300Access().getGroup(), "rule__Expr300__Group__0");
					put(grammarAccess.getExpr300Access().getGroup_1(), "rule__Expr300__Group_1__0");
					put(grammarAccess.getExpr400Access().getGroup(), "rule__Expr400__Group__0");
					put(grammarAccess.getExpr400Access().getGroup_1(), "rule__Expr400__Group_1__0");
					put(grammarAccess.getExpr500Access().getGroup(), "rule__Expr500__Group__0");
					put(grammarAccess.getExpr500Access().getGroup_1(), "rule__Expr500__Group_1__0");
					put(grammarAccess.getUnaryExprAccess().getGroup_0(), "rule__UnaryExpr__Group_0__0");
					put(grammarAccess.getExpr700Access().getGroup(), "rule__Expr700__Group__0");
					put(grammarAccess.getExpr700Access().getGroup_1_0(), "rule__Expr700__Group_1_0__0");
					put(grammarAccess.getExpr700Access().getGroup_1_0_4(), "rule__Expr700__Group_1_0_4__0");
					put(grammarAccess.getExpr700Access().getGroup_1_1(), "rule__Expr700__Group_1_1__0");
					put(grammarAccess.getExpr800Access().getGroup(), "rule__Expr800__Group__0");
					put(grammarAccess.getExpr800Access().getGroup_1(), "rule__Expr800__Group_1__0");
					put(grammarAccess.getExprMaxAccess().getGroup_1(), "rule__ExprMax__Group_1__0");
					put(grammarAccess.getExprMaxAccess().getGroup_2(), "rule__ExprMax__Group_2__0");
					put(grammarAccess.getTermExpressionAccess().getGroup_3(), "rule__TermExpression__Group_3__0");
					put(grammarAccess.getMacroCallAccess().getGroup(), "rule__MacroCall__Group__0");
					put(grammarAccess.getMacroCallAccess().getGroup_1(), "rule__MacroCall__Group_1__0");
					put(grammarAccess.getRecordExprAccess().getGroup(), "rule__RecordExpr__Group__0");
					put(grammarAccess.getRecordExprAccess().getGroup_1_0(), "rule__RecordExpr__Group_1_0__0");
					put(grammarAccess.getQueryExprAccess().getGroup(), "rule__QueryExpr__Group__0");
					put(grammarAccess.getCondExprAccess().getGroup(), "rule__CondExpr__Group__0");
					put(grammarAccess.getLetExprAccess().getGroup(), "rule__LetExpr__Group__0");
					put(grammarAccess.getRecordTupleAccess().getGroup(), "rule__RecordTuple__Group__0");
					put(grammarAccess.getRecordTupleAccess().getGroup_2(), "rule__RecordTuple__Group_2__0");
					put(grammarAccess.getRecordTupleAccess().getGroup_2_1(), "rule__RecordTuple__Group_2_1__0");
					put(grammarAccess.getRecordFieldExprAccess().getGroup(), "rule__RecordFieldExpr__Group__0");
					put(grammarAccess.getRecordFieldExprAccess().getGroup_1(), "rule__RecordFieldExpr__Group_1__0");
					put(grammarAccess.getRecordFieldExprAccess().getGroup_2(), "rule__RecordFieldExpr__Group_2__0");
					put(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_0(), "rule__LiteralExpressionNoNumber__Group_0__0");
					put(grammarAccess.getLiteralExpressionNoNumberAccess().getGroup_2(), "rule__LiteralExpressionNoNumber__Group_2__0");
					put(grammarAccess.getModuleRefAccess().getGroup(), "rule__ModuleRef__Group__0");
					put(grammarAccess.getFunctionRefAccess().getGroup(), "rule__FunctionRef__Group__0");
					put(grammarAccess.getRecordRefAccess().getGroup(), "rule__RecordRef__Group__0");
					put(grammarAccess.getRecordFieldRefAccess().getGroup(), "rule__RecordFieldRef__Group__0");
					put(grammarAccess.getTypeRefAccess().getGroup(), "rule__TypeRef__Group__0");
					put(grammarAccess.getMacroLiteralAccess().getGroup(), "rule__MacroLiteral__Group__0");
					put(grammarAccess.getMacroRefAccess().getGroup(), "rule__MacroRef__Group__0");
					put(grammarAccess.getVariableLiteralAccess().getGroup(), "rule__VariableLiteral__Group__0");
					put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
					put(grammarAccess.getLiteralExpressionAccess().getGroup_2(), "rule__LiteralExpression__Group_2__0");
					put(grammarAccess.getIntegerLiteralAccess().getGroup(), "rule__IntegerLiteral__Group__0");
					put(grammarAccess.getPatternExpressionAccess().getGroup(), "rule__PatternExpression__Group__0");
					put(grammarAccess.getPatternExpressionAccess().getGroup_1_0(), "rule__PatternExpression__Group_1_0__0");
					put(grammarAccess.getPatternExpressionAccess().getGroup_1_1(), "rule__PatternExpression__Group_1_1__0");
					put(grammarAccess.getIfExprAccess().getGroup(), "rule__IfExpr__Group__0");
					put(grammarAccess.getIfExprAccess().getGroup_2(), "rule__IfExpr__Group_2__0");
					put(grammarAccess.getIfClauseAccess().getGroup(), "rule__IfClause__Group__0");
					put(grammarAccess.getCaseExprAccess().getGroup(), "rule__CaseExpr__Group__0");
					put(grammarAccess.getCaseExprAccess().getGroup_4(), "rule__CaseExpr__Group_4__0");
					put(grammarAccess.getCrClauseAccess().getGroup(), "rule__CrClause__Group__0");
					put(grammarAccess.getCrClauseAccess().getGroup_1(), "rule__CrClause__Group_1__0");
					put(grammarAccess.getReceiveExprAccess().getGroup(), "rule__ReceiveExpr__Group__0");
					put(grammarAccess.getReceiveExprAccess().getGroup_1_0(), "rule__ReceiveExpr__Group_1_0__0");
					put(grammarAccess.getReceiveExprAccess().getGroup_1_0_1(), "rule__ReceiveExpr__Group_1_0_1__0");
					put(grammarAccess.getReceiveExprAccess().getGroup_1_0_2(), "rule__ReceiveExpr__Group_1_0_2__0");
					put(grammarAccess.getReceiveExprAccess().getGroup_1_1(), "rule__ReceiveExpr__Group_1_1__0");
					put(grammarAccess.getFunExprAccess().getGroup(), "rule__FunExpr__Group__0");
					put(grammarAccess.getFunRefAccess().getGroup(), "rule__FunRef__Group__0");
					put(grammarAccess.getFunRefAccess().getGroup_0(), "rule__FunRef__Group_0__0");
					put(grammarAccess.getInlineFunAccess().getGroup(), "rule__InlineFun__Group__0");
					put(grammarAccess.getInlineFunAccess().getGroup_1(), "rule__InlineFun__Group_1__0");
					put(grammarAccess.getTryExprAccess().getGroup(), "rule__TryExpr__Group__0");
					put(grammarAccess.getTryExprAccess().getGroup_2(), "rule__TryExpr__Group_2__0");
					put(grammarAccess.getTryExprAccess().getGroup_2_2(), "rule__TryExpr__Group_2_2__0");
					put(grammarAccess.getTryExprAccess().getGroup_3_0(), "rule__TryExpr__Group_3_0__0");
					put(grammarAccess.getTryExprAccess().getGroup_3_0_2(), "rule__TryExpr__Group_3_0_2__0");
					put(grammarAccess.getTryExprAccess().getGroup_3_0_3(), "rule__TryExpr__Group_3_0_3__0");
					put(grammarAccess.getTryExprAccess().getGroup_3_1(), "rule__TryExpr__Group_3_1__0");
					put(grammarAccess.getTryClauseAccess().getGroup(), "rule__TryClause__Group__0");
					put(grammarAccess.getTryClauseAccess().getGroup_0(), "rule__TryClause__Group_0__0");
					put(grammarAccess.getTryClauseAccess().getGroup_0_0(), "rule__TryClause__Group_0_0__0");
					put(grammarAccess.getTryClauseAccess().getGroup_2(), "rule__TryClause__Group_2__0");
					put(grammarAccess.getListOrComprehensionAccess().getGroup(), "rule__ListOrComprehension__Group__0");
					put(grammarAccess.getListOrComprehensionAccess().getGroup_1_1(), "rule__ListOrComprehension__Group_1_1__0");
					put(grammarAccess.getListOrComprehensionAccess().getGroup_1_1_1(), "rule__ListOrComprehension__Group_1_1_1__0");
					put(grammarAccess.getListOrComprehensionAccess().getGroup_1_1_2_0(), "rule__ListOrComprehension__Group_1_1_2_0__0");
					put(grammarAccess.getListOrComprehensionAccess().getGroup_1_1_2_1(), "rule__ListOrComprehension__Group_1_1_2_1__0");
					put(grammarAccess.getListOrComprehensionAccess().getGroup_1_1_2_1_3(), "rule__ListOrComprehension__Group_1_1_2_1_3__0");
					put(grammarAccess.getTupleAccess().getGroup(), "rule__Tuple__Group__0");
					put(grammarAccess.getTupleAccess().getGroup_1_1(), "rule__Tuple__Group_1_1__0");
					put(grammarAccess.getTupleAccess().getGroup_1_1_1(), "rule__Tuple__Group_1_1_1__0");
					put(grammarAccess.getBinaryOrComprehensionAccess().getGroup(), "rule__BinaryOrComprehension__Group__0");
					put(grammarAccess.getBinaryOrComprehensionAccess().getGroup_1_1(), "rule__BinaryOrComprehension__Group_1_1__0");
					put(grammarAccess.getBinaryOrComprehensionAccess().getGroup_1_1_1(), "rule__BinaryOrComprehension__Group_1_1_1__0");
					put(grammarAccess.getBinaryOrComprehensionAccess().getGroup_1_1_2(), "rule__BinaryOrComprehension__Group_1_1_2__0");
					put(grammarAccess.getBinaryOrComprehensionAccess().getGroup_1_1_2_3(), "rule__BinaryOrComprehension__Group_1_1_2_3__0");
					put(grammarAccess.getBinaryItemAccess().getGroup(), "rule__BinaryItem__Group__0");
					put(grammarAccess.getBinaryItemAccess().getGroup_1(), "rule__BinaryItem__Group_1__0");
					put(grammarAccess.getBinaryItemAccess().getGroup_2(), "rule__BinaryItem__Group_2__0");
					put(grammarAccess.getBinaryItemAccess().getGroup_2_2(), "rule__BinaryItem__Group_2_2__0");
					put(grammarAccess.getBitTypeAccess().getGroup(), "rule__BitType__Group__0");
					put(grammarAccess.getBitTypeAccess().getGroup_1(), "rule__BitType__Group_1__0");
					put(grammarAccess.getUnaryExprMaxAccess().getGroup_0(), "rule__UnaryExprMax__Group_0__0");
					put(grammarAccess.getLCExprAccess().getGroup(), "rule__LCExpr__Group__0");
					put(grammarAccess.getLCExprAccess().getGroup_1(), "rule__LCExpr__Group_1__0");
					put(grammarAccess.getMACROAccess().getGroup(), "rule__MACRO__Group__0");
					put(grammarAccess.getFLOATAccess().getGroup(), "rule__FLOAT__Group__0");
					put(grammarAccess.getSpecFunAccess().getGroup(), "rule__SpecFun__Group__0");
					put(grammarAccess.getSpecFunAccess().getGroup_0(), "rule__SpecFun__Group_0__0");
					put(grammarAccess.getSpecFunAccess().getGroup_2(), "rule__SpecFun__Group_2__0");
					put(grammarAccess.getTypeSigAccess().getGroup(), "rule__TypeSig__Group__0");
					put(grammarAccess.getTypeSigAccess().getGroup_1(), "rule__TypeSig__Group_1__0");
					put(grammarAccess.getFunTypeAccess().getGroup(), "rule__FunType__Group__0");
					put(grammarAccess.getFunTypeAccess().getGroup_1(), "rule__FunType__Group_1__0");
					put(grammarAccess.getFunTypeAccess().getGroup_1_1(), "rule__FunType__Group_1_1__0");
					put(grammarAccess.getTypeGuardsAccess().getGroup(), "rule__TypeGuards__Group__0");
					put(grammarAccess.getTypeGuardsAccess().getGroup_1(), "rule__TypeGuards__Group_1__0");
					put(grammarAccess.getTypeGuardAccess().getGroup_0(), "rule__TypeGuard__Group_0__0");
					put(grammarAccess.getTypeGuardAccess().getGroup_0_3(), "rule__TypeGuard__Group_0_3__0");
					put(grammarAccess.getTypeGuardAccess().getGroup_1(), "rule__TypeGuard__Group_1__0");
					put(grammarAccess.getTopTypeAccess().getGroup(), "rule__TopType__Group__0");
					put(grammarAccess.getTopTypeAccess().getGroup_0(), "rule__TopType__Group_0__0");
					put(grammarAccess.getType100Access().getGroup(), "rule__Type100__Group__0");
					put(grammarAccess.getType100Access().getGroup_1(), "rule__Type100__Group_1__0");
					put(grammarAccess.getType100Access().getGroup_1_0(), "rule__Type100__Group_1_0__0");
					put(grammarAccess.getType100Access().getGroup_1_0_0(), "rule__Type100__Group_1_0_0__0");
					put(grammarAccess.getType200Access().getGroup(), "rule__Type200__Group__0");
					put(grammarAccess.getType200Access().getGroup_1(), "rule__Type200__Group_1__0");
					put(grammarAccess.getType200Access().getGroup_1_0(), "rule__Type200__Group_1_0__0");
					put(grammarAccess.getType200Access().getGroup_1_0_0(), "rule__Type200__Group_1_0_0__0");
					put(grammarAccess.getType300Access().getGroup(), "rule__Type300__Group__0");
					put(grammarAccess.getType300Access().getGroup_1(), "rule__Type300__Group_1__0");
					put(grammarAccess.getType300Access().getGroup_1_0(), "rule__Type300__Group_1_0__0");
					put(grammarAccess.getType300Access().getGroup_1_0_0(), "rule__Type300__Group_1_0_0__0");
					put(grammarAccess.getType400Access().getGroup(), "rule__Type400__Group__0");
					put(grammarAccess.getType400Access().getGroup_1(), "rule__Type400__Group_1__0");
					put(grammarAccess.getType400Access().getGroup_1_0(), "rule__Type400__Group_1_0__0");
					put(grammarAccess.getType400Access().getGroup_1_0_0(), "rule__Type400__Group_1_0_0__0");
					put(grammarAccess.getType500Access().getGroup_0(), "rule__Type500__Group_0__0");
					put(grammarAccess.getTypeAccess().getGroup_0(), "rule__Type__Group_0__0");
					put(grammarAccess.getTypeAccess().getGroup_1(), "rule__Type__Group_1__0");
					put(grammarAccess.getTypeAccess().getGroup_1_1(), "rule__Type__Group_1_1__0");
					put(grammarAccess.getTypeAccess().getGroup_1_3(), "rule__Type__Group_1_3__0");
					put(grammarAccess.getTypeAccess().getGroup_1_3_1(), "rule__Type__Group_1_3_1__0");
					put(grammarAccess.getTypeAccess().getGroup_1_3_1_1(), "rule__Type__Group_1_3_1_1__0");
					put(grammarAccess.getTypeAccess().getGroup_4(), "rule__Type__Group_4__0");
					put(grammarAccess.getTypeAccess().getGroup_4_2(), "rule__Type__Group_4_2__0");
					put(grammarAccess.getTypeAccess().getGroup_4_2_1(), "rule__Type__Group_4_2_1__0");
					put(grammarAccess.getTypeAccess().getGroup_5(), "rule__Type__Group_5__0");
					put(grammarAccess.getTypeAccess().getGroup_5_2(), "rule__Type__Group_5_2__0");
					put(grammarAccess.getTypeAccess().getGroup_5_2_1(), "rule__Type__Group_5_2_1__0");
					put(grammarAccess.getTypeAccess().getGroup_6(), "rule__Type__Group_6__0");
					put(grammarAccess.getTypeAccess().getGroup_6_4(), "rule__Type__Group_6_4__0");
					put(grammarAccess.getTypeAccess().getGroup_6_4_1(), "rule__Type__Group_6_4_1__0");
					put(grammarAccess.getTypeAccess().getGroup_8(), "rule__Type__Group_8__0");
					put(grammarAccess.getFieldTypeAccess().getGroup(), "rule__FieldType__Group__0");
					put(grammarAccess.getBinaryTypeAccess().getGroup(), "rule__BinaryType__Group__0");
					put(grammarAccess.getBinaryTypeAccess().getGroup_2_0(), "rule__BinaryType__Group_2_0__0");
					put(grammarAccess.getBinaryTypeAccess().getGroup_2_0_1(), "rule__BinaryType__Group_2_0_1__0");
					put(grammarAccess.getBinBaseTypeAccess().getGroup(), "rule__BinBaseType__Group__0");
					put(grammarAccess.getBinUnitTypeAccess().getGroup(), "rule__BinUnitType__Group__0");
					put(grammarAccess.getFunType100Access().getGroup(), "rule__FunType100__Group__0");
					put(grammarAccess.getFunType100Access().getGroup_2_1(), "rule__FunType100__Group_2_1__0");
					put(grammarAccess.getFunType100Access().getGroup_2_1_1(), "rule__FunType100__Group_2_1_1__0");
					put(grammarAccess.getModuleAccess().getFormsAssignment(), "rule__Module__FormsAssignment");
					put(grammarAccess.getFormAccess().getCallAssignment_3_1(), "rule__Form__CallAssignment_3_1");
					put(grammarAccess.getConditionalFormBlockAccess().getConditionAssignment_0(), "rule__ConditionalFormBlock__ConditionAssignment_0");
					put(grammarAccess.getConditionalFormBlockAccess().getIfFormsAssignment_1(), "rule__ConditionalFormBlock__IfFormsAssignment_1");
					put(grammarAccess.getConditionalFormBlockAccess().getHasElseAssignment_2_0(), "rule__ConditionalFormBlock__HasElseAssignment_2_0");
					put(grammarAccess.getConditionalFormBlockAccess().getElseFormsAssignment_2_1(), "rule__ConditionalFormBlock__ElseFormsAssignment_2_1");
					put(grammarAccess.getConditionalFormBlockAccess().getEndAssignment_3(), "rule__ConditionalFormBlock__EndAssignment_3");
					put(grammarAccess.getDefineAttributeAccess().getTagAssignment_0(), "rule__DefineAttribute__TagAssignment_0");
					put(grammarAccess.getDefineAttributeAccess().getMacroNameAssignment_2(), "rule__DefineAttribute__MacroNameAssignment_2");
					put(grammarAccess.getDefineAttributeAccess().getArgsAssignment_3_1_0(), "rule__DefineAttribute__ArgsAssignment_3_1_0");
					put(grammarAccess.getDefineAttributeAccess().getArgsAssignment_3_1_1_1(), "rule__DefineAttribute__ArgsAssignment_3_1_1_1");
					put(grammarAccess.getDefineAttributeAccess().getValueAssignment_4_1(), "rule__DefineAttribute__ValueAssignment_4_1");
					put(grammarAccess.getUndefAttributeAccess().getTagAssignment_0(), "rule__UndefAttribute__TagAssignment_0");
					put(grammarAccess.getUndefAttributeAccess().getRefAssignment_2(), "rule__UndefAttribute__RefAssignment_2");
					put(grammarAccess.getIfdefAttributeAccess().getTagAssignment_1(), "rule__IfdefAttribute__TagAssignment_1");
					put(grammarAccess.getIfdefAttributeAccess().getRefAssignment_3(), "rule__IfdefAttribute__RefAssignment_3");
					put(grammarAccess.getElseAttributeAccess().getTagAssignment_1(), "rule__ElseAttribute__TagAssignment_1");
					put(grammarAccess.getEndifAttributeAccess().getTagAssignment_1(), "rule__EndifAttribute__TagAssignment_1");
					put(grammarAccess.getIncludeAttributeAccess().getTagAssignment_0(), "rule__IncludeAttribute__TagAssignment_0");
					put(grammarAccess.getIncludeAttributeAccess().getImportURIAssignment_2(), "rule__IncludeAttribute__ImportURIAssignment_2");
					put(grammarAccess.getIncludeLibAttributeAccess().getTagAssignment_0(), "rule__IncludeLibAttribute__TagAssignment_0");
					put(grammarAccess.getIncludeLibAttributeAccess().getImportURIAssignment_2(), "rule__IncludeLibAttribute__ImportURIAssignment_2");
					put(grammarAccess.getFileAttributeAccess().getTagAssignment_0(), "rule__FileAttribute__TagAssignment_0");
					put(grammarAccess.getFileAttributeAccess().getFileAssignment_2(), "rule__FileAttribute__FileAssignment_2");
					put(grammarAccess.getFileAttributeAccess().getLineAssignment_4(), "rule__FileAttribute__LineAssignment_4");
					put(grammarAccess.getModuleAttributeAccess().getTagAssignment_0(), "rule__ModuleAttribute__TagAssignment_0");
					put(grammarAccess.getModuleAttributeAccess().getModuleNameAssignment_2(), "rule__ModuleAttribute__ModuleNameAssignment_2");
					put(grammarAccess.getEncodingAttributeAccess().getTagAssignment_0(), "rule__EncodingAttribute__TagAssignment_0");
					put(grammarAccess.getEncodingAttributeAccess().getCharsetAssignment_1_0_1(), "rule__EncodingAttribute__CharsetAssignment_1_0_1");
					put(grammarAccess.getEncodingAttributeAccess().getCharsetAssignment_1_1(), "rule__EncodingAttribute__CharsetAssignment_1_1");
					put(grammarAccess.getRecordAttributeAccess().getTagAssignment_0(), "rule__RecordAttribute__TagAssignment_0");
					put(grammarAccess.getRecordAttributeAccess().getNameAssignment_2(), "rule__RecordAttribute__NameAssignment_2");
					put(grammarAccess.getRecordAttributeAccess().getFieldsAssignment_4_0_1_0(), "rule__RecordAttribute__FieldsAssignment_4_0_1_0");
					put(grammarAccess.getRecordAttributeAccess().getFieldsAssignment_4_0_1_1_1(), "rule__RecordAttribute__FieldsAssignment_4_0_1_1_1");
					put(grammarAccess.getRecordAttributeAccess().getRecordMacroAssignment_4_1(), "rule__RecordAttribute__RecordMacroAssignment_4_1");
					put(grammarAccess.getRecordFieldDefAccess().getNameAssignment_0(), "rule__RecordFieldDef__NameAssignment_0");
					put(grammarAccess.getRecordFieldDefAccess().getValueAssignment_1_1(), "rule__RecordFieldDef__ValueAssignment_1_1");
					put(grammarAccess.getRecordFieldDefAccess().getTypeAssignment_2_1(), "rule__RecordFieldDef__TypeAssignment_2_1");
					put(grammarAccess.getExportAttributeAccess().getTagAssignment_0(), "rule__ExportAttribute__TagAssignment_0");
					put(grammarAccess.getExportAttributeAccess().getFunsAssignment_3_0(), "rule__ExportAttribute__FunsAssignment_3_0");
					put(grammarAccess.getExportAttributeAccess().getFunsAssignment_3_1_1(), "rule__ExportAttribute__FunsAssignment_3_1_1");
					put(grammarAccess.getImportAttributeAccess().getTagAssignment_0(), "rule__ImportAttribute__TagAssignment_0");
					put(grammarAccess.getImportAttributeAccess().getModuleAssignment_2(), "rule__ImportAttribute__ModuleAssignment_2");
					put(grammarAccess.getImportAttributeAccess().getFunsAssignment_5_0(), "rule__ImportAttribute__FunsAssignment_5_0");
					put(grammarAccess.getImportAttributeAccess().getFunsAssignment_5_1_1(), "rule__ImportAttribute__FunsAssignment_5_1_1");
					put(grammarAccess.getCompileAttributeAccess().getTagAssignment_0(), "rule__CompileAttribute__TagAssignment_0");
					put(grammarAccess.getCompileAttributeAccess().getOptionsAssignment_2(), "rule__CompileAttribute__OptionsAssignment_2");
					put(grammarAccess.getSpecAttributeAccess().getTagAssignment_0(), "rule__SpecAttribute__TagAssignment_0");
					put(grammarAccess.getSpecAttributeAccess().getRefAssignment_1_0_0(), "rule__SpecAttribute__RefAssignment_1_0_0");
					put(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_1_0_1(), "rule__SpecAttribute__SignaturesAssignment_1_0_1");
					put(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_1_0_2_1(), "rule__SpecAttribute__SignaturesAssignment_1_0_2_1");
					put(grammarAccess.getSpecAttributeAccess().getRefAssignment_1_1_1(), "rule__SpecAttribute__RefAssignment_1_1_1");
					put(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_1_1_2(), "rule__SpecAttribute__SignaturesAssignment_1_1_2");
					put(grammarAccess.getSpecAttributeAccess().getSignaturesAssignment_1_1_3_1(), "rule__SpecAttribute__SignaturesAssignment_1_1_3_1");
					put(grammarAccess.getTypeAttributeAccess().getTagAssignment_0(), "rule__TypeAttribute__TagAssignment_0");
					put(grammarAccess.getTypeAttributeAccess().getNameAssignment_1_0_0(), "rule__TypeAttribute__NameAssignment_1_0_0");
					put(grammarAccess.getTypeAttributeAccess().getArgsAssignment_1_0_2_0(), "rule__TypeAttribute__ArgsAssignment_1_0_2_0");
					put(grammarAccess.getTypeAttributeAccess().getArgsAssignment_1_0_2_1_1(), "rule__TypeAttribute__ArgsAssignment_1_0_2_1_1");
					put(grammarAccess.getTypeAttributeAccess().getTypeAssignment_1_0_5(), "rule__TypeAttribute__TypeAssignment_1_0_5");
					put(grammarAccess.getTypeAttributeAccess().getNameAssignment_1_1_1(), "rule__TypeAttribute__NameAssignment_1_1_1");
					put(grammarAccess.getTypeAttributeAccess().getArgsAssignment_1_1_3_0(), "rule__TypeAttribute__ArgsAssignment_1_1_3_0");
					put(grammarAccess.getTypeAttributeAccess().getArgsAssignment_1_1_3_1_1(), "rule__TypeAttribute__ArgsAssignment_1_1_3_1_1");
					put(grammarAccess.getTypeAttributeAccess().getTypeAssignment_1_1_6(), "rule__TypeAttribute__TypeAssignment_1_1_6");
					put(grammarAccess.getCustomAttributeAccess().getTagAssignment_0(), "rule__CustomAttribute__TagAssignment_0");
					put(grammarAccess.getCustomAttributeAccess().getValueAssignment_2_0(), "rule__CustomAttribute__ValueAssignment_2_0");
					put(grammarAccess.getCustomAttributeAccess().getValueAssignment_2_1_1(), "rule__CustomAttribute__ValueAssignment_2_1_1");
					put(grammarAccess.getFunctionAccess().getNameAssignment_0(), "rule__Function__NameAssignment_0");
					put(grammarAccess.getFunctionAccess().getClausesAssignment_1(), "rule__Function__ClausesAssignment_1");
					put(grammarAccess.getFunctionAccess().getClausesAssignment_2_1(), "rule__Function__ClausesAssignment_2_1");
					put(grammarAccess.getFunctionClauseAccess().getRefAssignment_0(), "rule__FunctionClause__RefAssignment_0");
					put(grammarAccess.getFunctionClauseAccess().getParamsAssignment_2(), "rule__FunctionClause__ParamsAssignment_2");
					put(grammarAccess.getFunctionClauseAccess().getGuardAssignment_4_1(), "rule__FunctionClause__GuardAssignment_4_1");
					put(grammarAccess.getFunctionClauseAccess().getBodyAssignment_6(), "rule__FunctionClause__BodyAssignment_6");
					put(grammarAccess.getGuardAccess().getGuardsAssignment_0(), "rule__Guard__GuardsAssignment_0");
					put(grammarAccess.getGuardAccess().getGuardsAssignment_1_1(), "rule__Guard__GuardsAssignment_1_1");
					put(grammarAccess.getExpressionsAccess().getExprsAssignment_0(), "rule__Expressions__ExprsAssignment_0");
					put(grammarAccess.getExpressionsAccess().getExprsAssignment_1_1(), "rule__Expressions__ExprsAssignment_1_1");
					put(grammarAccess.getLExpressionAccess().getLineAssignment_0_0(), "rule__LExpression__LineAssignment_0_0");
					put(grammarAccess.getLExpressionAccess().getExprAssignment_0_1(), "rule__LExpression__ExprAssignment_0_1");
					put(grammarAccess.getExpressionAccess().getExprAssignment_0_2(), "rule__Expression__ExprAssignment_0_2");
					put(grammarAccess.getExpr100Access().getOpAssignment_1_0_1(), "rule__Expr100__OpAssignment_1_0_1");
					put(grammarAccess.getExpr100Access().getOpRightAssignment_1_0_2(), "rule__Expr100__OpRightAssignment_1_0_2");
					put(grammarAccess.getExpr100Access().getOpAssignment_1_1_1(), "rule__Expr100__OpAssignment_1_1_1");
					put(grammarAccess.getExpr100Access().getOpRightAssignment_1_1_2(), "rule__Expr100__OpRightAssignment_1_1_2");
					put(grammarAccess.getExpr150Access().getOpAssignment_1_1(), "rule__Expr150__OpAssignment_1_1");
					put(grammarAccess.getExpr150Access().getOpRightAssignment_1_2(), "rule__Expr150__OpRightAssignment_1_2");
					put(grammarAccess.getExpr160Access().getOpAssignment_1_1(), "rule__Expr160__OpAssignment_1_1");
					put(grammarAccess.getExpr160Access().getOpRight2Assignment_1_2(), "rule__Expr160__OpRight2Assignment_1_2");
					put(grammarAccess.getExpr200Access().getOpAssignment_1_1(), "rule__Expr200__OpAssignment_1_1");
					put(grammarAccess.getExpr200Access().getOpRightAssignment_1_2(), "rule__Expr200__OpRightAssignment_1_2");
					put(grammarAccess.getExpr300Access().getOpAssignment_1_1(), "rule__Expr300__OpAssignment_1_1");
					put(grammarAccess.getExpr300Access().getOpRightAssignment_1_2(), "rule__Expr300__OpRightAssignment_1_2");
					put(grammarAccess.getExpr400Access().getOpAssignment_1_1(), "rule__Expr400__OpAssignment_1_1");
					put(grammarAccess.getExpr400Access().getOpRightAssignment_1_2(), "rule__Expr400__OpRightAssignment_1_2");
					put(grammarAccess.getExpr500Access().getOpAssignment_1_1(), "rule__Expr500__OpAssignment_1_1");
					put(grammarAccess.getExpr500Access().getOpRightAssignment_1_2(), "rule__Expr500__OpRightAssignment_1_2");
					put(grammarAccess.getUnaryExprAccess().getOpAssignment_0_1(), "rule__UnaryExpr__OpAssignment_0_1");
					put(grammarAccess.getUnaryExprAccess().getOperandAssignment_0_2(), "rule__UnaryExpr__OperandAssignment_0_2");
					put(grammarAccess.getExpr700Access().getArgsAssignment_1_0_2(), "rule__Expr700__ArgsAssignment_1_0_2");
					put(grammarAccess.getExpr700Access().getArgs2Assignment_1_0_4_1(), "rule__Expr700__Args2Assignment_1_0_4_1");
					put(grammarAccess.getExpr700Access().getRecordAssignment_1_1_2(), "rule__Expr700__RecordAssignment_1_1_2");
					put(grammarAccess.getExpr800Access().getFunctionAssignment_1_2(), "rule__Expr800__FunctionAssignment_1_2");
					put(grammarAccess.getExprMaxAccess().getBodyAssignment_2_2(), "rule__ExprMax__BodyAssignment_2_2");
					put(grammarAccess.getMacroCallAccess().getMacroNameAssignment_0(), "rule__MacroCall__MacroNameAssignment_0");
					put(grammarAccess.getMacroCallAccess().getArgsAssignment_1_1(), "rule__MacroCall__ArgsAssignment_1_1");
					put(grammarAccess.getRecordExprAccess().getRecAssignment_0(), "rule__RecordExpr__RecAssignment_0");
					put(grammarAccess.getRecordExprAccess().getFieldAssignment_1_0_1(), "rule__RecordExpr__FieldAssignment_1_0_1");
					put(grammarAccess.getRecordExprAccess().getTupleAssignment_1_1(), "rule__RecordExpr__TupleAssignment_1_1");
					put(grammarAccess.getRecordTupleAccess().getFieldsAssignment_2_0(), "rule__RecordTuple__FieldsAssignment_2_0");
					put(grammarAccess.getRecordTupleAccess().getFieldsAssignment_2_1_1(), "rule__RecordTuple__FieldsAssignment_2_1_1");
					put(grammarAccess.getRecordFieldExprAccess().getRefAssignment_0(), "rule__RecordFieldExpr__RefAssignment_0");
					put(grammarAccess.getRecordFieldExprAccess().getValueAssignment_1_1(), "rule__RecordFieldExpr__ValueAssignment_1_1");
					put(grammarAccess.getRecordFieldExprAccess().getTypeAssignment_2_1(), "rule__RecordFieldExpr__TypeAssignment_2_1");
					put(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_0_1(), "rule__LiteralExpressionNoNumber__ValueAssignment_0_1");
					put(grammarAccess.getLiteralExpressionNoNumberAccess().getValueAssignment_2_1(), "rule__LiteralExpressionNoNumber__ValueAssignment_2_1");
					put(grammarAccess.getModuleRefAccess().getValueAssignment_1(), "rule__ModuleRef__ValueAssignment_1");
					put(grammarAccess.getFunctionRefAccess().getValueAssignment_1(), "rule__FunctionRef__ValueAssignment_1");
					put(grammarAccess.getRecordRefAccess().getValueAssignment_1(), "rule__RecordRef__ValueAssignment_1");
					put(grammarAccess.getRecordFieldRefAccess().getValueAssignment_1(), "rule__RecordFieldRef__ValueAssignment_1");
					put(grammarAccess.getTypeRefAccess().getValueAssignment_1(), "rule__TypeRef__ValueAssignment_1");
					put(grammarAccess.getMacroLiteralAccess().getValueAssignment_1(), "rule__MacroLiteral__ValueAssignment_1");
					put(grammarAccess.getMacroRefAccess().getValueAssignment_1(), "rule__MacroRef__ValueAssignment_1");
					put(grammarAccess.getVariableLiteralAccess().getValueAssignment_1(), "rule__VariableLiteral__ValueAssignment_1");
					put(grammarAccess.getStringLiteralAccess().getPartsAssignment_0(), "rule__StringLiteral__PartsAssignment_0");
					put(grammarAccess.getStringLiteralAccess().getPartsAssignment_1(), "rule__StringLiteral__PartsAssignment_1");
					put(grammarAccess.getStringLiteralPartAccess().getMacroAssignment_1(), "rule__StringLiteralPart__MacroAssignment_1");
					put(grammarAccess.getStringLiteralLiteralAccess().getStringAssignment(), "rule__StringLiteralLiteral__StringAssignment");
					put(grammarAccess.getLiteralExpressionAccess().getValueAssignment_2_1(), "rule__LiteralExpression__ValueAssignment_2_1");
					put(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1(), "rule__IntegerLiteral__ValueAssignment_1");
					put(grammarAccess.getPatternExpressionAccess().getOpAssignment_1_0_1(), "rule__PatternExpression__OpAssignment_1_0_1");
					put(grammarAccess.getPatternExpressionAccess().getOpRightAssignment_1_0_2(), "rule__PatternExpression__OpRightAssignment_1_0_2");
					put(grammarAccess.getPatternExpressionAccess().getArgsAssignment_1_1_2(), "rule__PatternExpression__ArgsAssignment_1_1_2");
					put(grammarAccess.getIfExprAccess().getClausesAssignment_1(), "rule__IfExpr__ClausesAssignment_1");
					put(grammarAccess.getIfExprAccess().getClausesAssignment_2_1(), "rule__IfExpr__ClausesAssignment_2_1");
					put(grammarAccess.getIfClauseAccess().getGuardAssignment_0(), "rule__IfClause__GuardAssignment_0");
					put(grammarAccess.getIfClauseAccess().getBodyAssignment_2(), "rule__IfClause__BodyAssignment_2");
					put(grammarAccess.getCaseExprAccess().getExprAssignment_1(), "rule__CaseExpr__ExprAssignment_1");
					put(grammarAccess.getCaseExprAccess().getClausesAssignment_3(), "rule__CaseExpr__ClausesAssignment_3");
					put(grammarAccess.getCaseExprAccess().getClausesAssignment_4_1(), "rule__CaseExpr__ClausesAssignment_4_1");
					put(grammarAccess.getCrClauseAccess().getExprAssignment_0(), "rule__CrClause__ExprAssignment_0");
					put(grammarAccess.getCrClauseAccess().getGuardAssignment_1_1(), "rule__CrClause__GuardAssignment_1_1");
					put(grammarAccess.getCrClauseAccess().getBodyAssignment_3(), "rule__CrClause__BodyAssignment_3");
					put(grammarAccess.getReceiveExprAccess().getClausesAssignment_1_0_0(), "rule__ReceiveExpr__ClausesAssignment_1_0_0");
					put(grammarAccess.getReceiveExprAccess().getClausesAssignment_1_0_1_1(), "rule__ReceiveExpr__ClausesAssignment_1_0_1_1");
					put(grammarAccess.getReceiveExprAccess().getAfter_exprAssignment_1_0_2_1(), "rule__ReceiveExpr__After_exprAssignment_1_0_2_1");
					put(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_0_2_3(), "rule__ReceiveExpr__After_bodyAssignment_1_0_2_3");
					put(grammarAccess.getReceiveExprAccess().getAfter_exprAssignment_1_1_1(), "rule__ReceiveExpr__After_exprAssignment_1_1_1");
					put(grammarAccess.getReceiveExprAccess().getAfter_bodyAssignment_1_1_3(), "rule__ReceiveExpr__After_bodyAssignment_1_1_3");
					put(grammarAccess.getFunRefAccess().getModuleAssignment_0_0(), "rule__FunRef__ModuleAssignment_0_0");
					put(grammarAccess.getFunRefAccess().getFunctionAssignment_1(), "rule__FunRef__FunctionAssignment_1");
					put(grammarAccess.getFunRefAccess().getArityAssignment_3(), "rule__FunRef__ArityAssignment_3");
					put(grammarAccess.getInlineFunAccess().getClausesAssignment_0(), "rule__InlineFun__ClausesAssignment_0");
					put(grammarAccess.getInlineFunAccess().getClausesAssignment_1_1(), "rule__InlineFun__ClausesAssignment_1_1");
					put(grammarAccess.getTryExprAccess().getBodyAssignment_1(), "rule__TryExpr__BodyAssignment_1");
					put(grammarAccess.getTryExprAccess().getOf_clausesAssignment_2_1(), "rule__TryExpr__Of_clausesAssignment_2_1");
					put(grammarAccess.getTryExprAccess().getOf_clausesAssignment_2_2_1(), "rule__TryExpr__Of_clausesAssignment_2_2_1");
					put(grammarAccess.getTryExprAccess().getCatchAssignment_3_0_1(), "rule__TryExpr__CatchAssignment_3_0_1");
					put(grammarAccess.getTryExprAccess().getCatchAssignment_3_0_2_1(), "rule__TryExpr__CatchAssignment_3_0_2_1");
					put(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_3_0_3_1(), "rule__TryExpr__After_bodyAssignment_3_0_3_1");
					put(grammarAccess.getTryExprAccess().getAfter_bodyAssignment_3_1_1(), "rule__TryExpr__After_bodyAssignment_3_1_1");
					put(grammarAccess.getTryClauseAccess().getHdrAssignment_0_0_0(), "rule__TryClause__HdrAssignment_0_0_0");
					put(grammarAccess.getTryClauseAccess().getCondAssignment_1(), "rule__TryClause__CondAssignment_1");
					put(grammarAccess.getTryClauseAccess().getGuardAssignment_2_1(), "rule__TryClause__GuardAssignment_2_1");
					put(grammarAccess.getTryClauseAccess().getBodyAssignment_4(), "rule__TryClause__BodyAssignment_4");
					put(grammarAccess.getListOrComprehensionAccess().getElementsAssignment_1_1_0(), "rule__ListOrComprehension__ElementsAssignment_1_1_0");
					put(grammarAccess.getListOrComprehensionAccess().getElementsAssignment_1_1_1_1(), "rule__ListOrComprehension__ElementsAssignment_1_1_1_1");
					put(grammarAccess.getListOrComprehensionAccess().getTailAssignment_1_1_2_0_1(), "rule__ListOrComprehension__TailAssignment_1_1_2_0_1");
					put(grammarAccess.getListOrComprehensionAccess().getGeneratorsAssignment_1_1_2_1_2(), "rule__ListOrComprehension__GeneratorsAssignment_1_1_2_1_2");
					put(grammarAccess.getListOrComprehensionAccess().getGeneratorsAssignment_1_1_2_1_3_1(), "rule__ListOrComprehension__GeneratorsAssignment_1_1_2_1_3_1");
					put(grammarAccess.getTupleAccess().getElementsAssignment_1_1_0(), "rule__Tuple__ElementsAssignment_1_1_0");
					put(grammarAccess.getTupleAccess().getElementsAssignment_1_1_1_1(), "rule__Tuple__ElementsAssignment_1_1_1_1");
					put(grammarAccess.getBinaryOrComprehensionAccess().getElementsAssignment_1_1_0(), "rule__BinaryOrComprehension__ElementsAssignment_1_1_0");
					put(grammarAccess.getBinaryOrComprehensionAccess().getElementsAssignment_1_1_1_1(), "rule__BinaryOrComprehension__ElementsAssignment_1_1_1_1");
					put(grammarAccess.getBinaryOrComprehensionAccess().getGeneratorsAssignment_1_1_2_2(), "rule__BinaryOrComprehension__GeneratorsAssignment_1_1_2_2");
					put(grammarAccess.getBinaryOrComprehensionAccess().getGeneratorsAssignment_1_1_2_3_1(), "rule__BinaryOrComprehension__GeneratorsAssignment_1_1_2_3_1");
					put(grammarAccess.getBinaryItemAccess().getExprAssignment_0(), "rule__BinaryItem__ExprAssignment_0");
					put(grammarAccess.getBinaryItemAccess().getSizeAssignment_1_1(), "rule__BinaryItem__SizeAssignment_1_1");
					put(grammarAccess.getBinaryItemAccess().getTypesAssignment_2_1(), "rule__BinaryItem__TypesAssignment_2_1");
					put(grammarAccess.getBinaryItemAccess().getTypeAssignment_2_2_1(), "rule__BinaryItem__TypeAssignment_2_2_1");
					put(grammarAccess.getBitTypeAccess().getTypeNameAssignment_0(), "rule__BitType__TypeNameAssignment_0");
					put(grammarAccess.getBitTypeAccess().getSizeAssignment_1_1(), "rule__BitType__SizeAssignment_1_1");
					put(grammarAccess.getUnaryExprMaxAccess().getOpAssignment_0_1(), "rule__UnaryExprMax__OpAssignment_0_1");
					put(grammarAccess.getUnaryExprMaxAccess().getOperandAssignment_0_2(), "rule__UnaryExprMax__OperandAssignment_0_2");
					put(grammarAccess.getLCExprAccess().getO1Assignment_0(), "rule__LCExpr__O1Assignment_0");
					put(grammarAccess.getLCExprAccess().getOpAssignment_1_0(), "rule__LCExpr__OpAssignment_1_0");
					put(grammarAccess.getLCExprAccess().getO2Assignment_1_1(), "rule__LCExpr__O2Assignment_1_1");
					put(grammarAccess.getSpecFunAccess().getModuleAssignment_0_0(), "rule__SpecFun__ModuleAssignment_0_0");
					put(grammarAccess.getSpecFunAccess().getFunctionAssignment_1(), "rule__SpecFun__FunctionAssignment_1");
					put(grammarAccess.getSpecFunAccess().getArityAssignment_2_1(), "rule__SpecFun__ArityAssignment_2_1");
					put(grammarAccess.getTypeSigAccess().getDeclAssignment_0(), "rule__TypeSig__DeclAssignment_0");
					put(grammarAccess.getTypeSigAccess().getGuardsAssignment_1_1(), "rule__TypeSig__GuardsAssignment_1_1");
					put(grammarAccess.getFunTypeAccess().getArgsAssignment_1_0(), "rule__FunType__ArgsAssignment_1_0");
					put(grammarAccess.getFunTypeAccess().getArgsAssignment_1_1_1(), "rule__FunType__ArgsAssignment_1_1_1");
					put(grammarAccess.getFunTypeAccess().getReturnAssignment_4(), "rule__FunType__ReturnAssignment_4");
					put(grammarAccess.getTypeGuardsAccess().getItemsAssignment_0(), "rule__TypeGuards__ItemsAssignment_0");
					put(grammarAccess.getTypeGuardsAccess().getItemsAssignment_1_1(), "rule__TypeGuards__ItemsAssignment_1_1");
					put(grammarAccess.getTypeGuardAccess().getTypeNameAssignment_0_0(), "rule__TypeGuard__TypeNameAssignment_0_0");
					put(grammarAccess.getTypeGuardAccess().getTypesAssignment_0_2(), "rule__TypeGuard__TypesAssignment_0_2");
					put(grammarAccess.getTypeGuardAccess().getTypesAssignment_0_3_1(), "rule__TypeGuard__TypesAssignment_0_3_1");
					put(grammarAccess.getTypeGuardAccess().getTypeNameAssignment_1_0(), "rule__TypeGuard__TypeNameAssignment_1_0");
					put(grammarAccess.getTypeGuardAccess().getTypeAssignment_1_2(), "rule__TypeGuard__TypeAssignment_1_2");
					put(grammarAccess.getTopTypeAccess().getVarAssignment_0_0(), "rule__TopType__VarAssignment_0_0");
					put(grammarAccess.getTopTypeAccess().getTypeAssignment_1(), "rule__TopType__TypeAssignment_1");
					put(grammarAccess.getType100Access().getOpAssignment_1_0_0_1(), "rule__Type100__OpAssignment_1_0_0_1");
					put(grammarAccess.getType100Access().getRightOperandAssignment_1_1(), "rule__Type100__RightOperandAssignment_1_1");
					put(grammarAccess.getType200Access().getOpAssignment_1_0_0_1(), "rule__Type200__OpAssignment_1_0_0_1");
					put(grammarAccess.getType200Access().getRightOperandAssignment_1_1(), "rule__Type200__RightOperandAssignment_1_1");
					put(grammarAccess.getType300Access().getOpAssignment_1_0_0_1(), "rule__Type300__OpAssignment_1_0_0_1");
					put(grammarAccess.getType300Access().getRightOperandAssignment_1_1(), "rule__Type300__RightOperandAssignment_1_1");
					put(grammarAccess.getType400Access().getOpAssignment_1_0_0_1(), "rule__Type400__OpAssignment_1_0_0_1");
					put(grammarAccess.getType400Access().getRightOperandAssignment_1_1(), "rule__Type400__RightOperandAssignment_1_1");
					put(grammarAccess.getType500Access().getOpAssignment_0_1(), "rule__Type500__OpAssignment_0_1");
					put(grammarAccess.getType500Access().getOperandAssignment_0_2(), "rule__Type500__OperandAssignment_0_2");
					put(grammarAccess.getTypeAccess().getMAssignment_1_1_0(), "rule__Type__MAssignment_1_1_0");
					put(grammarAccess.getTypeAccess().getTypeNameAssignment_1_2(), "rule__Type__TypeNameAssignment_1_2");
					put(grammarAccess.getTypeAccess().getArgsAssignment_1_3_1_0(), "rule__Type__ArgsAssignment_1_3_1_0");
					put(grammarAccess.getTypeAccess().getArgsAssignment_1_3_1_1_1(), "rule__Type__ArgsAssignment_1_3_1_1_1");
					put(grammarAccess.getTypeAccess().getTypeNameAssignment_2(), "rule__Type__TypeNameAssignment_2");
					put(grammarAccess.getTypeAccess().getValueAssignment_3(), "rule__Type__ValueAssignment_3");
					put(grammarAccess.getTypeAccess().getTypeAssignment_4_2_0(), "rule__Type__TypeAssignment_4_2_0");
					put(grammarAccess.getTypeAccess().getTypesAssignment_5_2_0(), "rule__Type__TypesAssignment_5_2_0");
					put(grammarAccess.getTypeAccess().getTypesAssignment_5_2_1_1(), "rule__Type__TypesAssignment_5_2_1_1");
					put(grammarAccess.getTypeAccess().getRecAssignment_6_2(), "rule__Type__RecAssignment_6_2");
					put(grammarAccess.getTypeAccess().getFieldsAssignment_6_4_0(), "rule__Type__FieldsAssignment_6_4_0");
					put(grammarAccess.getTypeAccess().getFieldsAssignment_6_4_1_1(), "rule__Type__FieldsAssignment_6_4_1_1");
					put(grammarAccess.getTypeAccess().getTypeAssignment_8_3(), "rule__Type__TypeAssignment_8_3");
					put(grammarAccess.getFieldTypeAccess().getTypeNameAssignment_0(), "rule__FieldType__TypeNameAssignment_0");
					put(grammarAccess.getFieldTypeAccess().getTypeAssignment_2(), "rule__FieldType__TypeAssignment_2");
					put(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_0_0(), "rule__BinaryType__TypeAssignment_2_0_0");
					put(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_0_1_1(), "rule__BinaryType__TypeAssignment_2_0_1_1");
					put(grammarAccess.getBinaryTypeAccess().getTypeAssignment_2_1(), "rule__BinaryType__TypeAssignment_2_1");
					put(grammarAccess.getBinBaseTypeAccess().getTypeNameAssignment_0(), "rule__BinBaseType__TypeNameAssignment_0");
					put(grammarAccess.getBinBaseTypeAccess().getTypeAssignment_2(), "rule__BinBaseType__TypeAssignment_2");
					put(grammarAccess.getBinUnitTypeAccess().getTypeNameAssignment_0(), "rule__BinUnitType__TypeNameAssignment_0");
					put(grammarAccess.getBinUnitTypeAccess().getMAssignment_2(), "rule__BinUnitType__MAssignment_2");
					put(grammarAccess.getBinUnitTypeAccess().getTypeAssignment_4(), "rule__BinUnitType__TypeAssignment_4");
					put(grammarAccess.getFunType100Access().getItemsAssignment_2_1_0(), "rule__FunType100__ItemsAssignment_2_1_0");
					put(grammarAccess.getFunType100Access().getItemsAssignment_2_1_1_1(), "rule__FunType100__ItemsAssignment_2_1_1_1");
					put(grammarAccess.getFunType100Access().getReturnAssignment_5(), "rule__FunType100__ReturnAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.erlide.ui.contentassist.antlr.internal.InternalErlangParser typedParser = (org.erlide.ui.contentassist.antlr.internal.InternalErlangParser) parser;
			typedParser.entryRuleModule();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_SL_COMMENT" };
	}
	
	public ErlangGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ErlangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
