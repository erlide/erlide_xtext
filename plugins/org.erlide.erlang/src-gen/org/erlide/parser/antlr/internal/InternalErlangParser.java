package org.erlide.parser.antlr.internal;

import org.antlr.runtime.BaseRecognizer;
import org.antlr.runtime.BitSet;
import org.antlr.runtime.DFA;
import org.antlr.runtime.EarlyExitException;
import org.antlr.runtime.IntStream;
import org.antlr.runtime.MismatchedSetException;
import org.antlr.runtime.NoViableAltException;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.RecognizerSharedState;
import org.antlr.runtime.Token;
import org.antlr.runtime.TokenStream;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.erlide.services.ErlangGrammarAccess;

@SuppressWarnings("all")
public class InternalErlangParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] { "<invalid>",
            "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ATOM", "RULE_CHAR",
            "RULE_VARIABLE", "RULE_INT", "RULE_BASED_INT", "RULE_EXT_INT",
            "RULE_ATOM_STARTER", "RULE_IN_WORD_CHAR", "RULE_ESCAPE",
            "RULE_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_HEX_DIGIT",
            "'.'", "'-'", "'define'", "'('", "','", "')'", "'undef'",
            "'ifdef'", "'ifndef'", "'else'", "'endif'", "'include'",
            "'include_lib'", "'file'", "'module'", "'encoding'", "'record'",
            "'{'", "'}'", "'='", "'::'", "'export'", "'['", "']'", "'import'",
            "'compile'", "'spec'", "'callback'", "';'", "'type'", "'opaque'",
            "'when'", "'->'", "'?'", "'line'", "'catch'", "'orelse'",
            "'andalso'", "'#'", "':'", "'begin'", "'end'", "'query'", "'cond'",
            "'let'", "'if'", "'case'", "'of'", "'receive'", "'after'", "'fun'",
            "'/'", "'try'", "'|'", "'||'", "'<<'", "'>>'", "'<-'", "'<='",
            "'+'", "'bor'", "'bxor'", "'bsl'", "'bsr'", "'or'", "'xor'", "'*'",
            "'div'", "'rem'", "'band'", "'and'", "'bnot'", "'not'", "'++'",
            "'--'", "'=='", "'/='", "'=<'", "'<'", "'>='", "'>'", "'=:='",
            "'=/='", "'!'", "'??'", "'..'", "'...'" };
    public static final int T__50 = 50;
    public static final int T__59 = 59;
    public static final int T__55 = 55;
    public static final int T__56 = 56;
    public static final int T__57 = 57;
    public static final int T__58 = 58;
    public static final int T__51 = 51;
    public static final int T__52 = 52;
    public static final int T__53 = 53;
    public static final int T__54 = 54;
    public static final int T__60 = 60;
    public static final int T__61 = 61;
    public static final int RULE_INT = 8;
    public static final int T__66 = 66;
    public static final int T__67 = 67;
    public static final int T__68 = 68;
    public static final int T__69 = 69;
    public static final int T__62 = 62;
    public static final int T__63 = 63;
    public static final int T__64 = 64;
    public static final int T__65 = 65;
    public static final int T__37 = 37;
    public static final int T__38 = 38;
    public static final int T__39 = 39;
    public static final int T__33 = 33;
    public static final int T__34 = 34;
    public static final int T__35 = 35;
    public static final int T__36 = 36;
    public static final int T__30 = 30;
    public static final int T__31 = 31;
    public static final int T__32 = 32;
    public static final int RULE_VARIABLE = 7;
    public static final int T__48 = 48;
    public static final int T__49 = 49;
    public static final int T__44 = 44;
    public static final int T__45 = 45;
    public static final int RULE_HEX_DIGIT = 17;
    public static final int T__46 = 46;
    public static final int T__47 = 47;
    public static final int T__40 = 40;
    public static final int T__41 = 41;
    public static final int T__42 = 42;
    public static final int T__43 = 43;
    public static final int T__91 = 91;
    public static final int T__100 = 100;
    public static final int T__92 = 92;
    public static final int T__93 = 93;
    public static final int T__102 = 102;
    public static final int T__94 = 94;
    public static final int T__101 = 101;
    public static final int T__90 = 90;
    public static final int T__19 = 19;
    public static final int RULE_ATOM = 5;
    public static final int T__18 = 18;
    public static final int T__99 = 99;
    public static final int RULE_CHAR = 6;
    public static final int T__95 = 95;
    public static final int T__96 = 96;
    public static final int T__97 = 97;
    public static final int T__98 = 98;
    public static final int RULE_ESCAPE = 13;
    public static final int T__26 = 26;
    public static final int T__27 = 27;
    public static final int T__28 = 28;
    public static final int T__29 = 29;
    public static final int T__22 = 22;
    public static final int T__23 = 23;
    public static final int T__24 = 24;
    public static final int T__25 = 25;
    public static final int T__20 = 20;
    public static final int T__21 = 21;
    public static final int T__70 = 70;
    public static final int T__71 = 71;
    public static final int T__72 = 72;
    public static final int RULE_STRING = 4;
    public static final int RULE_SL_COMMENT = 15;
    public static final int T__77 = 77;
    public static final int T__78 = 78;
    public static final int T__79 = 79;
    public static final int T__73 = 73;
    public static final int EOF = -1;
    public static final int T__74 = 74;
    public static final int T__75 = 75;
    public static final int T__76 = 76;
    public static final int T__80 = 80;
    public static final int T__81 = 81;
    public static final int T__82 = 82;
    public static final int T__83 = 83;
    public static final int RULE_WS = 16;
    public static final int RULE_EXT_INT = 10;
    public static final int RULE_ATOM_STARTER = 11;
    public static final int RULE_COMMENT = 14;
    public static final int RULE_BASED_INT = 9;
    public static final int RULE_IN_WORD_CHAR = 12;
    public static final int T__88 = 88;
    public static final int T__89 = 89;
    public static final int T__84 = 84;
    public static final int T__104 = 104;
    public static final int T__85 = 85;
    public static final int T__103 = 103;
    public static final int T__86 = 86;
    public static final int T__87 = 87;

    // delegates
    // delegators

    public InternalErlangParser(final TokenStream input) {
        this(input, new RecognizerSharedState());
    }

    public InternalErlangParser(final TokenStream input,
            final RecognizerSharedState state) {
        super(input, state);

    }

    @Override
    public String[] getTokenNames() {
        return InternalErlangParser.tokenNames;
    }

    @Override
    public String getGrammarFileName() {
        return "../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g";
    }

    private ErlangGrammarAccess grammarAccess;

    public InternalErlangParser(final TokenStream input,
            final ErlangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
        return "Module";
    }

    @Override
    protected ErlangGrammarAccess getGrammarAccess() {
        return grammarAccess;
    }

    // $ANTLR start "entryRuleModule"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:67:1:
    // entryRuleModule returns [EObject current=null] : iv_ruleModule=
    // ruleModule EOF ;
    public final EObject entryRuleModule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModule = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:68:2:
            // (iv_ruleModule= ruleModule EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:69:2:
            // iv_ruleModule= ruleModule EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getModuleRule());
                }
                pushFollow(FOLLOW_ruleModule_in_entryRuleModule75);
                iv_ruleModule = ruleModule();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleModule;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleModule85);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleModule"

    // $ANTLR start "ruleModule"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:76:1:
    // ruleModule returns [EObject current=null] : ( (lv_forms_0_0= ruleForm )
    // )* ;
    public final EObject ruleModule() throws RecognitionException {
        EObject current = null;

        EObject lv_forms_0_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:79:28:
            // ( ( (lv_forms_0_0= ruleForm ) )* )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:80:1:
            // ( (lv_forms_0_0= ruleForm ) )*
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:80:1:
                // ( (lv_forms_0_0= ruleForm ) )*
                loop1:
                do {
                    int alt1 = 2;
                    final int LA1_0 = input.LA(1);

                    if (LA1_0 == RULE_ATOM || LA1_0 >= 19 && LA1_0 <= 20
                            || LA1_0 >= 24 && LA1_0 <= 34 || LA1_0 == 39
                            || LA1_0 >= 42 && LA1_0 <= 45 || LA1_0 >= 47
                            && LA1_0 <= 48 || LA1_0 >= 51 && LA1_0 <= 52
                            || LA1_0 == 102) {
                        alt1 = 1;
                    }

                    switch (alt1) {
                    case 1:
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:81:1:
                    // (lv_forms_0_0= ruleForm )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:81:1:
                        // (lv_forms_0_0= ruleForm )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:82:3:
                        // lv_forms_0_0= ruleForm
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getModuleAccess()
                                        .getFormsFormParserRuleCall_0());

                            }
                            pushFollow(FOLLOW_ruleForm_in_ruleModule130);
                            lv_forms_0_0 = ruleForm();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getModuleRule());
                                }
                                add(current, "forms", lv_forms_0_0, "Form");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;

                    default:
                        break loop1;
                    }
                } while (true);

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleModule"

    // $ANTLR start "entryRuleForm"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:108:1:
    // entryRuleForm returns [EObject current=null] : iv_ruleForm= ruleForm EOF
    // ;
    public final EObject entryRuleForm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForm = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:109:2:
            // (iv_ruleForm= ruleForm EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:110:2:
            // iv_ruleForm= ruleForm EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFormRule());
                }
                pushFollow(FOLLOW_ruleForm_in_entryRuleForm168);
                iv_ruleForm = ruleForm();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleForm;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleForm178);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleForm"

    // $ANTLR start "ruleForm"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:117:1:
    // ruleForm returns [EObject current=null] : (this_Attribute_0=
    // ruleAttribute | this_Function_1= ruleFunction |
    // this_ConditionalFormBlock_2= ruleConditionalFormBlock | ( () (
    // (lv_call_4_0= ruleMacroCall ) ) otherlv_5= '.' ) ) ;
    public final EObject ruleForm() throws RecognitionException {
        EObject current = null;

        Token otherlv_5 = null;
        EObject this_Attribute_0 = null;

        EObject this_Function_1 = null;

        EObject this_ConditionalFormBlock_2 = null;

        EObject lv_call_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:120:28:
            // ( (this_Attribute_0= ruleAttribute | this_Function_1=
            // ruleFunction | this_ConditionalFormBlock_2=
            // ruleConditionalFormBlock | ( () ( (lv_call_4_0= ruleMacroCall ) )
            // otherlv_5= '.' ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:121:1:
            // (this_Attribute_0= ruleAttribute | this_Function_1= ruleFunction
            // | this_ConditionalFormBlock_2= ruleConditionalFormBlock | ( () (
            // (lv_call_4_0= ruleMacroCall ) ) otherlv_5= '.' ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:121:1:
                // (this_Attribute_0= ruleAttribute | this_Function_1=
                // ruleFunction | this_ConditionalFormBlock_2=
                // ruleConditionalFormBlock | ( () ( (lv_call_4_0= ruleMacroCall
                // ) ) otherlv_5= '.' ) )
                int alt2 = 4;
                switch (input.LA(1)) {
                case 19: {
                    final int LA2_1 = input.LA(2);

                    if (LA2_1 == RULE_ATOM || LA2_1 == 20 || LA2_1 == 24
                            || LA2_1 >= 29 && LA2_1 <= 34 || LA2_1 == 39
                            || LA2_1 >= 42 && LA2_1 <= 45 || LA2_1 >= 47
                            && LA2_1 <= 48) {
                        alt2 = 1;
                    } else if (LA2_1 >= 25 && LA2_1 <= 26) {
                        alt2 = 3;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 2, 1, input);

                        throw nvae;
                    }
                }
                    break;
                case RULE_ATOM:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 52: {
                    alt2 = 2;
                }
                    break;
                case 51:
                case 102: {
                    alt2 = 4;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 2, 0, input);

                    throw nvae;
                }

                switch (alt2) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:122:5:
                // this_Attribute_0= ruleAttribute
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getFormAccess()
                                .getAttributeParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleAttribute_in_ruleForm225);
                    this_Attribute_0 = ruleAttribute();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Attribute_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:132:5:
                // this_Function_1= ruleFunction
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getFormAccess()
                                .getFunctionParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleFunction_in_ruleForm252);
                    this_Function_1 = ruleFunction();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Function_1;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:142:5:
                // this_ConditionalFormBlock_2= ruleConditionalFormBlock
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getFormAccess()
                                .getConditionalFormBlockParserRuleCall_2());

                    }
                    pushFollow(FOLLOW_ruleConditionalFormBlock_in_ruleForm279);
                    this_ConditionalFormBlock_2 = ruleConditionalFormBlock();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_ConditionalFormBlock_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:151:6:
                // ( () ( (lv_call_4_0= ruleMacroCall ) ) otherlv_5= '.' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:151:6:
                    // ( () ( (lv_call_4_0= ruleMacroCall ) ) otherlv_5= '.' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:151:7:
                    // () ( (lv_call_4_0= ruleMacroCall ) ) otherlv_5= '.'
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:151:7:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:152:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getFormAccess()
                                        .getMacroFormAction_3_0(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:157:2:
                        // ( (lv_call_4_0= ruleMacroCall ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:158:1:
                        // (lv_call_4_0= ruleMacroCall )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:158:1:
                            // (lv_call_4_0= ruleMacroCall )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:159:3:
                            // lv_call_4_0= ruleMacroCall
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getFormAccess()
                                            .getCallMacroCallParserRuleCall_3_1_0());

                                }
                                pushFollow(FOLLOW_ruleMacroCall_in_ruleForm315);
                                lv_call_4_0 = ruleMacroCall();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getFormRule());
                                    }
                                    set(current, "call", lv_call_4_0,
                                            "MacroCall");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        otherlv_5 = (Token) match(input, 18,
                                FOLLOW_18_in_ruleForm327);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_5, grammarAccess
                                    .getFormAccess().getFullStopKeyword_3_2());

                        }

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleForm"

    // $ANTLR start "entryRuleConditionalFormBlock"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:187:1:
    // entryRuleConditionalFormBlock returns [EObject current=null] :
    // iv_ruleConditionalFormBlock= ruleConditionalFormBlock EOF ;
    public final EObject entryRuleConditionalFormBlock()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalFormBlock = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:188:2:
            // (iv_ruleConditionalFormBlock= ruleConditionalFormBlock EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:189:2:
            // iv_ruleConditionalFormBlock= ruleConditionalFormBlock EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess
                            .getConditionalFormBlockRule());
                }
                pushFollow(FOLLOW_ruleConditionalFormBlock_in_entryRuleConditionalFormBlock364);
                iv_ruleConditionalFormBlock = ruleConditionalFormBlock();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleConditionalFormBlock;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleConditionalFormBlock374);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleConditionalFormBlock"

    // $ANTLR start "ruleConditionalFormBlock"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:196:1:
    // ruleConditionalFormBlock returns [EObject current=null] : ( (
    // (lv_condition_0_0= ruleIfdefAttribute ) ) ( (lv_ifForms_1_0= ruleForm )
    // )* ( ( ( ( ruleElseAttribute ) )=> (lv_hasElse_2_0= ruleElseAttribute ) )
    // ( (lv_elseForms_3_0= ruleForm ) )* )? ( (lv_end_4_0= ruleEndifAttribute )
    // ) ) ;
    public final EObject ruleConditionalFormBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_condition_0_0 = null;

        EObject lv_ifForms_1_0 = null;

        EObject lv_hasElse_2_0 = null;

        EObject lv_elseForms_3_0 = null;

        EObject lv_end_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:199:28:
            // ( ( ( (lv_condition_0_0= ruleIfdefAttribute ) ) (
            // (lv_ifForms_1_0= ruleForm ) )* ( ( ( ( ruleElseAttribute ) )=>
            // (lv_hasElse_2_0= ruleElseAttribute ) ) ( (lv_elseForms_3_0=
            // ruleForm ) )* )? ( (lv_end_4_0= ruleEndifAttribute ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:200:1:
            // ( ( (lv_condition_0_0= ruleIfdefAttribute ) ) ( (lv_ifForms_1_0=
            // ruleForm ) )* ( ( ( ( ruleElseAttribute ) )=> (lv_hasElse_2_0=
            // ruleElseAttribute ) ) ( (lv_elseForms_3_0= ruleForm ) )* )? (
            // (lv_end_4_0= ruleEndifAttribute ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:200:1:
                // ( ( (lv_condition_0_0= ruleIfdefAttribute ) ) (
                // (lv_ifForms_1_0= ruleForm ) )* ( ( ( ( ruleElseAttribute )
                // )=> (lv_hasElse_2_0= ruleElseAttribute ) ) (
                // (lv_elseForms_3_0= ruleForm ) )* )? ( (lv_end_4_0=
                // ruleEndifAttribute ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:200:2:
                // ( (lv_condition_0_0= ruleIfdefAttribute ) ) (
                // (lv_ifForms_1_0= ruleForm ) )* ( ( ( ( ruleElseAttribute )
                // )=> (lv_hasElse_2_0= ruleElseAttribute ) ) (
                // (lv_elseForms_3_0= ruleForm ) )* )? ( (lv_end_4_0=
                // ruleEndifAttribute ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:200:2:
                    // ( (lv_condition_0_0= ruleIfdefAttribute ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:201:1:
                    // (lv_condition_0_0= ruleIfdefAttribute )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:201:1:
                        // (lv_condition_0_0= ruleIfdefAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:202:3:
                        // lv_condition_0_0= ruleIfdefAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getConditionalFormBlockAccess()
                                        .getConditionIfdefAttributeParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleIfdefAttribute_in_ruleConditionalFormBlock420);
                            lv_condition_0_0 = ruleIfdefAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getConditionalFormBlockRule());
                                }
                                set(current, "condition", lv_condition_0_0,
                                        "IfdefAttribute");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:218:2:
                    // ( (lv_ifForms_1_0= ruleForm ) )*
                    loop3:
                    do {
                        int alt3 = 2;
                        final int LA3_0 = input.LA(1);

                        if (LA3_0 == 19) {
                            final int LA3_1 = input.LA(2);

                            if (LA3_1 == RULE_ATOM || LA3_1 == 20
                                    || LA3_1 >= 24 && LA3_1 <= 26
                                    || LA3_1 >= 29 && LA3_1 <= 34
                                    || LA3_1 == 39 || LA3_1 >= 42
                                    && LA3_1 <= 45 || LA3_1 >= 47
                                    && LA3_1 <= 48) {
                                alt3 = 1;
                            }

                        } else if (LA3_0 == RULE_ATOM || LA3_0 == 20
                                || LA3_0 >= 24 && LA3_0 <= 34 || LA3_0 == 39
                                || LA3_0 >= 42 && LA3_0 <= 45 || LA3_0 >= 47
                                && LA3_0 <= 48 || LA3_0 >= 51 && LA3_0 <= 52
                                || LA3_0 == 102) {
                            alt3 = 1;
                        }

                        switch (alt3) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:219:1:
                        // (lv_ifForms_1_0= ruleForm )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:219:1:
                            // (lv_ifForms_1_0= ruleForm )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:220:3:
                            // lv_ifForms_1_0= ruleForm
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getConditionalFormBlockAccess()
                                            .getIfFormsFormParserRuleCall_1_0());

                                }
                                pushFollow(FOLLOW_ruleForm_in_ruleConditionalFormBlock441);
                                lv_ifForms_1_0 = ruleForm();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getConditionalFormBlockRule());
                                    }
                                    add(current, "ifForms", lv_ifForms_1_0,
                                            "Form");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }
                            break;

                        default:
                            break loop3;
                        }
                    } while (true);

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:236:3:
                    // ( ( ( ( ruleElseAttribute ) )=> (lv_hasElse_2_0=
                    // ruleElseAttribute ) ) ( (lv_elseForms_3_0= ruleForm ) )*
                    // )?
                    int alt5 = 2;
                    final int LA5_0 = input.LA(1);

                    if (LA5_0 == 19) {
                        final int LA5_1 = input.LA(2);

                        if (LA5_1 == 27 && synpred1_InternalErlang()) {
                            alt5 = 1;
                        }
                    }
                    switch (alt5) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:236:4:
                    // ( ( ( ruleElseAttribute ) )=> (lv_hasElse_2_0=
                    // ruleElseAttribute ) ) ( (lv_elseForms_3_0= ruleForm ) )*
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:236:4:
                        // ( ( ( ruleElseAttribute ) )=> (lv_hasElse_2_0=
                        // ruleElseAttribute ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:236:5:
                        // ( ( ruleElseAttribute ) )=> (lv_hasElse_2_0=
                        // ruleElseAttribute )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:241:1:
                            // (lv_hasElse_2_0= ruleElseAttribute )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:242:3:
                            // lv_hasElse_2_0= ruleElseAttribute
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getConditionalFormBlockAccess()
                                            .getHasElseElseAttributeParserRuleCall_2_0_0());

                                }
                                pushFollow(FOLLOW_ruleElseAttribute_in_ruleConditionalFormBlock474);
                                lv_hasElse_2_0 = ruleElseAttribute();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getConditionalFormBlockRule());
                                    }
                                    set(current, "hasElse", true,
                                            "ElseAttribute");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:258:2:
                        // ( (lv_elseForms_3_0= ruleForm ) )*
                        loop4:
                        do {
                            int alt4 = 2;
                            final int LA4_0 = input.LA(1);

                            if (LA4_0 == 19) {
                                final int LA4_1 = input.LA(2);

                                if (LA4_1 == RULE_ATOM || LA4_1 == 20
                                        || LA4_1 >= 24 && LA4_1 <= 26
                                        || LA4_1 >= 29 && LA4_1 <= 34
                                        || LA4_1 == 39 || LA4_1 >= 42
                                        && LA4_1 <= 45 || LA4_1 >= 47
                                        && LA4_1 <= 48) {
                                    alt4 = 1;
                                }

                            } else if (LA4_0 == RULE_ATOM || LA4_0 == 20
                                    || LA4_0 >= 24 && LA4_0 <= 34
                                    || LA4_0 == 39 || LA4_0 >= 42
                                    && LA4_0 <= 45 || LA4_0 >= 47
                                    && LA4_0 <= 48 || LA4_0 >= 51
                                    && LA4_0 <= 52 || LA4_0 == 102) {
                                alt4 = 1;
                            }

                            switch (alt4) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:259:1:
                            // (lv_elseForms_3_0= ruleForm )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:259:1:
                                // (lv_elseForms_3_0= ruleForm )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:260:3:
                                // lv_elseForms_3_0= ruleForm
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getConditionalFormBlockAccess()
                                                .getElseFormsFormParserRuleCall_2_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleForm_in_ruleConditionalFormBlock495);
                                    lv_elseForms_3_0 = ruleForm();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getConditionalFormBlockRule());
                                        }
                                        add(current, "elseForms",
                                                lv_elseForms_3_0, "Form");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }
                                break;

                            default:
                                break loop4;
                            }
                        } while (true);

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:276:5:
                    // ( (lv_end_4_0= ruleEndifAttribute ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:277:1:
                    // (lv_end_4_0= ruleEndifAttribute )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:277:1:
                        // (lv_end_4_0= ruleEndifAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:278:3:
                        // lv_end_4_0= ruleEndifAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getConditionalFormBlockAccess()
                                        .getEndEndifAttributeParserRuleCall_3_0());

                            }
                            pushFollow(FOLLOW_ruleEndifAttribute_in_ruleConditionalFormBlock519);
                            lv_end_4_0 = ruleEndifAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getConditionalFormBlockRule());
                                }
                                set(current, "end", lv_end_4_0,
                                        "EndifAttribute");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleConditionalFormBlock"

    // $ANTLR start "entryRuleAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:302:1:
    // entryRuleAttribute returns [EObject current=null] : iv_ruleAttribute=
    // ruleAttribute EOF ;
    public final EObject entryRuleAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:303:2:
            // (iv_ruleAttribute= ruleAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:304:2:
            // iv_ruleAttribute= ruleAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getAttributeRule());
                }
                pushFollow(FOLLOW_ruleAttribute_in_entryRuleAttribute555);
                iv_ruleAttribute = ruleAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleAttribute565);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleAttribute"

    // $ANTLR start "ruleAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:311:1:
    // ruleAttribute returns [EObject current=null] : (otherlv_0= '-' ( ( ( (
    // 'module' ) )=>this_ModuleAttribute_1= ruleModuleAttribute ) | ( ( (
    // 'encoding' ) )=>this_EncodingAttribute_2= ruleEncodingAttribute ) |
    // this_AbstractDefineAttribute_3= ruleAbstractDefineAttribute |
    // this_AbstractIncludeAttribute_4= ruleAbstractIncludeAttribute | ( ( (
    // 'file' ) )=>this_FileAttribute_5= ruleFileAttribute ) | ( ( ( 'record' )
    // )=>this_RecordAttribute_6= ruleRecordAttribute ) |
    // this_AbstractTypeAttribute_7= ruleAbstractTypeAttribute | ( ( ( 'export'
    // ) )=>this_ExportAttribute_8= ruleExportAttribute ) | ( ( ( 'import' )
    // )=>this_ImportAttribute_9= ruleImportAttribute ) | ( ( ( 'compile' )
    // )=>this_CompileAttribute_10= ruleCompileAttribute ) |
    // this_CustomAttribute_11= ruleCustomAttribute ) ) ;
    public final EObject ruleAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        EObject this_ModuleAttribute_1 = null;

        EObject this_EncodingAttribute_2 = null;

        EObject this_AbstractDefineAttribute_3 = null;

        EObject this_AbstractIncludeAttribute_4 = null;

        EObject this_FileAttribute_5 = null;

        EObject this_RecordAttribute_6 = null;

        EObject this_AbstractTypeAttribute_7 = null;

        EObject this_ExportAttribute_8 = null;

        EObject this_ImportAttribute_9 = null;

        EObject this_CompileAttribute_10 = null;

        EObject this_CustomAttribute_11 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:314:28:
            // ( (otherlv_0= '-' ( ( ( ( 'module' ) )=>this_ModuleAttribute_1=
            // ruleModuleAttribute ) | ( ( ( 'encoding' )
            // )=>this_EncodingAttribute_2= ruleEncodingAttribute ) |
            // this_AbstractDefineAttribute_3= ruleAbstractDefineAttribute |
            // this_AbstractIncludeAttribute_4= ruleAbstractIncludeAttribute | (
            // ( ( 'file' ) )=>this_FileAttribute_5= ruleFileAttribute ) | ( ( (
            // 'record' ) )=>this_RecordAttribute_6= ruleRecordAttribute ) |
            // this_AbstractTypeAttribute_7= ruleAbstractTypeAttribute | ( ( (
            // 'export' ) )=>this_ExportAttribute_8= ruleExportAttribute ) | ( (
            // ( 'import' ) )=>this_ImportAttribute_9= ruleImportAttribute ) | (
            // ( ( 'compile' ) )=>this_CompileAttribute_10= ruleCompileAttribute
            // ) | this_CustomAttribute_11= ruleCustomAttribute ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:315:1:
            // (otherlv_0= '-' ( ( ( ( 'module' ) )=>this_ModuleAttribute_1=
            // ruleModuleAttribute ) | ( ( ( 'encoding' )
            // )=>this_EncodingAttribute_2= ruleEncodingAttribute ) |
            // this_AbstractDefineAttribute_3= ruleAbstractDefineAttribute |
            // this_AbstractIncludeAttribute_4= ruleAbstractIncludeAttribute | (
            // ( ( 'file' ) )=>this_FileAttribute_5= ruleFileAttribute ) | ( ( (
            // 'record' ) )=>this_RecordAttribute_6= ruleRecordAttribute ) |
            // this_AbstractTypeAttribute_7= ruleAbstractTypeAttribute | ( ( (
            // 'export' ) )=>this_ExportAttribute_8= ruleExportAttribute ) | ( (
            // ( 'import' ) )=>this_ImportAttribute_9= ruleImportAttribute ) | (
            // ( ( 'compile' ) )=>this_CompileAttribute_10= ruleCompileAttribute
            // ) | this_CustomAttribute_11= ruleCustomAttribute ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:315:1:
                // (otherlv_0= '-' ( ( ( ( 'module' ) )=>this_ModuleAttribute_1=
                // ruleModuleAttribute ) | ( ( ( 'encoding' )
                // )=>this_EncodingAttribute_2= ruleEncodingAttribute ) |
                // this_AbstractDefineAttribute_3= ruleAbstractDefineAttribute |
                // this_AbstractIncludeAttribute_4= ruleAbstractIncludeAttribute
                // | ( ( ( 'file' ) )=>this_FileAttribute_5= ruleFileAttribute )
                // | ( ( ( 'record' ) )=>this_RecordAttribute_6=
                // ruleRecordAttribute ) | this_AbstractTypeAttribute_7=
                // ruleAbstractTypeAttribute | ( ( ( 'export' )
                // )=>this_ExportAttribute_8= ruleExportAttribute ) | ( ( (
                // 'import' ) )=>this_ImportAttribute_9= ruleImportAttribute ) |
                // ( ( ( 'compile' ) )=>this_CompileAttribute_10=
                // ruleCompileAttribute ) | this_CustomAttribute_11=
                // ruleCustomAttribute ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:315:3:
                // otherlv_0= '-' ( ( ( ( 'module' ) )=>this_ModuleAttribute_1=
                // ruleModuleAttribute ) | ( ( ( 'encoding' )
                // )=>this_EncodingAttribute_2= ruleEncodingAttribute ) |
                // this_AbstractDefineAttribute_3= ruleAbstractDefineAttribute |
                // this_AbstractIncludeAttribute_4= ruleAbstractIncludeAttribute
                // | ( ( ( 'file' ) )=>this_FileAttribute_5= ruleFileAttribute )
                // | ( ( ( 'record' ) )=>this_RecordAttribute_6=
                // ruleRecordAttribute ) | this_AbstractTypeAttribute_7=
                // ruleAbstractTypeAttribute | ( ( ( 'export' )
                // )=>this_ExportAttribute_8= ruleExportAttribute ) | ( ( (
                // 'import' ) )=>this_ImportAttribute_9= ruleImportAttribute ) |
                // ( ( ( 'compile' ) )=>this_CompileAttribute_10=
                // ruleCompileAttribute ) | this_CustomAttribute_11=
                // ruleCustomAttribute )
                {
                    otherlv_0 = (Token) match(input, 19,
                            FOLLOW_19_in_ruleAttribute602);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getAttributeAccess().getHyphenMinusKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:319:1:
                    // ( ( ( ( 'module' ) )=>this_ModuleAttribute_1=
                    // ruleModuleAttribute ) | ( ( ( 'encoding' )
                    // )=>this_EncodingAttribute_2= ruleEncodingAttribute ) |
                    // this_AbstractDefineAttribute_3=
                    // ruleAbstractDefineAttribute |
                    // this_AbstractIncludeAttribute_4=
                    // ruleAbstractIncludeAttribute | ( ( ( 'file' )
                    // )=>this_FileAttribute_5= ruleFileAttribute ) | ( ( (
                    // 'record' ) )=>this_RecordAttribute_6= ruleRecordAttribute
                    // ) | this_AbstractTypeAttribute_7=
                    // ruleAbstractTypeAttribute | ( ( ( 'export' )
                    // )=>this_ExportAttribute_8= ruleExportAttribute ) | ( ( (
                    // 'import' ) )=>this_ImportAttribute_9= ruleImportAttribute
                    // ) | ( ( ( 'compile' ) )=>this_CompileAttribute_10=
                    // ruleCompileAttribute ) | this_CustomAttribute_11=
                    // ruleCustomAttribute )
                    int alt6 = 11;
                    alt6 = dfa6.predict(input);
                    switch (alt6) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:319:2:
                    // ( ( ( 'module' ) )=>this_ModuleAttribute_1=
                    // ruleModuleAttribute )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:319:2:
                        // ( ( ( 'module' ) )=>this_ModuleAttribute_1=
                        // ruleModuleAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:319:3:
                        // ( ( 'module' ) )=>this_ModuleAttribute_1=
                        // ruleModuleAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getAttributeAccess()
                                        .getModuleAttributeParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleModuleAttribute_in_ruleAttribute641);
                            this_ModuleAttribute_1 = ruleModuleAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                current = this_ModuleAttribute_1;
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:335:6:
                    // ( ( ( 'encoding' ) )=>this_EncodingAttribute_2=
                    // ruleEncodingAttribute )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:335:6:
                        // ( ( ( 'encoding' ) )=>this_EncodingAttribute_2=
                        // ruleEncodingAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:335:7:
                        // ( ( 'encoding' ) )=>this_EncodingAttribute_2=
                        // ruleEncodingAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getAttributeAccess()
                                        .getEncodingAttributeParserRuleCall_1_1());

                            }
                            pushFollow(FOLLOW_ruleEncodingAttribute_in_ruleAttribute685);
                            this_EncodingAttribute_2 = ruleEncodingAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                current = this_EncodingAttribute_2;
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;
                    case 3:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:352:5:
                    // this_AbstractDefineAttribute_3=
                    // ruleAbstractDefineAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAttributeAccess()
                                    .getAbstractDefineAttributeParserRuleCall_1_2());

                        }
                        pushFollow(FOLLOW_ruleAbstractDefineAttribute_in_ruleAttribute713);
                        this_AbstractDefineAttribute_3 = ruleAbstractDefineAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_AbstractDefineAttribute_3;
                            afterParserOrEnumRuleCall();

                        }

                    }
                        break;
                    case 4:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:362:5:
                    // this_AbstractIncludeAttribute_4=
                    // ruleAbstractIncludeAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAttributeAccess()
                                    .getAbstractIncludeAttributeParserRuleCall_1_3());

                        }
                        pushFollow(FOLLOW_ruleAbstractIncludeAttribute_in_ruleAttribute740);
                        this_AbstractIncludeAttribute_4 = ruleAbstractIncludeAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_AbstractIncludeAttribute_4;
                            afterParserOrEnumRuleCall();

                        }

                    }
                        break;
                    case 5:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:371:6:
                    // ( ( ( 'file' ) )=>this_FileAttribute_5= ruleFileAttribute
                    // )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:371:6:
                        // ( ( ( 'file' ) )=>this_FileAttribute_5=
                        // ruleFileAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:371:7:
                        // ( ( 'file' ) )=>this_FileAttribute_5=
                        // ruleFileAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getAttributeAccess()
                                        .getFileAttributeParserRuleCall_1_4());

                            }
                            pushFollow(FOLLOW_ruleFileAttribute_in_ruleAttribute783);
                            this_FileAttribute_5 = ruleFileAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                current = this_FileAttribute_5;
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;
                    case 6:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:387:6:
                    // ( ( ( 'record' ) )=>this_RecordAttribute_6=
                    // ruleRecordAttribute )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:387:6:
                        // ( ( ( 'record' ) )=>this_RecordAttribute_6=
                        // ruleRecordAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:387:7:
                        // ( ( 'record' ) )=>this_RecordAttribute_6=
                        // ruleRecordAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getAttributeAccess()
                                        .getRecordAttributeParserRuleCall_1_5());

                            }
                            pushFollow(FOLLOW_ruleRecordAttribute_in_ruleAttribute827);
                            this_RecordAttribute_6 = ruleRecordAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                current = this_RecordAttribute_6;
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;
                    case 7:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:404:5:
                    // this_AbstractTypeAttribute_7= ruleAbstractTypeAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAttributeAccess()
                                    .getAbstractTypeAttributeParserRuleCall_1_6());

                        }
                        pushFollow(FOLLOW_ruleAbstractTypeAttribute_in_ruleAttribute855);
                        this_AbstractTypeAttribute_7 = ruleAbstractTypeAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_AbstractTypeAttribute_7;
                            afterParserOrEnumRuleCall();

                        }

                    }
                        break;
                    case 8:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:413:6:
                    // ( ( ( 'export' ) )=>this_ExportAttribute_8=
                    // ruleExportAttribute )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:413:6:
                        // ( ( ( 'export' ) )=>this_ExportAttribute_8=
                        // ruleExportAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:413:7:
                        // ( ( 'export' ) )=>this_ExportAttribute_8=
                        // ruleExportAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getAttributeAccess()
                                        .getExportAttributeParserRuleCall_1_7());

                            }
                            pushFollow(FOLLOW_ruleExportAttribute_in_ruleAttribute898);
                            this_ExportAttribute_8 = ruleExportAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                current = this_ExportAttribute_8;
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;
                    case 9:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:429:6:
                    // ( ( ( 'import' ) )=>this_ImportAttribute_9=
                    // ruleImportAttribute )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:429:6:
                        // ( ( ( 'import' ) )=>this_ImportAttribute_9=
                        // ruleImportAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:429:7:
                        // ( ( 'import' ) )=>this_ImportAttribute_9=
                        // ruleImportAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getAttributeAccess()
                                        .getImportAttributeParserRuleCall_1_8());

                            }
                            pushFollow(FOLLOW_ruleImportAttribute_in_ruleAttribute942);
                            this_ImportAttribute_9 = ruleImportAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                current = this_ImportAttribute_9;
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;
                    case 10:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:445:6:
                    // ( ( ( 'compile' ) )=>this_CompileAttribute_10=
                    // ruleCompileAttribute )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:445:6:
                        // ( ( ( 'compile' ) )=>this_CompileAttribute_10=
                        // ruleCompileAttribute )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:445:7:
                        // ( ( 'compile' ) )=>this_CompileAttribute_10=
                        // ruleCompileAttribute
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getAttributeAccess()
                                        .getCompileAttributeParserRuleCall_1_9());

                            }
                            pushFollow(FOLLOW_ruleCompileAttribute_in_ruleAttribute986);
                            this_CompileAttribute_10 = ruleCompileAttribute();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                current = this_CompileAttribute_10;
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;
                    case 11:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:462:5:
                    // this_CustomAttribute_11= ruleCustomAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess.getAttributeAccess()
                                    .getCustomAttributeParserRuleCall_1_10());

                        }
                        pushFollow(FOLLOW_ruleCustomAttribute_in_ruleAttribute1014);
                        this_CustomAttribute_11 = ruleCustomAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_CustomAttribute_11;
                            afterParserOrEnumRuleCall();

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleAttribute"

    // $ANTLR start "entryRuleAbstractDefineAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:480:1:
    // entryRuleAbstractDefineAttribute returns [EObject current=null] :
    // iv_ruleAbstractDefineAttribute= ruleAbstractDefineAttribute EOF ;
    public final EObject entryRuleAbstractDefineAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractDefineAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:481:2:
            // (iv_ruleAbstractDefineAttribute= ruleAbstractDefineAttribute EOF
            // )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:482:2:
            // iv_ruleAbstractDefineAttribute= ruleAbstractDefineAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess
                            .getAbstractDefineAttributeRule());
                }
                pushFollow(FOLLOW_ruleAbstractDefineAttribute_in_entryRuleAbstractDefineAttribute1052);
                iv_ruleAbstractDefineAttribute = ruleAbstractDefineAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleAbstractDefineAttribute;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleAbstractDefineAttribute1062);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleAbstractDefineAttribute"

    // $ANTLR start "ruleAbstractDefineAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:489:1:
    // ruleAbstractDefineAttribute returns [EObject current=null] : ( ( ( (
    // 'define' ) )=>this_DefineAttribute_0= ruleDefineAttribute ) | ( ( (
    // 'undef' ) )=>this_UndefAttribute_1= ruleUndefAttribute ) ) ;
    public final EObject ruleAbstractDefineAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject this_DefineAttribute_0 = null;

        EObject this_UndefAttribute_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:492:28:
            // ( ( ( ( ( 'define' ) )=>this_DefineAttribute_0=
            // ruleDefineAttribute ) | ( ( ( 'undef' ) )=>this_UndefAttribute_1=
            // ruleUndefAttribute ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:493:1:
            // ( ( ( ( 'define' ) )=>this_DefineAttribute_0= ruleDefineAttribute
            // ) | ( ( ( 'undef' ) )=>this_UndefAttribute_1= ruleUndefAttribute
            // ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:493:1:
                // ( ( ( ( 'define' ) )=>this_DefineAttribute_0=
                // ruleDefineAttribute ) | ( ( ( 'undef' )
                // )=>this_UndefAttribute_1= ruleUndefAttribute ) )
                int alt7 = 2;
                final int LA7_0 = input.LA(1);

                if (LA7_0 == 20 && synpred9_InternalErlang()) {
                    alt7 = 1;
                } else if (LA7_0 == 24 && synpred10_InternalErlang()) {
                    alt7 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 7, 0, input);

                    throw nvae;
                }
                switch (alt7) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:493:2:
                // ( ( ( 'define' ) )=>this_DefineAttribute_0=
                // ruleDefineAttribute )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:493:2:
                    // ( ( ( 'define' ) )=>this_DefineAttribute_0=
                    // ruleDefineAttribute )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:493:3:
                    // ( ( 'define' ) )=>this_DefineAttribute_0=
                    // ruleDefineAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAbstractDefineAttributeAccess()
                                    .getDefineAttributeParserRuleCall_0());

                        }
                        pushFollow(FOLLOW_ruleDefineAttribute_in_ruleAbstractDefineAttribute1125);
                        this_DefineAttribute_0 = ruleDefineAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_DefineAttribute_0;
                            afterParserOrEnumRuleCall();

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:509:6:
                // ( ( ( 'undef' ) )=>this_UndefAttribute_1= ruleUndefAttribute
                // )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:509:6:
                    // ( ( ( 'undef' ) )=>this_UndefAttribute_1=
                    // ruleUndefAttribute )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:509:7:
                    // ( ( 'undef' ) )=>this_UndefAttribute_1=
                    // ruleUndefAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAbstractDefineAttributeAccess()
                                    .getUndefAttributeParserRuleCall_1());

                        }
                        pushFollow(FOLLOW_ruleUndefAttribute_in_ruleAbstractDefineAttribute1169);
                        this_UndefAttribute_1 = ruleUndefAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_UndefAttribute_1;
                            afterParserOrEnumRuleCall();

                        }

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleAbstractDefineAttribute"

    // $ANTLR start "entryRuleDefineAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:532:1:
    // entryRuleDefineAttribute returns [EObject current=null] :
    // iv_ruleDefineAttribute= ruleDefineAttribute EOF ;
    public final EObject entryRuleDefineAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefineAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:533:2:
            // (iv_ruleDefineAttribute= ruleDefineAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:534:2:
            // iv_ruleDefineAttribute= ruleDefineAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getDefineAttributeRule());
                }
                pushFollow(FOLLOW_ruleDefineAttribute_in_entryRuleDefineAttribute1205);
                iv_ruleDefineAttribute = ruleDefineAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleDefineAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleDefineAttribute1215);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleDefineAttribute"

    // $ANTLR start "ruleDefineAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:541:1:
    // ruleDefineAttribute returns [EObject current=null] : ( ( ( ( 'define' )
    // )=> (lv_tag_0_0= 'define' ) ) otherlv_1= '(' ( (lv_macroName_2_0=
    // ruleNAMEVAR ) ) (otherlv_3= '(' ( ( (lv_args_4_0= rulePatternExpression )
    // ) (otherlv_5= ',' ( (lv_args_6_0= rulePatternExpression ) ) )* )?
    // otherlv_7= ')' )? (otherlv_8= ',' ( (lv_value_9_0= ruleGuard ) )? )?
    // otherlv_10= ')' otherlv_11= '.' ) ;
    public final EObject ruleDefineAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        Token otherlv_7 = null;
        Token otherlv_8 = null;
        Token otherlv_10 = null;
        Token otherlv_11 = null;
        AntlrDatatypeRuleToken lv_macroName_2_0 = null;

        EObject lv_args_4_0 = null;

        EObject lv_args_6_0 = null;

        EObject lv_value_9_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:544:28:
            // ( ( ( ( ( 'define' ) )=> (lv_tag_0_0= 'define' ) ) otherlv_1= '('
            // ( (lv_macroName_2_0= ruleNAMEVAR ) ) (otherlv_3= '(' ( (
            // (lv_args_4_0= rulePatternExpression ) ) (otherlv_5= ',' (
            // (lv_args_6_0= rulePatternExpression ) ) )* )? otherlv_7= ')' )?
            // (otherlv_8= ',' ( (lv_value_9_0= ruleGuard ) )? )? otherlv_10=
            // ')' otherlv_11= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:545:1:
            // ( ( ( ( 'define' ) )=> (lv_tag_0_0= 'define' ) ) otherlv_1= '(' (
            // (lv_macroName_2_0= ruleNAMEVAR ) ) (otherlv_3= '(' ( (
            // (lv_args_4_0= rulePatternExpression ) ) (otherlv_5= ',' (
            // (lv_args_6_0= rulePatternExpression ) ) )* )? otherlv_7= ')' )?
            // (otherlv_8= ',' ( (lv_value_9_0= ruleGuard ) )? )? otherlv_10=
            // ')' otherlv_11= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:545:1:
                // ( ( ( ( 'define' ) )=> (lv_tag_0_0= 'define' ) ) otherlv_1=
                // '(' ( (lv_macroName_2_0= ruleNAMEVAR ) ) (otherlv_3= '(' ( (
                // (lv_args_4_0= rulePatternExpression ) ) (otherlv_5= ',' (
                // (lv_args_6_0= rulePatternExpression ) ) )* )? otherlv_7= ')'
                // )? (otherlv_8= ',' ( (lv_value_9_0= ruleGuard ) )? )?
                // otherlv_10= ')' otherlv_11= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:545:2:
                // ( ( ( 'define' ) )=> (lv_tag_0_0= 'define' ) ) otherlv_1= '('
                // ( (lv_macroName_2_0= ruleNAMEVAR ) ) (otherlv_3= '(' ( (
                // (lv_args_4_0= rulePatternExpression ) ) (otherlv_5= ',' (
                // (lv_args_6_0= rulePatternExpression ) ) )* )? otherlv_7= ')'
                // )? (otherlv_8= ',' ( (lv_value_9_0= ruleGuard ) )? )?
                // otherlv_10= ')' otherlv_11= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:545:2:
                    // ( ( ( 'define' ) )=> (lv_tag_0_0= 'define' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:545:3:
                    // ( ( 'define' ) )=> (lv_tag_0_0= 'define' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:552:1:
                        // (lv_tag_0_0= 'define' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:553:3:
                        // lv_tag_0_0= 'define'
                        {
                            lv_tag_0_0 = (Token) match(input, 20,
                                    FOLLOW_20_in_ruleDefineAttribute1273);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getDefineAttributeAccess()
                                        .getTagDefineKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getDefineAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "define");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleDefineAttribute1298);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getDefineAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:570:1:
                    // ( (lv_macroName_2_0= ruleNAMEVAR ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:571:1:
                    // (lv_macroName_2_0= ruleNAMEVAR )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:571:1:
                        // (lv_macroName_2_0= ruleNAMEVAR )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:572:3:
                        // lv_macroName_2_0= ruleNAMEVAR
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getDefineAttributeAccess()
                                        .getMacroNameNAMEVARParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleNAMEVAR_in_ruleDefineAttribute1319);
                            lv_macroName_2_0 = ruleNAMEVAR();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getDefineAttributeRule());
                                }
                                set(current, "macroName", lv_macroName_2_0,
                                        "NAMEVAR");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:588:2:
                    // (otherlv_3= '(' ( ( (lv_args_4_0= rulePatternExpression )
                    // ) (otherlv_5= ',' ( (lv_args_6_0= rulePatternExpression )
                    // ) )* )? otherlv_7= ')' )?
                    int alt10 = 2;
                    final int LA10_0 = input.LA(1);

                    if (LA10_0 == 21) {
                        alt10 = 1;
                    }
                    switch (alt10) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:588:4:
                    // otherlv_3= '(' ( ( (lv_args_4_0= rulePatternExpression )
                    // ) (otherlv_5= ',' ( (lv_args_6_0= rulePatternExpression )
                    // ) )* )? otherlv_7= ')'
                    {
                        otherlv_3 = (Token) match(input, 21,
                                FOLLOW_21_in_ruleDefineAttribute1332);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_3, grammarAccess
                                    .getDefineAttributeAccess()
                                    .getLeftParenthesisKeyword_3_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:592:1:
                        // ( ( (lv_args_4_0= rulePatternExpression ) )
                        // (otherlv_5= ',' ( (lv_args_6_0= rulePatternExpression
                        // ) ) )* )?
                        int alt9 = 2;
                        final int LA9_0 = input.LA(1);

                        if (LA9_0 >= RULE_STRING && LA9_0 <= RULE_BASED_INT
                                || LA9_0 == 20 || LA9_0 >= 24 && LA9_0 <= 35
                                || LA9_0 >= 39 && LA9_0 <= 40 || LA9_0 >= 42
                                && LA9_0 <= 45 || LA9_0 >= 47 && LA9_0 <= 48
                                || LA9_0 >= 51 && LA9_0 <= 52 || LA9_0 == 56
                                || LA9_0 == 73 || LA9_0 == 102) {
                            alt9 = 1;
                        }
                        switch (alt9) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:592:2:
                        // ( (lv_args_4_0= rulePatternExpression ) ) (otherlv_5=
                        // ',' ( (lv_args_6_0= rulePatternExpression ) ) )*
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:592:2:
                            // ( (lv_args_4_0= rulePatternExpression ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:593:1:
                            // (lv_args_4_0= rulePatternExpression )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:593:1:
                                // (lv_args_4_0= rulePatternExpression )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:594:3:
                                // lv_args_4_0= rulePatternExpression
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getDefineAttributeAccess()
                                                .getArgsPatternExpressionParserRuleCall_3_1_0_0());

                                    }
                                    pushFollow(FOLLOW_rulePatternExpression_in_ruleDefineAttribute1354);
                                    lv_args_4_0 = rulePatternExpression();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getDefineAttributeRule());
                                        }
                                        add(current, "args", lv_args_4_0,
                                                "PatternExpression");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:610:2:
                            // (otherlv_5= ',' ( (lv_args_6_0=
                            // rulePatternExpression ) ) )*
                            loop8:
                                do {
                                    int alt8 = 2;
                                    final int LA8_0 = input.LA(1);

                                    if (LA8_0 == 22) {
                                        alt8 = 1;
                                    }

                                switch (alt8) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:610:4:
                                // otherlv_5= ',' ( (lv_args_6_0=
                                // rulePatternExpression ) )
                                {
                                    otherlv_5 = (Token) match(input, 22,
                                            FOLLOW_22_in_ruleDefineAttribute1367);
                                    if (state.failed) {
                                            return current;
                                        }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_5, grammarAccess
                                                .getDefineAttributeAccess()
                                                .getCommaKeyword_3_1_1_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:614:1:
                                    // ( (lv_args_6_0= rulePatternExpression ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:615:1:
                                    // (lv_args_6_0= rulePatternExpression )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:615:1:
                                        // (lv_args_6_0= rulePatternExpression )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:616:3:
                                        // lv_args_6_0= rulePatternExpression
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getDefineAttributeAccess()
                                                        .getArgsPatternExpressionParserRuleCall_3_1_1_1_0());

                                            }
                                            pushFollow(FOLLOW_rulePatternExpression_in_ruleDefineAttribute1388);
                                            lv_args_6_0 = rulePatternExpression();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getDefineAttributeRule());
                                                }
                                                add(current, "args",
                                                        lv_args_6_0,
                                                        "PatternExpression");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop8;
                                    }
                                } while (true);

                        }
                        break;

                        }

                        otherlv_7 = (Token) match(input, 23,
                                FOLLOW_23_in_ruleDefineAttribute1404);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_7, grammarAccess
                                    .getDefineAttributeAccess()
                                    .getRightParenthesisKeyword_3_2());

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:636:3:
                    // (otherlv_8= ',' ( (lv_value_9_0= ruleGuard ) )? )?
                    int alt12 = 2;
                    final int LA12_0 = input.LA(1);

                    if (LA12_0 == 22) {
                        alt12 = 1;
                    }
                    switch (alt12) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:636:5:
                    // otherlv_8= ',' ( (lv_value_9_0= ruleGuard ) )?
                    {
                        otherlv_8 = (Token) match(input, 22,
                                FOLLOW_22_in_ruleDefineAttribute1419);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_8, grammarAccess
                                    .getDefineAttributeAccess()
                                    .getCommaKeyword_4_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:640:1:
                        // ( (lv_value_9_0= ruleGuard ) )?
                        int alt11 = 2;
                        final int LA11_0 = input.LA(1);

                        if (LA11_0 >= RULE_STRING && LA11_0 <= RULE_BASED_INT
                                || LA11_0 >= 19 && LA11_0 <= 21 || LA11_0 >= 24
                                && LA11_0 <= 35 || LA11_0 >= 39 && LA11_0 <= 40
                                || LA11_0 >= 42 && LA11_0 <= 45 || LA11_0 >= 47
                                && LA11_0 <= 48 || LA11_0 >= 51 && LA11_0 <= 53
                                || LA11_0 == 56 || LA11_0 == 58 || LA11_0 >= 60
                                && LA11_0 <= 64 || LA11_0 == 66 || LA11_0 == 68
                                || LA11_0 == 70 || LA11_0 == 73 || LA11_0 == 77
                                || LA11_0 >= 89 && LA11_0 <= 90
                                || LA11_0 == 102) {
                            alt11 = 1;
                        }
                        switch (alt11) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:641:1:
                        // (lv_value_9_0= ruleGuard )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:641:1:
                            // (lv_value_9_0= ruleGuard )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:642:3:
                            // lv_value_9_0= ruleGuard
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getDefineAttributeAccess()
                                            .getValueGuardParserRuleCall_4_1_0());

                                }
                                pushFollow(FOLLOW_ruleGuard_in_ruleDefineAttribute1440);
                                lv_value_9_0 = ruleGuard();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getDefineAttributeRule());
                                    }
                                    set(current, "value", lv_value_9_0, "Guard");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }
                        break;

                        }

                    }
                        break;

                    }

                    otherlv_10 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleDefineAttribute1455);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_10, grammarAccess
                                .getDefineAttributeAccess()
                                .getRightParenthesisKeyword_5());

                    }
                    otherlv_11 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleDefineAttribute1467);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_11, grammarAccess
                                .getDefineAttributeAccess()
                                .getFullStopKeyword_6());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleDefineAttribute"

    // $ANTLR start "entryRuleUndefAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:674:1:
    // entryRuleUndefAttribute returns [EObject current=null] :
    // iv_ruleUndefAttribute= ruleUndefAttribute EOF ;
    public final EObject entryRuleUndefAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUndefAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:675:2:
            // (iv_ruleUndefAttribute= ruleUndefAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:676:2:
            // iv_ruleUndefAttribute= ruleUndefAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getUndefAttributeRule());
                }
                pushFollow(FOLLOW_ruleUndefAttribute_in_entryRuleUndefAttribute1503);
                iv_ruleUndefAttribute = ruleUndefAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleUndefAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleUndefAttribute1513);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleUndefAttribute"

    // $ANTLR start "ruleUndefAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:683:1:
    // ruleUndefAttribute returns [EObject current=null] : ( ( ( ( 'undef' ) )=>
    // (lv_tag_0_0= 'undef' ) ) otherlv_1= '(' ( (lv_ref_2_0= ruleMacroRef ) )
    // otherlv_3= ')' otherlv_4= '.' ) ;
    public final EObject ruleUndefAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_4 = null;
        EObject lv_ref_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:686:28:
            // ( ( ( ( ( 'undef' ) )=> (lv_tag_0_0= 'undef' ) ) otherlv_1= '(' (
            // (lv_ref_2_0= ruleMacroRef ) ) otherlv_3= ')' otherlv_4= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:687:1:
            // ( ( ( ( 'undef' ) )=> (lv_tag_0_0= 'undef' ) ) otherlv_1= '(' (
            // (lv_ref_2_0= ruleMacroRef ) ) otherlv_3= ')' otherlv_4= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:687:1:
                // ( ( ( ( 'undef' ) )=> (lv_tag_0_0= 'undef' ) ) otherlv_1= '('
                // ( (lv_ref_2_0= ruleMacroRef ) ) otherlv_3= ')' otherlv_4= '.'
                // )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:687:2:
                // ( ( ( 'undef' ) )=> (lv_tag_0_0= 'undef' ) ) otherlv_1= '(' (
                // (lv_ref_2_0= ruleMacroRef ) ) otherlv_3= ')' otherlv_4= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:687:2:
                    // ( ( ( 'undef' ) )=> (lv_tag_0_0= 'undef' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:687:3:
                    // ( ( 'undef' ) )=> (lv_tag_0_0= 'undef' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:694:1:
                        // (lv_tag_0_0= 'undef' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:695:3:
                        // lv_tag_0_0= 'undef'
                        {
                            lv_tag_0_0 = (Token) match(input, 24,
                                    FOLLOW_24_in_ruleUndefAttribute1571);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getUndefAttributeAccess()
                                        .getTagUndefKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getUndefAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "undef");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleUndefAttribute1596);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getUndefAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:712:1:
                    // ( (lv_ref_2_0= ruleMacroRef ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:713:1:
                    // (lv_ref_2_0= ruleMacroRef )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:713:1:
                        // (lv_ref_2_0= ruleMacroRef )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:714:3:
                        // lv_ref_2_0= ruleMacroRef
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getUndefAttributeAccess()
                                        .getRefMacroRefParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleMacroRef_in_ruleUndefAttribute1617);
                            lv_ref_2_0 = ruleMacroRef();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getUndefAttributeRule());
                                }
                                set(current, "ref", lv_ref_2_0, "MacroRef");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleUndefAttribute1629);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getUndefAttributeAccess()
                                .getRightParenthesisKeyword_3());

                    }
                    otherlv_4 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleUndefAttribute1641);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess
                                .getUndefAttributeAccess()
                                .getFullStopKeyword_4());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleUndefAttribute"

    // $ANTLR start "entryRuleIfdefAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:746:1:
    // entryRuleIfdefAttribute returns [EObject current=null] :
    // iv_ruleIfdefAttribute= ruleIfdefAttribute EOF ;
    public final EObject entryRuleIfdefAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfdefAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:747:2:
            // (iv_ruleIfdefAttribute= ruleIfdefAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:748:2:
            // iv_ruleIfdefAttribute= ruleIfdefAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getIfdefAttributeRule());
                }
                pushFollow(FOLLOW_ruleIfdefAttribute_in_entryRuleIfdefAttribute1677);
                iv_ruleIfdefAttribute = ruleIfdefAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleIfdefAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleIfdefAttribute1687);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleIfdefAttribute"

    // $ANTLR start "ruleIfdefAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:755:1:
    // ruleIfdefAttribute returns [EObject current=null] : (otherlv_0= '-' ( ( (
    // ( 'ifdef' | 'ifndef' ) ) )=> ( (lv_tag_1_1= 'ifdef' | lv_tag_1_2=
    // 'ifndef' ) ) ) otherlv_2= '(' ( (lv_ref_3_0= ruleMacroRef ) ) otherlv_4=
    // ')' otherlv_5= '.' ) ;
    public final EObject ruleIfdefAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token lv_tag_1_1 = null;
        Token lv_tag_1_2 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        Token otherlv_5 = null;
        EObject lv_ref_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:758:28:
            // ( (otherlv_0= '-' ( ( ( ( 'ifdef' | 'ifndef' ) ) )=> (
            // (lv_tag_1_1= 'ifdef' | lv_tag_1_2= 'ifndef' ) ) ) otherlv_2= '('
            // ( (lv_ref_3_0= ruleMacroRef ) ) otherlv_4= ')' otherlv_5= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:759:1:
            // (otherlv_0= '-' ( ( ( ( 'ifdef' | 'ifndef' ) ) )=> ( (lv_tag_1_1=
            // 'ifdef' | lv_tag_1_2= 'ifndef' ) ) ) otherlv_2= '(' (
            // (lv_ref_3_0= ruleMacroRef ) ) otherlv_4= ')' otherlv_5= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:759:1:
                // (otherlv_0= '-' ( ( ( ( 'ifdef' | 'ifndef' ) ) )=> (
                // (lv_tag_1_1= 'ifdef' | lv_tag_1_2= 'ifndef' ) ) ) otherlv_2=
                // '(' ( (lv_ref_3_0= ruleMacroRef ) ) otherlv_4= ')' otherlv_5=
                // '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:759:3:
                // otherlv_0= '-' ( ( ( ( 'ifdef' | 'ifndef' ) ) )=> (
                // (lv_tag_1_1= 'ifdef' | lv_tag_1_2= 'ifndef' ) ) ) otherlv_2=
                // '(' ( (lv_ref_3_0= ruleMacroRef ) ) otherlv_4= ')' otherlv_5=
                // '.'
                {
                    otherlv_0 = (Token) match(input, 19,
                            FOLLOW_19_in_ruleIfdefAttribute1724);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getIfdefAttributeAccess()
                                .getHyphenMinusKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:763:1:
                    // ( ( ( ( 'ifdef' | 'ifndef' ) ) )=> ( (lv_tag_1_1= 'ifdef'
                    // | lv_tag_1_2= 'ifndef' ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:763:2:
                    // ( ( ( 'ifdef' | 'ifndef' ) ) )=> ( (lv_tag_1_1= 'ifdef' |
                    // lv_tag_1_2= 'ifndef' ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:776:1:
                        // ( (lv_tag_1_1= 'ifdef' | lv_tag_1_2= 'ifndef' ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:777:1:
                        // (lv_tag_1_1= 'ifdef' | lv_tag_1_2= 'ifndef' )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:777:1:
                            // (lv_tag_1_1= 'ifdef' | lv_tag_1_2= 'ifndef' )
                            int alt13 = 2;
                            final int LA13_0 = input.LA(1);

                            if (LA13_0 == 25) {
                                alt13 = 1;
                            } else if (LA13_0 == 26) {
                                alt13 = 2;
                            } else {
                                if (state.backtracking > 0) {
                                    state.failed = true;
                                    return current;
                                }
                                final NoViableAltException nvae = new NoViableAltException(
                                        "", 13, 0, input);

                                throw nvae;
                            }
                            switch (alt13) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:778:3:
                            // lv_tag_1_1= 'ifdef'
                            {
                                lv_tag_1_1 = (Token) match(input, 25,
                                        FOLLOW_25_in_ruleIfdefAttribute1778);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(lv_tag_1_1, grammarAccess
                                            .getIfdefAttributeAccess()
                                            .getTagIfdefKeyword_1_0_0());

                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElement(grammarAccess
                                                .getIfdefAttributeRule());
                                    }
                                    setWithLastConsumed(current, "tag",
                                            lv_tag_1_1, null);

                                }

                            }
                                break;
                            case 2:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:790:8:
                            // lv_tag_1_2= 'ifndef'
                            {
                                lv_tag_1_2 = (Token) match(input, 26,
                                        FOLLOW_26_in_ruleIfdefAttribute1807);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(lv_tag_1_2, grammarAccess
                                            .getIfdefAttributeAccess()
                                            .getTagIfndefKeyword_1_0_1());

                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElement(grammarAccess
                                                .getIfdefAttributeRule());
                                    }
                                    setWithLastConsumed(current, "tag",
                                            lv_tag_1_2, null);

                                }

                            }
                                break;

                            }

                        }

                    }

                    otherlv_2 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleIfdefAttribute1835);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_2, grammarAccess
                                .getIfdefAttributeAccess()
                                .getLeftParenthesisKeyword_2());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:809:1:
                    // ( (lv_ref_3_0= ruleMacroRef ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:810:1:
                    // (lv_ref_3_0= ruleMacroRef )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:810:1:
                        // (lv_ref_3_0= ruleMacroRef )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:811:3:
                        // lv_ref_3_0= ruleMacroRef
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getIfdefAttributeAccess()
                                        .getRefMacroRefParserRuleCall_3_0());

                            }
                            pushFollow(FOLLOW_ruleMacroRef_in_ruleIfdefAttribute1856);
                            lv_ref_3_0 = ruleMacroRef();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getIfdefAttributeRule());
                                }
                                set(current, "ref", lv_ref_3_0, "MacroRef");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_4 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleIfdefAttribute1868);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess
                                .getIfdefAttributeAccess()
                                .getRightParenthesisKeyword_4());

                    }
                    otherlv_5 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleIfdefAttribute1880);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_5, grammarAccess
                                .getIfdefAttributeAccess()
                                .getFullStopKeyword_5());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleIfdefAttribute"

    // $ANTLR start "entryRuleElseAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:843:1:
    // entryRuleElseAttribute returns [EObject current=null] :
    // iv_ruleElseAttribute= ruleElseAttribute EOF ;
    public final EObject entryRuleElseAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:844:2:
            // (iv_ruleElseAttribute= ruleElseAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:845:2:
            // iv_ruleElseAttribute= ruleElseAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getElseAttributeRule());
                }
                pushFollow(FOLLOW_ruleElseAttribute_in_entryRuleElseAttribute1916);
                iv_ruleElseAttribute = ruleElseAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleElseAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleElseAttribute1926);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleElseAttribute"

    // $ANTLR start "ruleElseAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:852:1:
    // ruleElseAttribute returns [EObject current=null] : (otherlv_0= '-' ( ( (
    // 'else' ) )=> (lv_tag_1_0= 'else' ) ) otherlv_2= '.' ) ;
    public final EObject ruleElseAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token lv_tag_1_0 = null;
        Token otherlv_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:855:28:
            // ( (otherlv_0= '-' ( ( ( 'else' ) )=> (lv_tag_1_0= 'else' ) )
            // otherlv_2= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:856:1:
            // (otherlv_0= '-' ( ( ( 'else' ) )=> (lv_tag_1_0= 'else' ) )
            // otherlv_2= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:856:1:
                // (otherlv_0= '-' ( ( ( 'else' ) )=> (lv_tag_1_0= 'else' ) )
                // otherlv_2= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:856:3:
                // otherlv_0= '-' ( ( ( 'else' ) )=> (lv_tag_1_0= 'else' ) )
                // otherlv_2= '.'
                {
                    otherlv_0 = (Token) match(input, 19,
                            FOLLOW_19_in_ruleElseAttribute1963);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getElseAttributeAccess()
                                .getHyphenMinusKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:860:1:
                    // ( ( ( 'else' ) )=> (lv_tag_1_0= 'else' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:860:2:
                    // ( ( 'else' ) )=> (lv_tag_1_0= 'else' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:867:1:
                        // (lv_tag_1_0= 'else' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:868:3:
                        // lv_tag_1_0= 'else'
                        {
                            lv_tag_1_0 = (Token) match(input, 27,
                                    FOLLOW_27_in_ruleElseAttribute1996);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_1_0, grammarAccess
                                        .getElseAttributeAccess()
                                        .getTagElseKeyword_1_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getElseAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_1_0,
                                        "else");

                            }

                        }

                    }

                    otherlv_2 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleElseAttribute2021);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_2, grammarAccess
                                .getElseAttributeAccess()
                                .getFullStopKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleElseAttribute"

    // $ANTLR start "entryRuleEndifAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:893:1:
    // entryRuleEndifAttribute returns [EObject current=null] :
    // iv_ruleEndifAttribute= ruleEndifAttribute EOF ;
    public final EObject entryRuleEndifAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEndifAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:894:2:
            // (iv_ruleEndifAttribute= ruleEndifAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:895:2:
            // iv_ruleEndifAttribute= ruleEndifAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getEndifAttributeRule());
                }
                pushFollow(FOLLOW_ruleEndifAttribute_in_entryRuleEndifAttribute2057);
                iv_ruleEndifAttribute = ruleEndifAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleEndifAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleEndifAttribute2067);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleEndifAttribute"

    // $ANTLR start "ruleEndifAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:902:1:
    // ruleEndifAttribute returns [EObject current=null] : (otherlv_0= '-' ( ( (
    // 'endif' ) )=> (lv_tag_1_0= 'endif' ) ) otherlv_2= '.' ) ;
    public final EObject ruleEndifAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token lv_tag_1_0 = null;
        Token otherlv_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:905:28:
            // ( (otherlv_0= '-' ( ( ( 'endif' ) )=> (lv_tag_1_0= 'endif' ) )
            // otherlv_2= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:906:1:
            // (otherlv_0= '-' ( ( ( 'endif' ) )=> (lv_tag_1_0= 'endif' ) )
            // otherlv_2= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:906:1:
                // (otherlv_0= '-' ( ( ( 'endif' ) )=> (lv_tag_1_0= 'endif' ) )
                // otherlv_2= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:906:3:
                // otherlv_0= '-' ( ( ( 'endif' ) )=> (lv_tag_1_0= 'endif' ) )
                // otherlv_2= '.'
                {
                    otherlv_0 = (Token) match(input, 19,
                            FOLLOW_19_in_ruleEndifAttribute2104);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getEndifAttributeAccess()
                                .getHyphenMinusKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:910:1:
                    // ( ( ( 'endif' ) )=> (lv_tag_1_0= 'endif' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:910:2:
                    // ( ( 'endif' ) )=> (lv_tag_1_0= 'endif' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:917:1:
                        // (lv_tag_1_0= 'endif' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:918:3:
                        // lv_tag_1_0= 'endif'
                        {
                            lv_tag_1_0 = (Token) match(input, 28,
                                    FOLLOW_28_in_ruleEndifAttribute2137);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_1_0, grammarAccess
                                        .getEndifAttributeAccess()
                                        .getTagEndifKeyword_1_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getEndifAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_1_0,
                                        "endif");

                            }

                        }

                    }

                    otherlv_2 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleEndifAttribute2162);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_2, grammarAccess
                                .getEndifAttributeAccess()
                                .getFullStopKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleEndifAttribute"

    // $ANTLR start "entryRuleAbstractIncludeAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:943:1:
    // entryRuleAbstractIncludeAttribute returns [EObject current=null] :
    // iv_ruleAbstractIncludeAttribute= ruleAbstractIncludeAttribute EOF ;
    public final EObject entryRuleAbstractIncludeAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractIncludeAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:944:2:
            // (iv_ruleAbstractIncludeAttribute= ruleAbstractIncludeAttribute
            // EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:945:2:
            // iv_ruleAbstractIncludeAttribute= ruleAbstractIncludeAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess
                            .getAbstractIncludeAttributeRule());
                }
                pushFollow(FOLLOW_ruleAbstractIncludeAttribute_in_entryRuleAbstractIncludeAttribute2198);
                iv_ruleAbstractIncludeAttribute = ruleAbstractIncludeAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleAbstractIncludeAttribute;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleAbstractIncludeAttribute2208);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleAbstractIncludeAttribute"

    // $ANTLR start "ruleAbstractIncludeAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:952:1:
    // ruleAbstractIncludeAttribute returns [EObject current=null] : ( ( ( (
    // 'include' ) )=>this_IncludeAttribute_0= ruleIncludeAttribute ) | ( ( (
    // 'include_lib' ) )=>this_IncludeLibAttribute_1= ruleIncludeLibAttribute )
    // ) ;
    public final EObject ruleAbstractIncludeAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject this_IncludeAttribute_0 = null;

        EObject this_IncludeLibAttribute_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:955:28:
            // ( ( ( ( ( 'include' ) )=>this_IncludeAttribute_0=
            // ruleIncludeAttribute ) | ( ( ( 'include_lib' )
            // )=>this_IncludeLibAttribute_1= ruleIncludeLibAttribute ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:956:1:
            // ( ( ( ( 'include' ) )=>this_IncludeAttribute_0=
            // ruleIncludeAttribute ) | ( ( ( 'include_lib' )
            // )=>this_IncludeLibAttribute_1= ruleIncludeLibAttribute ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:956:1:
                // ( ( ( ( 'include' ) )=>this_IncludeAttribute_0=
                // ruleIncludeAttribute ) | ( ( ( 'include_lib' )
                // )=>this_IncludeLibAttribute_1= ruleIncludeLibAttribute ) )
                int alt14 = 2;
                final int LA14_0 = input.LA(1);

                if (LA14_0 == 29 && synpred16_InternalErlang()) {
                    alt14 = 1;
                } else if (LA14_0 == 30 && synpred17_InternalErlang()) {
                    alt14 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 14, 0, input);

                    throw nvae;
                }
                switch (alt14) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:956:2:
                // ( ( ( 'include' ) )=>this_IncludeAttribute_0=
                // ruleIncludeAttribute )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:956:2:
                    // ( ( ( 'include' ) )=>this_IncludeAttribute_0=
                    // ruleIncludeAttribute )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:956:3:
                    // ( ( 'include' ) )=>this_IncludeAttribute_0=
                    // ruleIncludeAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAbstractIncludeAttributeAccess()
                                    .getIncludeAttributeParserRuleCall_0());

                        }
                        pushFollow(FOLLOW_ruleIncludeAttribute_in_ruleAbstractIncludeAttribute2271);
                        this_IncludeAttribute_0 = ruleIncludeAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_IncludeAttribute_0;
                            afterParserOrEnumRuleCall();

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:972:6:
                // ( ( ( 'include_lib' ) )=>this_IncludeLibAttribute_1=
                // ruleIncludeLibAttribute )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:972:6:
                    // ( ( ( 'include_lib' ) )=>this_IncludeLibAttribute_1=
                    // ruleIncludeLibAttribute )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:972:7:
                    // ( ( 'include_lib' ) )=>this_IncludeLibAttribute_1=
                    // ruleIncludeLibAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAbstractIncludeAttributeAccess()
                                    .getIncludeLibAttributeParserRuleCall_1());

                        }
                        pushFollow(FOLLOW_ruleIncludeLibAttribute_in_ruleAbstractIncludeAttribute2315);
                        this_IncludeLibAttribute_1 = ruleIncludeLibAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_IncludeLibAttribute_1;
                            afterParserOrEnumRuleCall();

                        }

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleAbstractIncludeAttribute"

    // $ANTLR start "entryRuleIncludeAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:995:1:
    // entryRuleIncludeAttribute returns [EObject current=null] :
    // iv_ruleIncludeAttribute= ruleIncludeAttribute EOF ;
    public final EObject entryRuleIncludeAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncludeAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:996:2:
            // (iv_ruleIncludeAttribute= ruleIncludeAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:997:2:
            // iv_ruleIncludeAttribute= ruleIncludeAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getIncludeAttributeRule());
                }
                pushFollow(FOLLOW_ruleIncludeAttribute_in_entryRuleIncludeAttribute2351);
                iv_ruleIncludeAttribute = ruleIncludeAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleIncludeAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleIncludeAttribute2361);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleIncludeAttribute"

    // $ANTLR start "ruleIncludeAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1004:1:
    // ruleIncludeAttribute returns [EObject current=null] : ( ( ( ( 'include' )
    // )=> (lv_tag_0_0= 'include' ) ) otherlv_1= '(' ( (lv_importURI_2_0=
    // RULE_STRING ) ) otherlv_3= ')' otherlv_4= '.' ) ;
    public final EObject ruleIncludeAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token lv_importURI_2_0 = null;
        Token otherlv_3 = null;
        Token otherlv_4 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1007:28:
            // ( ( ( ( ( 'include' ) )=> (lv_tag_0_0= 'include' ) ) otherlv_1=
            // '(' ( (lv_importURI_2_0= RULE_STRING ) ) otherlv_3= ')'
            // otherlv_4= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1008:1:
            // ( ( ( ( 'include' ) )=> (lv_tag_0_0= 'include' ) ) otherlv_1= '('
            // ( (lv_importURI_2_0= RULE_STRING ) ) otherlv_3= ')' otherlv_4=
            // '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1008:1:
                // ( ( ( ( 'include' ) )=> (lv_tag_0_0= 'include' ) ) otherlv_1=
                // '(' ( (lv_importURI_2_0= RULE_STRING ) ) otherlv_3= ')'
                // otherlv_4= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1008:2:
                // ( ( ( 'include' ) )=> (lv_tag_0_0= 'include' ) ) otherlv_1=
                // '(' ( (lv_importURI_2_0= RULE_STRING ) ) otherlv_3= ')'
                // otherlv_4= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1008:2:
                    // ( ( ( 'include' ) )=> (lv_tag_0_0= 'include' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1008:3:
                    // ( ( 'include' ) )=> (lv_tag_0_0= 'include' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1015:1:
                        // (lv_tag_0_0= 'include' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1016:3:
                        // lv_tag_0_0= 'include'
                        {
                            lv_tag_0_0 = (Token) match(input, 29,
                                    FOLLOW_29_in_ruleIncludeAttribute2419);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getIncludeAttributeAccess()
                                        .getTagIncludeKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getIncludeAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "include");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleIncludeAttribute2444);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getIncludeAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1033:1:
                    // ( (lv_importURI_2_0= RULE_STRING ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1034:1:
                    // (lv_importURI_2_0= RULE_STRING )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1034:1:
                        // (lv_importURI_2_0= RULE_STRING )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1035:3:
                        // lv_importURI_2_0= RULE_STRING
                        {
                            lv_importURI_2_0 = (Token) match(input,
                                    RULE_STRING,
                                    FOLLOW_RULE_STRING_in_ruleIncludeAttribute2461);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(
                                        lv_importURI_2_0,
                                        grammarAccess
                                                .getIncludeAttributeAccess()
                                                .getImportURISTRINGTerminalRuleCall_2_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getIncludeAttributeRule());
                                }
                                setWithLastConsumed(current, "importURI",
                                        lv_importURI_2_0, "STRING");

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleIncludeAttribute2478);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getIncludeAttributeAccess()
                                .getRightParenthesisKeyword_3());

                    }
                    otherlv_4 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleIncludeAttribute2490);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess
                                .getIncludeAttributeAccess()
                                .getFullStopKeyword_4());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleIncludeAttribute"

    // $ANTLR start "entryRuleIncludeLibAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1067:1:
    // entryRuleIncludeLibAttribute returns [EObject current=null] :
    // iv_ruleIncludeLibAttribute= ruleIncludeLibAttribute EOF ;
    public final EObject entryRuleIncludeLibAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncludeLibAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1068:2:
            // (iv_ruleIncludeLibAttribute= ruleIncludeLibAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1069:2:
            // iv_ruleIncludeLibAttribute= ruleIncludeLibAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getIncludeLibAttributeRule());
                }
                pushFollow(FOLLOW_ruleIncludeLibAttribute_in_entryRuleIncludeLibAttribute2526);
                iv_ruleIncludeLibAttribute = ruleIncludeLibAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleIncludeLibAttribute;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleIncludeLibAttribute2536);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleIncludeLibAttribute"

    // $ANTLR start "ruleIncludeLibAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1076:1:
    // ruleIncludeLibAttribute returns [EObject current=null] : ( ( ( (
    // 'include_lib' ) )=> (lv_tag_0_0= 'include_lib' ) ) otherlv_1= '(' (
    // (lv_importURI_2_0= RULE_STRING ) ) otherlv_3= ')' otherlv_4= '.' ) ;
    public final EObject ruleIncludeLibAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token lv_importURI_2_0 = null;
        Token otherlv_3 = null;
        Token otherlv_4 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1079:28:
            // ( ( ( ( ( 'include_lib' ) )=> (lv_tag_0_0= 'include_lib' ) )
            // otherlv_1= '(' ( (lv_importURI_2_0= RULE_STRING ) ) otherlv_3=
            // ')' otherlv_4= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1080:1:
            // ( ( ( ( 'include_lib' ) )=> (lv_tag_0_0= 'include_lib' ) )
            // otherlv_1= '(' ( (lv_importURI_2_0= RULE_STRING ) ) otherlv_3=
            // ')' otherlv_4= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1080:1:
                // ( ( ( ( 'include_lib' ) )=> (lv_tag_0_0= 'include_lib' ) )
                // otherlv_1= '(' ( (lv_importURI_2_0= RULE_STRING ) )
                // otherlv_3= ')' otherlv_4= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1080:2:
                // ( ( ( 'include_lib' ) )=> (lv_tag_0_0= 'include_lib' ) )
                // otherlv_1= '(' ( (lv_importURI_2_0= RULE_STRING ) )
                // otherlv_3= ')' otherlv_4= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1080:2:
                    // ( ( ( 'include_lib' ) )=> (lv_tag_0_0= 'include_lib' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1080:3:
                    // ( ( 'include_lib' ) )=> (lv_tag_0_0= 'include_lib' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1087:1:
                        // (lv_tag_0_0= 'include_lib' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1088:3:
                        // lv_tag_0_0= 'include_lib'
                        {
                            lv_tag_0_0 = (Token) match(input, 30,
                                    FOLLOW_30_in_ruleIncludeLibAttribute2594);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getIncludeLibAttributeAccess()
                                        .getTagInclude_libKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getIncludeLibAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "include_lib");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleIncludeLibAttribute2619);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getIncludeLibAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1105:1:
                    // ( (lv_importURI_2_0= RULE_STRING ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1106:1:
                    // (lv_importURI_2_0= RULE_STRING )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1106:1:
                        // (lv_importURI_2_0= RULE_STRING )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1107:3:
                        // lv_importURI_2_0= RULE_STRING
                        {
                            lv_importURI_2_0 = (Token) match(input,
                                    RULE_STRING,
                                    FOLLOW_RULE_STRING_in_ruleIncludeLibAttribute2636);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(
                                        lv_importURI_2_0,
                                        grammarAccess
                                                .getIncludeLibAttributeAccess()
                                                .getImportURISTRINGTerminalRuleCall_2_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getIncludeLibAttributeRule());
                                }
                                setWithLastConsumed(current, "importURI",
                                        lv_importURI_2_0, "STRING");

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleIncludeLibAttribute2653);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getIncludeLibAttributeAccess()
                                .getRightParenthesisKeyword_3());

                    }
                    otherlv_4 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleIncludeLibAttribute2665);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess
                                .getIncludeLibAttributeAccess()
                                .getFullStopKeyword_4());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleIncludeLibAttribute"

    // $ANTLR start "entryRuleFileAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1139:1:
    // entryRuleFileAttribute returns [EObject current=null] :
    // iv_ruleFileAttribute= ruleFileAttribute EOF ;
    public final EObject entryRuleFileAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFileAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1140:2:
            // (iv_ruleFileAttribute= ruleFileAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1141:2:
            // iv_ruleFileAttribute= ruleFileAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFileAttributeRule());
                }
                pushFollow(FOLLOW_ruleFileAttribute_in_entryRuleFileAttribute2701);
                iv_ruleFileAttribute = ruleFileAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFileAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFileAttribute2711);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFileAttribute"

    // $ANTLR start "ruleFileAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1148:1:
    // ruleFileAttribute returns [EObject current=null] : ( ( ( ( 'file' ) )=>
    // (lv_tag_0_0= 'file' ) ) otherlv_1= '(' ( (lv_file_2_0= RULE_STRING ) )
    // otherlv_3= ',' ( (lv_line_4_0= ruleINTEGER ) ) otherlv_5= ')' otherlv_6=
    // '.' ) ;
    public final EObject ruleFileAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token lv_file_2_0 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        Token otherlv_6 = null;
        AntlrDatatypeRuleToken lv_line_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1151:28:
            // ( ( ( ( ( 'file' ) )=> (lv_tag_0_0= 'file' ) ) otherlv_1= '(' (
            // (lv_file_2_0= RULE_STRING ) ) otherlv_3= ',' ( (lv_line_4_0=
            // ruleINTEGER ) ) otherlv_5= ')' otherlv_6= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1152:1:
            // ( ( ( ( 'file' ) )=> (lv_tag_0_0= 'file' ) ) otherlv_1= '(' (
            // (lv_file_2_0= RULE_STRING ) ) otherlv_3= ',' ( (lv_line_4_0=
            // ruleINTEGER ) ) otherlv_5= ')' otherlv_6= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1152:1:
                // ( ( ( ( 'file' ) )=> (lv_tag_0_0= 'file' ) ) otherlv_1= '(' (
                // (lv_file_2_0= RULE_STRING ) ) otherlv_3= ',' ( (lv_line_4_0=
                // ruleINTEGER ) ) otherlv_5= ')' otherlv_6= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1152:2:
                // ( ( ( 'file' ) )=> (lv_tag_0_0= 'file' ) ) otherlv_1= '(' (
                // (lv_file_2_0= RULE_STRING ) ) otherlv_3= ',' ( (lv_line_4_0=
                // ruleINTEGER ) ) otherlv_5= ')' otherlv_6= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1152:2:
                    // ( ( ( 'file' ) )=> (lv_tag_0_0= 'file' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1152:3:
                    // ( ( 'file' ) )=> (lv_tag_0_0= 'file' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1159:1:
                        // (lv_tag_0_0= 'file' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1160:3:
                        // lv_tag_0_0= 'file'
                        {
                            lv_tag_0_0 = (Token) match(input, 31,
                                    FOLLOW_31_in_ruleFileAttribute2769);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getFileAttributeAccess()
                                        .getTagFileKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getFileAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "file");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleFileAttribute2794);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getFileAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1177:1:
                    // ( (lv_file_2_0= RULE_STRING ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1178:1:
                    // (lv_file_2_0= RULE_STRING )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1178:1:
                        // (lv_file_2_0= RULE_STRING )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1179:3:
                        // lv_file_2_0= RULE_STRING
                        {
                            lv_file_2_0 = (Token) match(input, RULE_STRING,
                                    FOLLOW_RULE_STRING_in_ruleFileAttribute2811);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_file_2_0, grammarAccess
                                        .getFileAttributeAccess()
                                        .getFileSTRINGTerminalRuleCall_2_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getFileAttributeRule());
                                }
                                setWithLastConsumed(current, "file",
                                        lv_file_2_0, "STRING");

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 22,
                            FOLLOW_22_in_ruleFileAttribute2828);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getFileAttributeAccess().getCommaKeyword_3());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1199:1:
                    // ( (lv_line_4_0= ruleINTEGER ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1200:1:
                    // (lv_line_4_0= ruleINTEGER )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1200:1:
                        // (lv_line_4_0= ruleINTEGER )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1201:3:
                        // lv_line_4_0= ruleINTEGER
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFileAttributeAccess()
                                        .getLineINTEGERParserRuleCall_4_0());

                            }
                            pushFollow(FOLLOW_ruleINTEGER_in_ruleFileAttribute2849);
                            lv_line_4_0 = ruleINTEGER();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFileAttributeRule());
                                }
                                set(current, "line", lv_line_4_0, "INTEGER");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_5 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleFileAttribute2861);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_5, grammarAccess
                                .getFileAttributeAccess()
                                .getRightParenthesisKeyword_5());

                    }
                    otherlv_6 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleFileAttribute2873);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_6, grammarAccess
                                .getFileAttributeAccess()
                                .getFullStopKeyword_6());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFileAttribute"

    // $ANTLR start "entryRuleModuleAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1233:1:
    // entryRuleModuleAttribute returns [EObject current=null] :
    // iv_ruleModuleAttribute= ruleModuleAttribute EOF ;
    public final EObject entryRuleModuleAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1234:2:
            // (iv_ruleModuleAttribute= ruleModuleAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1235:2:
            // iv_ruleModuleAttribute= ruleModuleAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getModuleAttributeRule());
                }
                pushFollow(FOLLOW_ruleModuleAttribute_in_entryRuleModuleAttribute2909);
                iv_ruleModuleAttribute = ruleModuleAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleModuleAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleModuleAttribute2919);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleModuleAttribute"

    // $ANTLR start "ruleModuleAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1242:1:
    // ruleModuleAttribute returns [EObject current=null] : ( ( ( ( 'module' )
    // )=> (lv_tag_0_0= 'module' ) ) otherlv_1= '(' ( (lv_moduleName_2_0=
    // ruleNAME ) ) otherlv_3= ')' otherlv_4= '.' ) ;
    public final EObject ruleModuleAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_4 = null;
        AntlrDatatypeRuleToken lv_moduleName_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1245:28:
            // ( ( ( ( ( 'module' ) )=> (lv_tag_0_0= 'module' ) ) otherlv_1= '('
            // ( (lv_moduleName_2_0= ruleNAME ) ) otherlv_3= ')' otherlv_4= '.'
            // ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1246:1:
            // ( ( ( ( 'module' ) )=> (lv_tag_0_0= 'module' ) ) otherlv_1= '(' (
            // (lv_moduleName_2_0= ruleNAME ) ) otherlv_3= ')' otherlv_4= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1246:1:
                // ( ( ( ( 'module' ) )=> (lv_tag_0_0= 'module' ) ) otherlv_1=
                // '(' ( (lv_moduleName_2_0= ruleNAME ) ) otherlv_3= ')'
                // otherlv_4= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1246:2:
                // ( ( ( 'module' ) )=> (lv_tag_0_0= 'module' ) ) otherlv_1= '('
                // ( (lv_moduleName_2_0= ruleNAME ) ) otherlv_3= ')' otherlv_4=
                // '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1246:2:
                    // ( ( ( 'module' ) )=> (lv_tag_0_0= 'module' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1246:3:
                    // ( ( 'module' ) )=> (lv_tag_0_0= 'module' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1253:1:
                        // (lv_tag_0_0= 'module' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1254:3:
                        // lv_tag_0_0= 'module'
                        {
                            lv_tag_0_0 = (Token) match(input, 32,
                                    FOLLOW_32_in_ruleModuleAttribute2977);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getModuleAttributeAccess()
                                        .getTagModuleKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getModuleAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "module");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleModuleAttribute3002);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getModuleAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1271:1:
                    // ( (lv_moduleName_2_0= ruleNAME ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1272:1:
                    // (lv_moduleName_2_0= ruleNAME )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1272:1:
                        // (lv_moduleName_2_0= ruleNAME )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1273:3:
                        // lv_moduleName_2_0= ruleNAME
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getModuleAttributeAccess()
                                        .getModuleNameNAMEParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleNAME_in_ruleModuleAttribute3023);
                            lv_moduleName_2_0 = ruleNAME();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getModuleAttributeRule());
                                }
                                set(current, "moduleName", lv_moduleName_2_0,
                                        "NAME");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleModuleAttribute3035);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getModuleAttributeAccess()
                                .getRightParenthesisKeyword_3());

                    }
                    otherlv_4 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleModuleAttribute3047);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess
                                .getModuleAttributeAccess()
                                .getFullStopKeyword_4());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleModuleAttribute"

    // $ANTLR start "entryRuleEncodingAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1305:1:
    // entryRuleEncodingAttribute returns [EObject current=null] :
    // iv_ruleEncodingAttribute= ruleEncodingAttribute EOF ;
    public final EObject entryRuleEncodingAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEncodingAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1306:2:
            // (iv_ruleEncodingAttribute= ruleEncodingAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1307:2:
            // iv_ruleEncodingAttribute= ruleEncodingAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getEncodingAttributeRule());
                }
                pushFollow(FOLLOW_ruleEncodingAttribute_in_entryRuleEncodingAttribute3083);
                iv_ruleEncodingAttribute = ruleEncodingAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleEncodingAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleEncodingAttribute3093);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleEncodingAttribute"

    // $ANTLR start "ruleEncodingAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1314:1:
    // ruleEncodingAttribute returns [EObject current=null] : ( ( ( ( 'encoding'
    // ) )=> (lv_tag_0_0= 'encoding' ) ) ( (otherlv_1= '(' ( (lv_charset_2_0=
    // ruleNAME ) ) otherlv_3= ')' ) | ( (lv_charset_4_0= ruleNAME ) ) )
    // otherlv_5= '.' ) ;
    public final EObject ruleEncodingAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        AntlrDatatypeRuleToken lv_charset_2_0 = null;

        AntlrDatatypeRuleToken lv_charset_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1317:28:
            // ( ( ( ( ( 'encoding' ) )=> (lv_tag_0_0= 'encoding' ) ) (
            // (otherlv_1= '(' ( (lv_charset_2_0= ruleNAME ) ) otherlv_3= ')' )
            // | ( (lv_charset_4_0= ruleNAME ) ) ) otherlv_5= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1318:1:
            // ( ( ( ( 'encoding' ) )=> (lv_tag_0_0= 'encoding' ) ) (
            // (otherlv_1= '(' ( (lv_charset_2_0= ruleNAME ) ) otherlv_3= ')' )
            // | ( (lv_charset_4_0= ruleNAME ) ) ) otherlv_5= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1318:1:
                // ( ( ( ( 'encoding' ) )=> (lv_tag_0_0= 'encoding' ) ) (
                // (otherlv_1= '(' ( (lv_charset_2_0= ruleNAME ) ) otherlv_3=
                // ')' ) | ( (lv_charset_4_0= ruleNAME ) ) ) otherlv_5= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1318:2:
                // ( ( ( 'encoding' ) )=> (lv_tag_0_0= 'encoding' ) ) (
                // (otherlv_1= '(' ( (lv_charset_2_0= ruleNAME ) ) otherlv_3=
                // ')' ) | ( (lv_charset_4_0= ruleNAME ) ) ) otherlv_5= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1318:2:
                    // ( ( ( 'encoding' ) )=> (lv_tag_0_0= 'encoding' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1318:3:
                    // ( ( 'encoding' ) )=> (lv_tag_0_0= 'encoding' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1325:1:
                        // (lv_tag_0_0= 'encoding' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1326:3:
                        // lv_tag_0_0= 'encoding'
                        {
                            lv_tag_0_0 = (Token) match(input, 33,
                                    FOLLOW_33_in_ruleEncodingAttribute3151);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getEncodingAttributeAccess()
                                        .getTagEncodingKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getEncodingAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "encoding");

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1339:2:
                    // ( (otherlv_1= '(' ( (lv_charset_2_0= ruleNAME ) )
                    // otherlv_3= ')' ) | ( (lv_charset_4_0= ruleNAME ) ) )
                    int alt15 = 2;
                    final int LA15_0 = input.LA(1);

                    if (LA15_0 == 21) {
                        alt15 = 1;
                    } else if (LA15_0 == RULE_ATOM || LA15_0 == 20
                            || LA15_0 >= 24 && LA15_0 <= 34 || LA15_0 == 39
                            || LA15_0 >= 42 && LA15_0 <= 45 || LA15_0 >= 47
                            && LA15_0 <= 48 || LA15_0 == 52) {
                        alt15 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 15, 0, input);

                        throw nvae;
                    }
                    switch (alt15) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1339:3:
                    // (otherlv_1= '(' ( (lv_charset_2_0= ruleNAME ) )
                    // otherlv_3= ')' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1339:3:
                        // (otherlv_1= '(' ( (lv_charset_2_0= ruleNAME ) )
                        // otherlv_3= ')' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1339:5:
                        // otherlv_1= '(' ( (lv_charset_2_0= ruleNAME ) )
                        // otherlv_3= ')'
                        {
                            otherlv_1 = (Token) match(input, 21,
                                    FOLLOW_21_in_ruleEncodingAttribute3178);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getEncodingAttributeAccess()
                                        .getLeftParenthesisKeyword_1_0_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1343:1:
                            // ( (lv_charset_2_0= ruleNAME ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1344:1:
                            // (lv_charset_2_0= ruleNAME )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1344:1:
                                // (lv_charset_2_0= ruleNAME )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1345:3:
                                // lv_charset_2_0= ruleNAME
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getEncodingAttributeAccess()
                                                .getCharsetNAMEParserRuleCall_1_0_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleNAME_in_ruleEncodingAttribute3199);
                                    lv_charset_2_0 = ruleNAME();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getEncodingAttributeRule());
                                        }
                                        set(current, "charset", lv_charset_2_0,
                                                "NAME");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            otherlv_3 = (Token) match(input, 23,
                                    FOLLOW_23_in_ruleEncodingAttribute3211);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_3, grammarAccess
                                        .getEncodingAttributeAccess()
                                        .getRightParenthesisKeyword_1_0_2());

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1366:6:
                    // ( (lv_charset_4_0= ruleNAME ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1366:6:
                        // ( (lv_charset_4_0= ruleNAME ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1367:1:
                        // (lv_charset_4_0= ruleNAME )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1367:1:
                            // (lv_charset_4_0= ruleNAME )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1368:3:
                            // lv_charset_4_0= ruleNAME
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getEncodingAttributeAccess()
                                            .getCharsetNAMEParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleNAME_in_ruleEncodingAttribute3239);
                                lv_charset_4_0 = ruleNAME();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getEncodingAttributeRule());
                                    }
                                    set(current, "charset", lv_charset_4_0,
                                            "NAME");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    otherlv_5 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleEncodingAttribute3252);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_5, grammarAccess
                                .getEncodingAttributeAccess()
                                .getFullStopKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleEncodingAttribute"

    // $ANTLR start "entryRuleRecordAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1396:1:
    // entryRuleRecordAttribute returns [EObject current=null] :
    // iv_ruleRecordAttribute= ruleRecordAttribute EOF ;
    public final EObject entryRuleRecordAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1397:2:
            // (iv_ruleRecordAttribute= ruleRecordAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1398:2:
            // iv_ruleRecordAttribute= ruleRecordAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordAttributeRule());
                }
                pushFollow(FOLLOW_ruleRecordAttribute_in_entryRuleRecordAttribute3288);
                iv_ruleRecordAttribute = ruleRecordAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleRecordAttribute3298);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordAttribute"

    // $ANTLR start "ruleRecordAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1405:1:
    // ruleRecordAttribute returns [EObject current=null] : ( ( ( ( 'record' )
    // )=> (lv_tag_0_0= 'record' ) ) otherlv_1= '(' ( (lv_name_2_0=
    // ruleNAMEMACRO ) ) otherlv_3= ',' ( (otherlv_4= '{' ( ( (lv_fields_5_0=
    // ruleRecordFieldDef ) ) (otherlv_6= ',' ( (lv_fields_7_0=
    // ruleRecordFieldDef ) ) )* )? otherlv_8= '}' ) | ( (lv_recordMacro_9_0=
    // ruleMacroCall ) ) ) otherlv_10= ')' otherlv_11= '.' ) ;
    public final EObject ruleRecordAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        Token otherlv_8 = null;
        Token otherlv_10 = null;
        Token otherlv_11 = null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_fields_5_0 = null;

        EObject lv_fields_7_0 = null;

        EObject lv_recordMacro_9_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1408:28:
            // ( ( ( ( ( 'record' ) )=> (lv_tag_0_0= 'record' ) ) otherlv_1= '('
            // ( (lv_name_2_0= ruleNAMEMACRO ) ) otherlv_3= ',' ( (otherlv_4=
            // '{' ( ( (lv_fields_5_0= ruleRecordFieldDef ) ) (otherlv_6= ',' (
            // (lv_fields_7_0= ruleRecordFieldDef ) ) )* )? otherlv_8= '}' ) | (
            // (lv_recordMacro_9_0= ruleMacroCall ) ) ) otherlv_10= ')'
            // otherlv_11= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1409:1:
            // ( ( ( ( 'record' ) )=> (lv_tag_0_0= 'record' ) ) otherlv_1= '(' (
            // (lv_name_2_0= ruleNAMEMACRO ) ) otherlv_3= ',' ( (otherlv_4= '{'
            // ( ( (lv_fields_5_0= ruleRecordFieldDef ) ) (otherlv_6= ',' (
            // (lv_fields_7_0= ruleRecordFieldDef ) ) )* )? otherlv_8= '}' ) | (
            // (lv_recordMacro_9_0= ruleMacroCall ) ) ) otherlv_10= ')'
            // otherlv_11= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1409:1:
                // ( ( ( ( 'record' ) )=> (lv_tag_0_0= 'record' ) ) otherlv_1=
                // '(' ( (lv_name_2_0= ruleNAMEMACRO ) ) otherlv_3= ',' (
                // (otherlv_4= '{' ( ( (lv_fields_5_0= ruleRecordFieldDef ) )
                // (otherlv_6= ',' ( (lv_fields_7_0= ruleRecordFieldDef ) ) )*
                // )? otherlv_8= '}' ) | ( (lv_recordMacro_9_0= ruleMacroCall )
                // ) ) otherlv_10= ')' otherlv_11= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1409:2:
                // ( ( ( 'record' ) )=> (lv_tag_0_0= 'record' ) ) otherlv_1= '('
                // ( (lv_name_2_0= ruleNAMEMACRO ) ) otherlv_3= ',' (
                // (otherlv_4= '{' ( ( (lv_fields_5_0= ruleRecordFieldDef ) )
                // (otherlv_6= ',' ( (lv_fields_7_0= ruleRecordFieldDef ) ) )*
                // )? otherlv_8= '}' ) | ( (lv_recordMacro_9_0= ruleMacroCall )
                // ) ) otherlv_10= ')' otherlv_11= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1409:2:
                    // ( ( ( 'record' ) )=> (lv_tag_0_0= 'record' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1409:3:
                    // ( ( 'record' ) )=> (lv_tag_0_0= 'record' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1416:1:
                        // (lv_tag_0_0= 'record' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1417:3:
                        // lv_tag_0_0= 'record'
                        {
                            lv_tag_0_0 = (Token) match(input, 34,
                                    FOLLOW_34_in_ruleRecordAttribute3356);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getRecordAttributeAccess()
                                        .getTagRecordKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getRecordAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "record");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleRecordAttribute3381);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getRecordAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1434:1:
                    // ( (lv_name_2_0= ruleNAMEMACRO ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1435:1:
                    // (lv_name_2_0= ruleNAMEMACRO )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1435:1:
                        // (lv_name_2_0= ruleNAMEMACRO )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1436:3:
                        // lv_name_2_0= ruleNAMEMACRO
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getRecordAttributeAccess()
                                        .getNameNAMEMACROParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleNAMEMACRO_in_ruleRecordAttribute3402);
                            lv_name_2_0 = ruleNAMEMACRO();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getRecordAttributeRule());
                                }
                                set(current, "name", lv_name_2_0, "NAMEMACRO");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 22,
                            FOLLOW_22_in_ruleRecordAttribute3414);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getRecordAttributeAccess().getCommaKeyword_3());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1456:1:
                    // ( (otherlv_4= '{' ( ( (lv_fields_5_0= ruleRecordFieldDef
                    // ) ) (otherlv_6= ',' ( (lv_fields_7_0= ruleRecordFieldDef
                    // ) ) )* )? otherlv_8= '}' ) | ( (lv_recordMacro_9_0=
                    // ruleMacroCall ) ) )
                    int alt18 = 2;
                    final int LA18_0 = input.LA(1);

                    if (LA18_0 == 35) {
                        alt18 = 1;
                    } else if (LA18_0 == 51 || LA18_0 == 102) {
                        alt18 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 18, 0, input);

                        throw nvae;
                    }
                    switch (alt18) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1456:2:
                    // (otherlv_4= '{' ( ( (lv_fields_5_0= ruleRecordFieldDef )
                    // ) (otherlv_6= ',' ( (lv_fields_7_0= ruleRecordFieldDef )
                    // ) )* )? otherlv_8= '}' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1456:2:
                        // (otherlv_4= '{' ( ( (lv_fields_5_0=
                        // ruleRecordFieldDef ) ) (otherlv_6= ',' (
                        // (lv_fields_7_0= ruleRecordFieldDef ) ) )* )?
                        // otherlv_8= '}' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1456:4:
                        // otherlv_4= '{' ( ( (lv_fields_5_0= ruleRecordFieldDef
                        // ) ) (otherlv_6= ',' ( (lv_fields_7_0=
                        // ruleRecordFieldDef ) ) )* )? otherlv_8= '}'
                        {
                            otherlv_4 = (Token) match(input, 35,
                                    FOLLOW_35_in_ruleRecordAttribute3428);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_4, grammarAccess
                                        .getRecordAttributeAccess()
                                        .getLeftCurlyBracketKeyword_4_0_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1460:1:
                            // ( ( (lv_fields_5_0= ruleRecordFieldDef ) )
                            // (otherlv_6= ',' ( (lv_fields_7_0=
                            // ruleRecordFieldDef ) ) )* )?
                            int alt17 = 2;
                            final int LA17_0 = input.LA(1);

                            if (LA17_0 == RULE_ATOM || LA17_0 == RULE_VARIABLE
                                    || LA17_0 == 20 || LA17_0 >= 24
                                    && LA17_0 <= 34 || LA17_0 == 39
                                    || LA17_0 >= 42 && LA17_0 <= 45
                                    || LA17_0 >= 47 && LA17_0 <= 48
                                    || LA17_0 == 52) {
                                alt17 = 1;
                            }
                            switch (alt17) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1460:2:
                            // ( (lv_fields_5_0= ruleRecordFieldDef ) )
                            // (otherlv_6= ',' ( (lv_fields_7_0=
                            // ruleRecordFieldDef ) ) )*
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1460:2:
                                // ( (lv_fields_5_0= ruleRecordFieldDef ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1461:1:
                                // (lv_fields_5_0= ruleRecordFieldDef )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1461:1:
                                    // (lv_fields_5_0= ruleRecordFieldDef )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1462:3:
                                    // lv_fields_5_0= ruleRecordFieldDef
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getRecordAttributeAccess()
                                                    .getFieldsRecordFieldDefParserRuleCall_4_0_1_0_0());

                                        }
                                        pushFollow(FOLLOW_ruleRecordFieldDef_in_ruleRecordAttribute3450);
                                        lv_fields_5_0 = ruleRecordFieldDef();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getRecordAttributeRule());
                                            }
                                            add(current, "fields",
                                                    lv_fields_5_0,
                                                    "RecordFieldDef");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1478:2:
                                // (otherlv_6= ',' ( (lv_fields_7_0=
                                // ruleRecordFieldDef ) ) )*
                                loop16:
                                do {
                                    int alt16 = 2;
                                    final int LA16_0 = input.LA(1);

                                    if (LA16_0 == 22) {
                                        alt16 = 1;
                                    }

                                    switch (alt16) {
                                    case 1:
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1478:4:
                                    // otherlv_6= ',' ( (lv_fields_7_0=
                                    // ruleRecordFieldDef ) )
                                    {
                                        otherlv_6 = (Token) match(input, 22,
                                                FOLLOW_22_in_ruleRecordAttribute3463);
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            newLeafNode(
                                                    otherlv_6,
                                                    grammarAccess
                                                            .getRecordAttributeAccess()
                                                            .getCommaKeyword_4_0_1_1_0());

                                        }
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1482:1:
                                        // ( (lv_fields_7_0= ruleRecordFieldDef
                                        // ) )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1483:1:
                                        // (lv_fields_7_0= ruleRecordFieldDef )
                                        {
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1483:1:
                                            // (lv_fields_7_0=
                                            // ruleRecordFieldDef )
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1484:3:
                                            // lv_fields_7_0= ruleRecordFieldDef
                                            {
                                                if (state.backtracking == 0) {

                                                    newCompositeNode(grammarAccess
                                                            .getRecordAttributeAccess()
                                                            .getFieldsRecordFieldDefParserRuleCall_4_0_1_1_1_0());

                                                }
                                                pushFollow(FOLLOW_ruleRecordFieldDef_in_ruleRecordAttribute3484);
                                                lv_fields_7_0 = ruleRecordFieldDef();

                                                state._fsp--;
                                                if (state.failed) {
                                                    return current;
                                                }
                                                if (state.backtracking == 0) {

                                                    if (current == null) {
                                                        current = createModelElementForParent(grammarAccess
                                                                .getRecordAttributeRule());
                                                    }
                                                    add(current, "fields",
                                                            lv_fields_7_0,
                                                            "RecordFieldDef");
                                                    afterParserOrEnumRuleCall();

                                                }

                                            }

                                        }

                                    }
                                        break;

                                    default:
                                        break loop16;
                                    }
                                } while (true);

                            }
                                break;

                            }

                            otherlv_8 = (Token) match(input, 36,
                                    FOLLOW_36_in_ruleRecordAttribute3500);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_8, grammarAccess
                                        .getRecordAttributeAccess()
                                        .getRightCurlyBracketKeyword_4_0_2());

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1505:6:
                    // ( (lv_recordMacro_9_0= ruleMacroCall ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1505:6:
                        // ( (lv_recordMacro_9_0= ruleMacroCall ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1506:1:
                        // (lv_recordMacro_9_0= ruleMacroCall )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1506:1:
                            // (lv_recordMacro_9_0= ruleMacroCall )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1507:3:
                            // lv_recordMacro_9_0= ruleMacroCall
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getRecordAttributeAccess()
                                            .getRecordMacroMacroCallParserRuleCall_4_1_0());

                                }
                                pushFollow(FOLLOW_ruleMacroCall_in_ruleRecordAttribute3528);
                                lv_recordMacro_9_0 = ruleMacroCall();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getRecordAttributeRule());
                                    }
                                    set(current, "recordMacro",
                                            lv_recordMacro_9_0, "MacroCall");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    otherlv_10 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleRecordAttribute3541);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_10, grammarAccess
                                .getRecordAttributeAccess()
                                .getRightParenthesisKeyword_5());

                    }
                    otherlv_11 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleRecordAttribute3553);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_11, grammarAccess
                                .getRecordAttributeAccess()
                                .getFullStopKeyword_6());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordAttribute"

    // $ANTLR start "entryRuleRecordFieldDef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1539:1:
    // entryRuleRecordFieldDef returns [EObject current=null] :
    // iv_ruleRecordFieldDef= ruleRecordFieldDef EOF ;
    public final EObject entryRuleRecordFieldDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordFieldDef = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1540:2:
            // (iv_ruleRecordFieldDef= ruleRecordFieldDef EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1541:2:
            // iv_ruleRecordFieldDef= ruleRecordFieldDef EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordFieldDefRule());
                }
                pushFollow(FOLLOW_ruleRecordFieldDef_in_entryRuleRecordFieldDef3589);
                iv_ruleRecordFieldDef = ruleRecordFieldDef();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordFieldDef;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleRecordFieldDef3599);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordFieldDef"

    // $ANTLR start "ruleRecordFieldDef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1548:1:
    // ruleRecordFieldDef returns [EObject current=null] : ( ( (lv_name_0_0=
    // ruleNAMEVAR ) ) (otherlv_1= '=' ( (lv_value_2_0= ruleExpression ) ) )?
    // (otherlv_3= '::' ( (lv_type_4_0= ruleTopType ) ) )? ) ;
    public final EObject ruleRecordFieldDef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_type_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1551:28:
            // ( ( ( (lv_name_0_0= ruleNAMEVAR ) ) (otherlv_1= '=' (
            // (lv_value_2_0= ruleExpression ) ) )? (otherlv_3= '::' (
            // (lv_type_4_0= ruleTopType ) ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1552:1:
            // ( ( (lv_name_0_0= ruleNAMEVAR ) ) (otherlv_1= '=' (
            // (lv_value_2_0= ruleExpression ) ) )? (otherlv_3= '::' (
            // (lv_type_4_0= ruleTopType ) ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1552:1:
                // ( ( (lv_name_0_0= ruleNAMEVAR ) ) (otherlv_1= '=' (
                // (lv_value_2_0= ruleExpression ) ) )? (otherlv_3= '::' (
                // (lv_type_4_0= ruleTopType ) ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1552:2:
                // ( (lv_name_0_0= ruleNAMEVAR ) ) (otherlv_1= '=' (
                // (lv_value_2_0= ruleExpression ) ) )? (otherlv_3= '::' (
                // (lv_type_4_0= ruleTopType ) ) )?
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1552:2:
                    // ( (lv_name_0_0= ruleNAMEVAR ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1553:1:
                    // (lv_name_0_0= ruleNAMEVAR )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1553:1:
                        // (lv_name_0_0= ruleNAMEVAR )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1554:3:
                        // lv_name_0_0= ruleNAMEVAR
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getRecordFieldDefAccess()
                                        .getNameNAMEVARParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleNAMEVAR_in_ruleRecordFieldDef3645);
                            lv_name_0_0 = ruleNAMEVAR();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getRecordFieldDefRule());
                                }
                                set(current, "name", lv_name_0_0, "NAMEVAR");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1570:2:
                    // (otherlv_1= '=' ( (lv_value_2_0= ruleExpression ) ) )?
                    int alt19 = 2;
                    final int LA19_0 = input.LA(1);

                    if (LA19_0 == 37) {
                        alt19 = 1;
                    }
                    switch (alt19) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1570:4:
                    // otherlv_1= '=' ( (lv_value_2_0= ruleExpression ) )
                    {
                        otherlv_1 = (Token) match(input, 37,
                                FOLLOW_37_in_ruleRecordFieldDef3658);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getRecordFieldDefAccess()
                                    .getEqualsSignKeyword_1_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1574:1:
                        // ( (lv_value_2_0= ruleExpression ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1575:1:
                        // (lv_value_2_0= ruleExpression )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1575:1:
                            // (lv_value_2_0= ruleExpression )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1576:3:
                            // lv_value_2_0= ruleExpression
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getRecordFieldDefAccess()
                                            .getValueExpressionParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleExpression_in_ruleRecordFieldDef3679);
                                lv_value_2_0 = ruleExpression();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getRecordFieldDefRule());
                                    }
                                    set(current, "value", lv_value_2_0,
                                            "Expression");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1592:4:
                    // (otherlv_3= '::' ( (lv_type_4_0= ruleTopType ) ) )?
                    int alt20 = 2;
                    final int LA20_0 = input.LA(1);

                    if (LA20_0 == 38) {
                        alt20 = 1;
                    }
                    switch (alt20) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1592:6:
                    // otherlv_3= '::' ( (lv_type_4_0= ruleTopType ) )
                    {
                        otherlv_3 = (Token) match(input, 38,
                                FOLLOW_38_in_ruleRecordFieldDef3694);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_3, grammarAccess
                                    .getRecordFieldDefAccess()
                                    .getColonColonKeyword_2_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1596:1:
                        // ( (lv_type_4_0= ruleTopType ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1597:1:
                        // (lv_type_4_0= ruleTopType )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1597:1:
                            // (lv_type_4_0= ruleTopType )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1598:3:
                            // lv_type_4_0= ruleTopType
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getRecordFieldDefAccess()
                                            .getTypeTopTypeParserRuleCall_2_1_0());

                                }
                                pushFollow(FOLLOW_ruleTopType_in_ruleRecordFieldDef3715);
                                lv_type_4_0 = ruleTopType();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getRecordFieldDefRule());
                                    }
                                    set(current, "type", lv_type_4_0, "TopType");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordFieldDef"

    // $ANTLR start "entryRuleExportAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1622:1:
    // entryRuleExportAttribute returns [EObject current=null] :
    // iv_ruleExportAttribute= ruleExportAttribute EOF ;
    public final EObject entryRuleExportAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1623:2:
            // (iv_ruleExportAttribute= ruleExportAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1624:2:
            // iv_ruleExportAttribute= ruleExportAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExportAttributeRule());
                }
                pushFollow(FOLLOW_ruleExportAttribute_in_entryRuleExportAttribute3753);
                iv_ruleExportAttribute = ruleExportAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExportAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExportAttribute3763);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExportAttribute"

    // $ANTLR start "ruleExportAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1631:1:
    // ruleExportAttribute returns [EObject current=null] : ( ( ( ( 'export' )
    // )=> (lv_tag_0_0= 'export' ) ) otherlv_1= '(' otherlv_2= '[' ( (
    // (lv_funs_3_0= ruleFunRef ) ) (otherlv_4= ',' ( (lv_funs_5_0= ruleFunRef )
    // ) )* )? otherlv_6= ']' otherlv_7= ')' otherlv_8= '.' ) ;
    public final EObject ruleExportAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        Token otherlv_7 = null;
        Token otherlv_8 = null;
        EObject lv_funs_3_0 = null;

        EObject lv_funs_5_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1634:28:
            // ( ( ( ( ( 'export' ) )=> (lv_tag_0_0= 'export' ) ) otherlv_1= '('
            // otherlv_2= '[' ( ( (lv_funs_3_0= ruleFunRef ) ) (otherlv_4= ',' (
            // (lv_funs_5_0= ruleFunRef ) ) )* )? otherlv_6= ']' otherlv_7= ')'
            // otherlv_8= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1635:1:
            // ( ( ( ( 'export' ) )=> (lv_tag_0_0= 'export' ) ) otherlv_1= '('
            // otherlv_2= '[' ( ( (lv_funs_3_0= ruleFunRef ) ) (otherlv_4= ',' (
            // (lv_funs_5_0= ruleFunRef ) ) )* )? otherlv_6= ']' otherlv_7= ')'
            // otherlv_8= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1635:1:
                // ( ( ( ( 'export' ) )=> (lv_tag_0_0= 'export' ) ) otherlv_1=
                // '(' otherlv_2= '[' ( ( (lv_funs_3_0= ruleFunRef ) )
                // (otherlv_4= ',' ( (lv_funs_5_0= ruleFunRef ) ) )* )?
                // otherlv_6= ']' otherlv_7= ')' otherlv_8= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1635:2:
                // ( ( ( 'export' ) )=> (lv_tag_0_0= 'export' ) ) otherlv_1= '('
                // otherlv_2= '[' ( ( (lv_funs_3_0= ruleFunRef ) ) (otherlv_4=
                // ',' ( (lv_funs_5_0= ruleFunRef ) ) )* )? otherlv_6= ']'
                // otherlv_7= ')' otherlv_8= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1635:2:
                    // ( ( ( 'export' ) )=> (lv_tag_0_0= 'export' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1635:3:
                    // ( ( 'export' ) )=> (lv_tag_0_0= 'export' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1642:1:
                        // (lv_tag_0_0= 'export' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1643:3:
                        // lv_tag_0_0= 'export'
                        {
                            lv_tag_0_0 = (Token) match(input, 39,
                                    FOLLOW_39_in_ruleExportAttribute3821);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getExportAttributeAccess()
                                        .getTagExportKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getExportAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "export");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleExportAttribute3846);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getExportAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    otherlv_2 = (Token) match(input, 40,
                            FOLLOW_40_in_ruleExportAttribute3858);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_2, grammarAccess
                                .getExportAttributeAccess()
                                .getLeftSquareBracketKeyword_2());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1664:1:
                    // ( ( (lv_funs_3_0= ruleFunRef ) ) (otherlv_4= ',' (
                    // (lv_funs_5_0= ruleFunRef ) ) )* )?
                    int alt22 = 2;
                    final int LA22_0 = input.LA(1);

                    if (LA22_0 == RULE_ATOM || LA22_0 == RULE_VARIABLE
                            || LA22_0 == 20 || LA22_0 >= 24 && LA22_0 <= 34
                            || LA22_0 == 39 || LA22_0 >= 42 && LA22_0 <= 45
                            || LA22_0 >= 47 && LA22_0 <= 48 || LA22_0 >= 51
                            && LA22_0 <= 52 || LA22_0 == 102) {
                        alt22 = 1;
                    }
                    switch (alt22) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1664:2:
                    // ( (lv_funs_3_0= ruleFunRef ) ) (otherlv_4= ',' (
                    // (lv_funs_5_0= ruleFunRef ) ) )*
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1664:2:
                        // ( (lv_funs_3_0= ruleFunRef ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1665:1:
                        // (lv_funs_3_0= ruleFunRef )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1665:1:
                            // (lv_funs_3_0= ruleFunRef )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1666:3:
                            // lv_funs_3_0= ruleFunRef
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getExportAttributeAccess()
                                            .getFunsFunRefParserRuleCall_3_0_0());

                                }
                                pushFollow(FOLLOW_ruleFunRef_in_ruleExportAttribute3880);
                                lv_funs_3_0 = ruleFunRef();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getExportAttributeRule());
                                    }
                                    add(current, "funs", lv_funs_3_0, "FunRef");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1682:2:
                        // (otherlv_4= ',' ( (lv_funs_5_0= ruleFunRef ) ) )*
                        loop21:
                        do {
                            int alt21 = 2;
                            final int LA21_0 = input.LA(1);

                            if (LA21_0 == 22) {
                                alt21 = 1;
                            }

                            switch (alt21) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1682:4:
                            // otherlv_4= ',' ( (lv_funs_5_0= ruleFunRef ) )
                            {
                                otherlv_4 = (Token) match(input, 22,
                                        FOLLOW_22_in_ruleExportAttribute3893);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_4, grammarAccess
                                            .getExportAttributeAccess()
                                            .getCommaKeyword_3_1_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1686:1:
                                // ( (lv_funs_5_0= ruleFunRef ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1687:1:
                                // (lv_funs_5_0= ruleFunRef )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1687:1:
                                    // (lv_funs_5_0= ruleFunRef )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1688:3:
                                    // lv_funs_5_0= ruleFunRef
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getExportAttributeAccess()
                                                    .getFunsFunRefParserRuleCall_3_1_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleFunRef_in_ruleExportAttribute3914);
                                        lv_funs_5_0 = ruleFunRef();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getExportAttributeRule());
                                            }
                                            add(current, "funs", lv_funs_5_0,
                                                    "FunRef");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                break loop21;
                            }
                        } while (true);

                    }
                        break;

                    }

                    otherlv_6 = (Token) match(input, 41,
                            FOLLOW_41_in_ruleExportAttribute3930);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_6, grammarAccess
                                .getExportAttributeAccess()
                                .getRightSquareBracketKeyword_4());

                    }
                    otherlv_7 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleExportAttribute3942);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_7, grammarAccess
                                .getExportAttributeAccess()
                                .getRightParenthesisKeyword_5());

                    }
                    otherlv_8 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleExportAttribute3954);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_8, grammarAccess
                                .getExportAttributeAccess()
                                .getFullStopKeyword_6());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExportAttribute"

    // $ANTLR start "entryRuleImportAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1724:1:
    // entryRuleImportAttribute returns [EObject current=null] :
    // iv_ruleImportAttribute= ruleImportAttribute EOF ;
    public final EObject entryRuleImportAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1725:2:
            // (iv_ruleImportAttribute= ruleImportAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1726:2:
            // iv_ruleImportAttribute= ruleImportAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getImportAttributeRule());
                }
                pushFollow(FOLLOW_ruleImportAttribute_in_entryRuleImportAttribute3990);
                iv_ruleImportAttribute = ruleImportAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleImportAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleImportAttribute4000);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleImportAttribute"

    // $ANTLR start "ruleImportAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1733:1:
    // ruleImportAttribute returns [EObject current=null] : ( ( ( ( 'import' )
    // )=> (lv_tag_0_0= 'import' ) ) otherlv_1= '(' ( (lv_module_2_0=
    // ruleModuleVarMacro ) ) otherlv_3= ',' otherlv_4= '[' ( ( (lv_funs_5_0=
    // ruleFunRef ) ) (otherlv_6= ',' ( (lv_funs_7_0= ruleFunRef ) ) )* )?
    // otherlv_8= ']' otherlv_9= ')' otherlv_10= '.' ) ;
    public final EObject ruleImportAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        Token otherlv_8 = null;
        Token otherlv_9 = null;
        Token otherlv_10 = null;
        EObject lv_module_2_0 = null;

        EObject lv_funs_5_0 = null;

        EObject lv_funs_7_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1736:28:
            // ( ( ( ( ( 'import' ) )=> (lv_tag_0_0= 'import' ) ) otherlv_1= '('
            // ( (lv_module_2_0= ruleModuleVarMacro ) ) otherlv_3= ','
            // otherlv_4= '[' ( ( (lv_funs_5_0= ruleFunRef ) ) (otherlv_6= ',' (
            // (lv_funs_7_0= ruleFunRef ) ) )* )? otherlv_8= ']' otherlv_9= ')'
            // otherlv_10= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1737:1:
            // ( ( ( ( 'import' ) )=> (lv_tag_0_0= 'import' ) ) otherlv_1= '(' (
            // (lv_module_2_0= ruleModuleVarMacro ) ) otherlv_3= ',' otherlv_4=
            // '[' ( ( (lv_funs_5_0= ruleFunRef ) ) (otherlv_6= ',' (
            // (lv_funs_7_0= ruleFunRef ) ) )* )? otherlv_8= ']' otherlv_9= ')'
            // otherlv_10= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1737:1:
                // ( ( ( ( 'import' ) )=> (lv_tag_0_0= 'import' ) ) otherlv_1=
                // '(' ( (lv_module_2_0= ruleModuleVarMacro ) ) otherlv_3= ','
                // otherlv_4= '[' ( ( (lv_funs_5_0= ruleFunRef ) ) (otherlv_6=
                // ',' ( (lv_funs_7_0= ruleFunRef ) ) )* )? otherlv_8= ']'
                // otherlv_9= ')' otherlv_10= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1737:2:
                // ( ( ( 'import' ) )=> (lv_tag_0_0= 'import' ) ) otherlv_1= '('
                // ( (lv_module_2_0= ruleModuleVarMacro ) ) otherlv_3= ','
                // otherlv_4= '[' ( ( (lv_funs_5_0= ruleFunRef ) ) (otherlv_6=
                // ',' ( (lv_funs_7_0= ruleFunRef ) ) )* )? otherlv_8= ']'
                // otherlv_9= ')' otherlv_10= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1737:2:
                    // ( ( ( 'import' ) )=> (lv_tag_0_0= 'import' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1737:3:
                    // ( ( 'import' ) )=> (lv_tag_0_0= 'import' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1744:1:
                        // (lv_tag_0_0= 'import' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1745:3:
                        // lv_tag_0_0= 'import'
                        {
                            lv_tag_0_0 = (Token) match(input, 42,
                                    FOLLOW_42_in_ruleImportAttribute4058);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getImportAttributeAccess()
                                        .getTagImportKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getImportAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "import");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleImportAttribute4083);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getImportAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1762:1:
                    // ( (lv_module_2_0= ruleModuleVarMacro ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1763:1:
                    // (lv_module_2_0= ruleModuleVarMacro )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1763:1:
                        // (lv_module_2_0= ruleModuleVarMacro )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1764:3:
                        // lv_module_2_0= ruleModuleVarMacro
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getImportAttributeAccess()
                                        .getModuleModuleVarMacroParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleModuleVarMacro_in_ruleImportAttribute4104);
                            lv_module_2_0 = ruleModuleVarMacro();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getImportAttributeRule());
                                }
                                set(current, "module", lv_module_2_0,
                                        "ModuleVarMacro");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 22,
                            FOLLOW_22_in_ruleImportAttribute4116);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getImportAttributeAccess().getCommaKeyword_3());

                    }
                    otherlv_4 = (Token) match(input, 40,
                            FOLLOW_40_in_ruleImportAttribute4128);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess
                                .getImportAttributeAccess()
                                .getLeftSquareBracketKeyword_4());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1788:1:
                    // ( ( (lv_funs_5_0= ruleFunRef ) ) (otherlv_6= ',' (
                    // (lv_funs_7_0= ruleFunRef ) ) )* )?
                    int alt24 = 2;
                    final int LA24_0 = input.LA(1);

                    if (LA24_0 == RULE_ATOM || LA24_0 == RULE_VARIABLE
                            || LA24_0 == 20 || LA24_0 >= 24 && LA24_0 <= 34
                            || LA24_0 == 39 || LA24_0 >= 42 && LA24_0 <= 45
                            || LA24_0 >= 47 && LA24_0 <= 48 || LA24_0 >= 51
                            && LA24_0 <= 52 || LA24_0 == 102) {
                        alt24 = 1;
                    }
                    switch (alt24) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1788:2:
                    // ( (lv_funs_5_0= ruleFunRef ) ) (otherlv_6= ',' (
                    // (lv_funs_7_0= ruleFunRef ) ) )*
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1788:2:
                        // ( (lv_funs_5_0= ruleFunRef ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1789:1:
                        // (lv_funs_5_0= ruleFunRef )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1789:1:
                            // (lv_funs_5_0= ruleFunRef )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1790:3:
                            // lv_funs_5_0= ruleFunRef
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getImportAttributeAccess()
                                            .getFunsFunRefParserRuleCall_5_0_0());

                                }
                                pushFollow(FOLLOW_ruleFunRef_in_ruleImportAttribute4150);
                                lv_funs_5_0 = ruleFunRef();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getImportAttributeRule());
                                    }
                                    add(current, "funs", lv_funs_5_0, "FunRef");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1806:2:
                        // (otherlv_6= ',' ( (lv_funs_7_0= ruleFunRef ) ) )*
                        loop23:
                        do {
                            int alt23 = 2;
                            final int LA23_0 = input.LA(1);

                            if (LA23_0 == 22) {
                                alt23 = 1;
                            }

                            switch (alt23) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1806:4:
                            // otherlv_6= ',' ( (lv_funs_7_0= ruleFunRef ) )
                            {
                                otherlv_6 = (Token) match(input, 22,
                                        FOLLOW_22_in_ruleImportAttribute4163);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_6, grammarAccess
                                            .getImportAttributeAccess()
                                            .getCommaKeyword_5_1_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1810:1:
                                // ( (lv_funs_7_0= ruleFunRef ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1811:1:
                                // (lv_funs_7_0= ruleFunRef )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1811:1:
                                    // (lv_funs_7_0= ruleFunRef )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1812:3:
                                    // lv_funs_7_0= ruleFunRef
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getImportAttributeAccess()
                                                    .getFunsFunRefParserRuleCall_5_1_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleFunRef_in_ruleImportAttribute4184);
                                        lv_funs_7_0 = ruleFunRef();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getImportAttributeRule());
                                            }
                                            add(current, "funs", lv_funs_7_0,
                                                    "FunRef");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                break loop23;
                            }
                        } while (true);

                    }
                        break;

                    }

                    otherlv_8 = (Token) match(input, 41,
                            FOLLOW_41_in_ruleImportAttribute4200);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_8, grammarAccess
                                .getImportAttributeAccess()
                                .getRightSquareBracketKeyword_6());

                    }
                    otherlv_9 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleImportAttribute4212);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_9, grammarAccess
                                .getImportAttributeAccess()
                                .getRightParenthesisKeyword_7());

                    }
                    otherlv_10 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleImportAttribute4224);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_10, grammarAccess
                                .getImportAttributeAccess()
                                .getFullStopKeyword_8());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleImportAttribute"

    // $ANTLR start "entryRuleCompileAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1848:1:
    // entryRuleCompileAttribute returns [EObject current=null] :
    // iv_ruleCompileAttribute= ruleCompileAttribute EOF ;
    public final EObject entryRuleCompileAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompileAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1849:2:
            // (iv_ruleCompileAttribute= ruleCompileAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1850:2:
            // iv_ruleCompileAttribute= ruleCompileAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getCompileAttributeRule());
                }
                pushFollow(FOLLOW_ruleCompileAttribute_in_entryRuleCompileAttribute4260);
                iv_ruleCompileAttribute = ruleCompileAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleCompileAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleCompileAttribute4270);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleCompileAttribute"

    // $ANTLR start "ruleCompileAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1857:1:
    // ruleCompileAttribute returns [EObject current=null] : ( ( ( ( 'compile' )
    // )=> (lv_tag_0_0= 'compile' ) ) otherlv_1= '(' ( (lv_options_2_0=
    // ruleExpression ) ) otherlv_3= ')' otherlv_4= '.' ) ;
    public final EObject ruleCompileAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_4 = null;
        EObject lv_options_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1860:28:
            // ( ( ( ( ( 'compile' ) )=> (lv_tag_0_0= 'compile' ) ) otherlv_1=
            // '(' ( (lv_options_2_0= ruleExpression ) ) otherlv_3= ')'
            // otherlv_4= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1861:1:
            // ( ( ( ( 'compile' ) )=> (lv_tag_0_0= 'compile' ) ) otherlv_1= '('
            // ( (lv_options_2_0= ruleExpression ) ) otherlv_3= ')' otherlv_4=
            // '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1861:1:
                // ( ( ( ( 'compile' ) )=> (lv_tag_0_0= 'compile' ) ) otherlv_1=
                // '(' ( (lv_options_2_0= ruleExpression ) ) otherlv_3= ')'
                // otherlv_4= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1861:2:
                // ( ( ( 'compile' ) )=> (lv_tag_0_0= 'compile' ) ) otherlv_1=
                // '(' ( (lv_options_2_0= ruleExpression ) ) otherlv_3= ')'
                // otherlv_4= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1861:2:
                    // ( ( ( 'compile' ) )=> (lv_tag_0_0= 'compile' ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1861:3:
                    // ( ( 'compile' ) )=> (lv_tag_0_0= 'compile' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1868:1:
                        // (lv_tag_0_0= 'compile' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1869:3:
                        // lv_tag_0_0= 'compile'
                        {
                            lv_tag_0_0 = (Token) match(input, 43,
                                    FOLLOW_43_in_ruleCompileAttribute4328);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getCompileAttributeAccess()
                                        .getTagCompileKeyword_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getCompileAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "compile");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleCompileAttribute4353);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getCompileAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1886:1:
                    // ( (lv_options_2_0= ruleExpression ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1887:1:
                    // (lv_options_2_0= ruleExpression )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1887:1:
                        // (lv_options_2_0= ruleExpression )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1888:3:
                        // lv_options_2_0= ruleExpression
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getCompileAttributeAccess()
                                        .getOptionsExpressionParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleExpression_in_ruleCompileAttribute4374);
                            lv_options_2_0 = ruleExpression();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getCompileAttributeRule());
                                }
                                set(current, "options", lv_options_2_0,
                                        "Expression");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleCompileAttribute4386);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getCompileAttributeAccess()
                                .getRightParenthesisKeyword_3());

                    }
                    otherlv_4 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleCompileAttribute4398);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess
                                .getCompileAttributeAccess()
                                .getFullStopKeyword_4());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleCompileAttribute"

    // $ANTLR start "entryRuleAbstractTypeAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1920:1:
    // entryRuleAbstractTypeAttribute returns [EObject current=null] :
    // iv_ruleAbstractTypeAttribute= ruleAbstractTypeAttribute EOF ;
    public final EObject entryRuleAbstractTypeAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractTypeAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1921:2:
            // (iv_ruleAbstractTypeAttribute= ruleAbstractTypeAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1922:2:
            // iv_ruleAbstractTypeAttribute= ruleAbstractTypeAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess
                            .getAbstractTypeAttributeRule());
                }
                pushFollow(FOLLOW_ruleAbstractTypeAttribute_in_entryRuleAbstractTypeAttribute4434);
                iv_ruleAbstractTypeAttribute = ruleAbstractTypeAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleAbstractTypeAttribute;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleAbstractTypeAttribute4444);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleAbstractTypeAttribute"

    // $ANTLR start "ruleAbstractTypeAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1929:1:
    // ruleAbstractTypeAttribute returns [EObject current=null] : ( ( ( ( (
    // 'spec' | 'callback' ) ) )=>this_SpecAttribute_0= ruleSpecAttribute ) | (
    // ( ( ( 'type' | 'opaque' ) ) )=>this_TypeAttribute_1= ruleTypeAttribute )
    // ) ;
    public final EObject ruleAbstractTypeAttribute()
            throws RecognitionException {
        EObject current = null;

        EObject this_SpecAttribute_0 = null;

        EObject this_TypeAttribute_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1932:28:
            // ( ( ( ( ( ( 'spec' | 'callback' ) ) )=>this_SpecAttribute_0=
            // ruleSpecAttribute ) | ( ( ( ( 'type' | 'opaque' ) )
            // )=>this_TypeAttribute_1= ruleTypeAttribute ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1933:1:
            // ( ( ( ( ( 'spec' | 'callback' ) ) )=>this_SpecAttribute_0=
            // ruleSpecAttribute ) | ( ( ( ( 'type' | 'opaque' ) )
            // )=>this_TypeAttribute_1= ruleTypeAttribute ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1933:1:
                // ( ( ( ( ( 'spec' | 'callback' ) ) )=>this_SpecAttribute_0=
                // ruleSpecAttribute ) | ( ( ( ( 'type' | 'opaque' ) )
                // )=>this_TypeAttribute_1= ruleTypeAttribute ) )
                int alt25 = 2;
                final int LA25_0 = input.LA(1);

                if (LA25_0 == 44 && synpred27_InternalErlang()) {
                    alt25 = 1;
                } else if (LA25_0 == 45 && synpred27_InternalErlang()) {
                    alt25 = 1;
                } else if (LA25_0 == 47 && synpred28_InternalErlang()) {
                    alt25 = 2;
                } else if (LA25_0 == 48 && synpred28_InternalErlang()) {
                    alt25 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 25, 0, input);

                    throw nvae;
                }
                switch (alt25) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1933:2:
                // ( ( ( ( 'spec' | 'callback' ) ) )=>this_SpecAttribute_0=
                // ruleSpecAttribute )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1933:2:
                    // ( ( ( ( 'spec' | 'callback' ) ) )=>this_SpecAttribute_0=
                    // ruleSpecAttribute )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1933:3:
                    // ( ( ( 'spec' | 'callback' ) ) )=>this_SpecAttribute_0=
                    // ruleSpecAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAbstractTypeAttributeAccess()
                                    .getSpecAttributeParserRuleCall_0());

                        }
                        pushFollow(FOLLOW_ruleSpecAttribute_in_ruleAbstractTypeAttribute4526);
                        this_SpecAttribute_0 = ruleSpecAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_SpecAttribute_0;
                            afterParserOrEnumRuleCall();

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1955:6:
                // ( ( ( ( 'type' | 'opaque' ) ) )=>this_TypeAttribute_1=
                // ruleTypeAttribute )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1955:6:
                    // ( ( ( ( 'type' | 'opaque' ) ) )=>this_TypeAttribute_1=
                    // ruleTypeAttribute )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1955:7:
                    // ( ( ( 'type' | 'opaque' ) ) )=>this_TypeAttribute_1=
                    // ruleTypeAttribute
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getAbstractTypeAttributeAccess()
                                    .getTypeAttributeParserRuleCall_1());

                        }
                        pushFollow(FOLLOW_ruleTypeAttribute_in_ruleAbstractTypeAttribute4589);
                        this_TypeAttribute_1 = ruleTypeAttribute();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_TypeAttribute_1;
                            afterParserOrEnumRuleCall();

                        }

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleAbstractTypeAttribute"

    // $ANTLR start "entryRuleSpecAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1984:1:
    // entryRuleSpecAttribute returns [EObject current=null] :
    // iv_ruleSpecAttribute= ruleSpecAttribute EOF ;
    public final EObject entryRuleSpecAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1985:2:
            // (iv_ruleSpecAttribute= ruleSpecAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1986:2:
            // iv_ruleSpecAttribute= ruleSpecAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getSpecAttributeRule());
                }
                pushFollow(FOLLOW_ruleSpecAttribute_in_entryRuleSpecAttribute4625);
                iv_ruleSpecAttribute = ruleSpecAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleSpecAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleSpecAttribute4635);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleSpecAttribute"

    // $ANTLR start "ruleSpecAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1993:1:
    // ruleSpecAttribute returns [EObject current=null] : ( ( ( ( ( 'spec' |
    // 'callback' ) ) )=> ( (lv_tag_0_1= 'spec' | lv_tag_0_2= 'callback' ) ) ) (
    // ( ( (lv_ref_1_0= ruleSpecFun ) ) ( (lv_signatures_2_0= ruleTypeSig ) )
    // (otherlv_3= ';' ( (lv_signatures_4_0= ruleTypeSig ) ) )* ) | (otherlv_5=
    // '(' ( (lv_ref_6_0= ruleSpecFun ) ) ( (lv_signatures_7_0= ruleTypeSig ) )
    // (otherlv_8= ';' ( (lv_signatures_9_0= ruleTypeSig ) ) )* otherlv_10= ')'
    // ) ) otherlv_11= '.' ) ;
    public final EObject ruleSpecAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_1 = null;
        Token lv_tag_0_2 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        Token otherlv_8 = null;
        Token otherlv_10 = null;
        Token otherlv_11 = null;
        EObject lv_ref_1_0 = null;

        EObject lv_signatures_2_0 = null;

        EObject lv_signatures_4_0 = null;

        EObject lv_ref_6_0 = null;

        EObject lv_signatures_7_0 = null;

        EObject lv_signatures_9_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1996:28:
            // ( ( ( ( ( ( 'spec' | 'callback' ) ) )=> ( (lv_tag_0_1= 'spec' |
            // lv_tag_0_2= 'callback' ) ) ) ( ( ( (lv_ref_1_0= ruleSpecFun ) ) (
            // (lv_signatures_2_0= ruleTypeSig ) ) (otherlv_3= ';' (
            // (lv_signatures_4_0= ruleTypeSig ) ) )* ) | (otherlv_5= '(' (
            // (lv_ref_6_0= ruleSpecFun ) ) ( (lv_signatures_7_0= ruleTypeSig )
            // ) (otherlv_8= ';' ( (lv_signatures_9_0= ruleTypeSig ) ) )*
            // otherlv_10= ')' ) ) otherlv_11= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1997:1:
            // ( ( ( ( ( 'spec' | 'callback' ) ) )=> ( (lv_tag_0_1= 'spec' |
            // lv_tag_0_2= 'callback' ) ) ) ( ( ( (lv_ref_1_0= ruleSpecFun ) ) (
            // (lv_signatures_2_0= ruleTypeSig ) ) (otherlv_3= ';' (
            // (lv_signatures_4_0= ruleTypeSig ) ) )* ) | (otherlv_5= '(' (
            // (lv_ref_6_0= ruleSpecFun ) ) ( (lv_signatures_7_0= ruleTypeSig )
            // ) (otherlv_8= ';' ( (lv_signatures_9_0= ruleTypeSig ) ) )*
            // otherlv_10= ')' ) ) otherlv_11= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1997:1:
                // ( ( ( ( ( 'spec' | 'callback' ) ) )=> ( (lv_tag_0_1= 'spec' |
                // lv_tag_0_2= 'callback' ) ) ) ( ( ( (lv_ref_1_0= ruleSpecFun )
                // ) ( (lv_signatures_2_0= ruleTypeSig ) ) (otherlv_3= ';' (
                // (lv_signatures_4_0= ruleTypeSig ) ) )* ) | (otherlv_5= '(' (
                // (lv_ref_6_0= ruleSpecFun ) ) ( (lv_signatures_7_0=
                // ruleTypeSig ) ) (otherlv_8= ';' ( (lv_signatures_9_0=
                // ruleTypeSig ) ) )* otherlv_10= ')' ) ) otherlv_11= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1997:2:
                // ( ( ( ( 'spec' | 'callback' ) ) )=> ( (lv_tag_0_1= 'spec' |
                // lv_tag_0_2= 'callback' ) ) ) ( ( ( (lv_ref_1_0= ruleSpecFun )
                // ) ( (lv_signatures_2_0= ruleTypeSig ) ) (otherlv_3= ';' (
                // (lv_signatures_4_0= ruleTypeSig ) ) )* ) | (otherlv_5= '(' (
                // (lv_ref_6_0= ruleSpecFun ) ) ( (lv_signatures_7_0=
                // ruleTypeSig ) ) (otherlv_8= ';' ( (lv_signatures_9_0=
                // ruleTypeSig ) ) )* otherlv_10= ')' ) ) otherlv_11= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1997:2:
                    // ( ( ( ( 'spec' | 'callback' ) ) )=> ( (lv_tag_0_1= 'spec'
                    // | lv_tag_0_2= 'callback' ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1997:3:
                    // ( ( ( 'spec' | 'callback' ) ) )=> ( (lv_tag_0_1= 'spec' |
                    // lv_tag_0_2= 'callback' ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2010:1:
                        // ( (lv_tag_0_1= 'spec' | lv_tag_0_2= 'callback' ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2011:1:
                        // (lv_tag_0_1= 'spec' | lv_tag_0_2= 'callback' )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2011:1:
                            // (lv_tag_0_1= 'spec' | lv_tag_0_2= 'callback' )
                            int alt26 = 2;
                            final int LA26_0 = input.LA(1);

                            if (LA26_0 == 44) {
                                alt26 = 1;
                            } else if (LA26_0 == 45) {
                                alt26 = 2;
                            } else {
                                if (state.backtracking > 0) {
                                    state.failed = true;
                                    return current;
                                }
                                final NoViableAltException nvae = new NoViableAltException(
                                        "", 26, 0, input);

                                throw nvae;
                            }
                            switch (alt26) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2012:3:
                            // lv_tag_0_1= 'spec'
                            {
                                lv_tag_0_1 = (Token) match(input, 44,
                                        FOLLOW_44_in_ruleSpecAttribute4714);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(lv_tag_0_1, grammarAccess
                                            .getSpecAttributeAccess()
                                            .getTagSpecKeyword_0_0_0());

                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElement(grammarAccess
                                                .getSpecAttributeRule());
                                    }
                                    setWithLastConsumed(current, "tag",
                                            lv_tag_0_1, null);

                                }

                            }
                                break;
                            case 2:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2024:8:
                            // lv_tag_0_2= 'callback'
                            {
                                lv_tag_0_2 = (Token) match(input, 45,
                                        FOLLOW_45_in_ruleSpecAttribute4743);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(lv_tag_0_2, grammarAccess
                                            .getSpecAttributeAccess()
                                            .getTagCallbackKeyword_0_0_1());

                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElement(grammarAccess
                                                .getSpecAttributeRule());
                                    }
                                    setWithLastConsumed(current, "tag",
                                            lv_tag_0_2, null);

                                }

                            }
                                break;

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2039:2:
                    // ( ( ( (lv_ref_1_0= ruleSpecFun ) ) ( (lv_signatures_2_0=
                    // ruleTypeSig ) ) (otherlv_3= ';' ( (lv_signatures_4_0=
                    // ruleTypeSig ) ) )* ) | (otherlv_5= '(' ( (lv_ref_6_0=
                    // ruleSpecFun ) ) ( (lv_signatures_7_0= ruleTypeSig ) )
                    // (otherlv_8= ';' ( (lv_signatures_9_0= ruleTypeSig ) ) )*
                    // otherlv_10= ')' ) )
                    int alt29 = 2;
                    final int LA29_0 = input.LA(1);

                    if (LA29_0 == RULE_ATOM || LA29_0 == RULE_VARIABLE
                            || LA29_0 == 20 || LA29_0 >= 24 && LA29_0 <= 34
                            || LA29_0 == 39 || LA29_0 >= 42 && LA29_0 <= 45
                            || LA29_0 >= 47 && LA29_0 <= 48 || LA29_0 >= 51
                            && LA29_0 <= 52 || LA29_0 == 102) {
                        alt29 = 1;
                    } else if (LA29_0 == 21) {
                        alt29 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 29, 0, input);

                        throw nvae;
                    }
                    switch (alt29) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2039:3:
                    // ( ( (lv_ref_1_0= ruleSpecFun ) ) ( (lv_signatures_2_0=
                    // ruleTypeSig ) ) (otherlv_3= ';' ( (lv_signatures_4_0=
                    // ruleTypeSig ) ) )* )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2039:3:
                        // ( ( (lv_ref_1_0= ruleSpecFun ) ) (
                        // (lv_signatures_2_0= ruleTypeSig ) ) (otherlv_3= ';' (
                        // (lv_signatures_4_0= ruleTypeSig ) ) )* )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2039:4:
                        // ( (lv_ref_1_0= ruleSpecFun ) ) ( (lv_signatures_2_0=
                        // ruleTypeSig ) ) (otherlv_3= ';' ( (lv_signatures_4_0=
                        // ruleTypeSig ) ) )*
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2039:4:
                            // ( (lv_ref_1_0= ruleSpecFun ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2040:1:
                            // (lv_ref_1_0= ruleSpecFun )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2040:1:
                                // (lv_ref_1_0= ruleSpecFun )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2041:3:
                                // lv_ref_1_0= ruleSpecFun
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getSpecAttributeAccess()
                                                .getRefSpecFunParserRuleCall_1_0_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleSpecFun_in_ruleSpecAttribute4782);
                                    lv_ref_1_0 = ruleSpecFun();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getSpecAttributeRule());
                                        }
                                        set(current, "ref", lv_ref_1_0,
                                                "SpecFun");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2057:2:
                            // ( (lv_signatures_2_0= ruleTypeSig ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2058:1:
                            // (lv_signatures_2_0= ruleTypeSig )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2058:1:
                                // (lv_signatures_2_0= ruleTypeSig )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2059:3:
                                // lv_signatures_2_0= ruleTypeSig
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getSpecAttributeAccess()
                                                .getSignaturesTypeSigParserRuleCall_1_0_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleTypeSig_in_ruleSpecAttribute4803);
                                    lv_signatures_2_0 = ruleTypeSig();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getSpecAttributeRule());
                                        }
                                        add(current, "signatures",
                                                lv_signatures_2_0, "TypeSig");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2075:2:
                            // (otherlv_3= ';' ( (lv_signatures_4_0= ruleTypeSig
                            // ) ) )*
                            loop27:
                            do {
                                int alt27 = 2;
                                final int LA27_0 = input.LA(1);

                                if (LA27_0 == 46) {
                                    alt27 = 1;
                                }

                                switch (alt27) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2075:4:
                                // otherlv_3= ';' ( (lv_signatures_4_0=
                                // ruleTypeSig ) )
                                {
                                    otherlv_3 = (Token) match(input, 46,
                                            FOLLOW_46_in_ruleSpecAttribute4816);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_3, grammarAccess
                                                .getSpecAttributeAccess()
                                                .getSemicolonKeyword_1_0_2_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2079:1:
                                    // ( (lv_signatures_4_0= ruleTypeSig ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2080:1:
                                    // (lv_signatures_4_0= ruleTypeSig )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2080:1:
                                        // (lv_signatures_4_0= ruleTypeSig )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2081:3:
                                        // lv_signatures_4_0= ruleTypeSig
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getSpecAttributeAccess()
                                                        .getSignaturesTypeSigParserRuleCall_1_0_2_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleTypeSig_in_ruleSpecAttribute4837);
                                            lv_signatures_4_0 = ruleTypeSig();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getSpecAttributeRule());
                                                }
                                                add(current, "signatures",
                                                        lv_signatures_4_0,
                                                        "TypeSig");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop27;
                                }
                            } while (true);

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2098:6:
                    // (otherlv_5= '(' ( (lv_ref_6_0= ruleSpecFun ) ) (
                    // (lv_signatures_7_0= ruleTypeSig ) ) (otherlv_8= ';' (
                    // (lv_signatures_9_0= ruleTypeSig ) ) )* otherlv_10= ')' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2098:6:
                        // (otherlv_5= '(' ( (lv_ref_6_0= ruleSpecFun ) ) (
                        // (lv_signatures_7_0= ruleTypeSig ) ) (otherlv_8= ';' (
                        // (lv_signatures_9_0= ruleTypeSig ) ) )* otherlv_10=
                        // ')' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2098:8:
                        // otherlv_5= '(' ( (lv_ref_6_0= ruleSpecFun ) ) (
                        // (lv_signatures_7_0= ruleTypeSig ) ) (otherlv_8= ';' (
                        // (lv_signatures_9_0= ruleTypeSig ) ) )* otherlv_10=
                        // ')'
                        {
                            otherlv_5 = (Token) match(input, 21,
                                    FOLLOW_21_in_ruleSpecAttribute4859);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_5, grammarAccess
                                        .getSpecAttributeAccess()
                                        .getLeftParenthesisKeyword_1_1_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2102:1:
                            // ( (lv_ref_6_0= ruleSpecFun ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2103:1:
                            // (lv_ref_6_0= ruleSpecFun )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2103:1:
                                // (lv_ref_6_0= ruleSpecFun )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2104:3:
                                // lv_ref_6_0= ruleSpecFun
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getSpecAttributeAccess()
                                                .getRefSpecFunParserRuleCall_1_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleSpecFun_in_ruleSpecAttribute4880);
                                    lv_ref_6_0 = ruleSpecFun();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getSpecAttributeRule());
                                        }
                                        set(current, "ref", lv_ref_6_0,
                                                "SpecFun");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2120:2:
                            // ( (lv_signatures_7_0= ruleTypeSig ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2121:1:
                            // (lv_signatures_7_0= ruleTypeSig )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2121:1:
                                // (lv_signatures_7_0= ruleTypeSig )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2122:3:
                                // lv_signatures_7_0= ruleTypeSig
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getSpecAttributeAccess()
                                                .getSignaturesTypeSigParserRuleCall_1_1_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleTypeSig_in_ruleSpecAttribute4901);
                                    lv_signatures_7_0 = ruleTypeSig();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getSpecAttributeRule());
                                        }
                                        add(current, "signatures",
                                                lv_signatures_7_0, "TypeSig");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2138:2:
                            // (otherlv_8= ';' ( (lv_signatures_9_0= ruleTypeSig
                            // ) ) )*
                            loop28:
                            do {
                                int alt28 = 2;
                                final int LA28_0 = input.LA(1);

                                if (LA28_0 == 46) {
                                    alt28 = 1;
                                }

                                switch (alt28) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2138:4:
                                // otherlv_8= ';' ( (lv_signatures_9_0=
                                // ruleTypeSig ) )
                                {
                                    otherlv_8 = (Token) match(input, 46,
                                            FOLLOW_46_in_ruleSpecAttribute4914);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_8, grammarAccess
                                                .getSpecAttributeAccess()
                                                .getSemicolonKeyword_1_1_3_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2142:1:
                                    // ( (lv_signatures_9_0= ruleTypeSig ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2143:1:
                                    // (lv_signatures_9_0= ruleTypeSig )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2143:1:
                                        // (lv_signatures_9_0= ruleTypeSig )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2144:3:
                                        // lv_signatures_9_0= ruleTypeSig
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getSpecAttributeAccess()
                                                        .getSignaturesTypeSigParserRuleCall_1_1_3_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleTypeSig_in_ruleSpecAttribute4935);
                                            lv_signatures_9_0 = ruleTypeSig();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getSpecAttributeRule());
                                                }
                                                add(current, "signatures",
                                                        lv_signatures_9_0,
                                                        "TypeSig");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop28;
                                }
                            } while (true);

                            otherlv_10 = (Token) match(input, 23,
                                    FOLLOW_23_in_ruleSpecAttribute4949);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_10, grammarAccess
                                        .getSpecAttributeAccess()
                                        .getRightParenthesisKeyword_1_1_4());

                            }

                        }

                    }
                        break;

                    }

                    otherlv_11 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleSpecAttribute4963);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_11, grammarAccess
                                .getSpecAttributeAccess()
                                .getFullStopKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleSpecAttribute"

    // $ANTLR start "entryRuleTypeAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2176:1:
    // entryRuleTypeAttribute returns [EObject current=null] :
    // iv_ruleTypeAttribute= ruleTypeAttribute EOF ;
    public final EObject entryRuleTypeAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2177:2:
            // (iv_ruleTypeAttribute= ruleTypeAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2178:2:
            // iv_ruleTypeAttribute= ruleTypeAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTypeAttributeRule());
                }
                pushFollow(FOLLOW_ruleTypeAttribute_in_entryRuleTypeAttribute4999);
                iv_ruleTypeAttribute = ruleTypeAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTypeAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTypeAttribute5009);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTypeAttribute"

    // $ANTLR start "ruleTypeAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2185:1:
    // ruleTypeAttribute returns [EObject current=null] : ( ( ( ( ( 'type' |
    // 'opaque' ) ) )=> ( (lv_tag_0_1= 'type' | lv_tag_0_2= 'opaque' ) ) ) ( ( (
    // (lv_name_1_0= ruleNAMEVAR ) ) otherlv_2= '(' ( ( (lv_args_3_0=
    // rulePatternExpression ) ) (otherlv_4= ',' ( (lv_args_5_0=
    // rulePatternExpression ) ) )* )? otherlv_6= ')' otherlv_7= '::' (
    // (lv_type_8_0= ruleTopType ) ) ) | (otherlv_9= '(' ( (lv_name_10_0=
    // ruleNAMEVAR ) ) otherlv_11= '(' ( ( (lv_args_12_0= rulePatternExpression
    // ) ) (otherlv_13= ',' ( (lv_args_14_0= rulePatternExpression ) ) )* )?
    // otherlv_15= ')' otherlv_16= '::' ( (lv_type_17_0= ruleTopType ) )
    // otherlv_18= ')' ) ) otherlv_19= '.' ) ;
    public final EObject ruleTypeAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_1 = null;
        Token lv_tag_0_2 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        Token otherlv_7 = null;
        Token otherlv_9 = null;
        Token otherlv_11 = null;
        Token otherlv_13 = null;
        Token otherlv_15 = null;
        Token otherlv_16 = null;
        Token otherlv_18 = null;
        Token otherlv_19 = null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_args_3_0 = null;

        EObject lv_args_5_0 = null;

        EObject lv_type_8_0 = null;

        AntlrDatatypeRuleToken lv_name_10_0 = null;

        EObject lv_args_12_0 = null;

        EObject lv_args_14_0 = null;

        EObject lv_type_17_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2188:28:
            // ( ( ( ( ( ( 'type' | 'opaque' ) ) )=> ( (lv_tag_0_1= 'type' |
            // lv_tag_0_2= 'opaque' ) ) ) ( ( ( (lv_name_1_0= ruleNAMEVAR ) )
            // otherlv_2= '(' ( ( (lv_args_3_0= rulePatternExpression ) )
            // (otherlv_4= ',' ( (lv_args_5_0= rulePatternExpression ) ) )* )?
            // otherlv_6= ')' otherlv_7= '::' ( (lv_type_8_0= ruleTopType ) ) )
            // | (otherlv_9= '(' ( (lv_name_10_0= ruleNAMEVAR ) ) otherlv_11=
            // '(' ( ( (lv_args_12_0= rulePatternExpression ) ) (otherlv_13= ','
            // ( (lv_args_14_0= rulePatternExpression ) ) )* )? otherlv_15= ')'
            // otherlv_16= '::' ( (lv_type_17_0= ruleTopType ) ) otherlv_18= ')'
            // ) ) otherlv_19= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2189:1:
            // ( ( ( ( ( 'type' | 'opaque' ) ) )=> ( (lv_tag_0_1= 'type' |
            // lv_tag_0_2= 'opaque' ) ) ) ( ( ( (lv_name_1_0= ruleNAMEVAR ) )
            // otherlv_2= '(' ( ( (lv_args_3_0= rulePatternExpression ) )
            // (otherlv_4= ',' ( (lv_args_5_0= rulePatternExpression ) ) )* )?
            // otherlv_6= ')' otherlv_7= '::' ( (lv_type_8_0= ruleTopType ) ) )
            // | (otherlv_9= '(' ( (lv_name_10_0= ruleNAMEVAR ) ) otherlv_11=
            // '(' ( ( (lv_args_12_0= rulePatternExpression ) ) (otherlv_13= ','
            // ( (lv_args_14_0= rulePatternExpression ) ) )* )? otherlv_15= ')'
            // otherlv_16= '::' ( (lv_type_17_0= ruleTopType ) ) otherlv_18= ')'
            // ) ) otherlv_19= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2189:1:
                // ( ( ( ( ( 'type' | 'opaque' ) ) )=> ( (lv_tag_0_1= 'type' |
                // lv_tag_0_2= 'opaque' ) ) ) ( ( ( (lv_name_1_0= ruleNAMEVAR )
                // ) otherlv_2= '(' ( ( (lv_args_3_0= rulePatternExpression ) )
                // (otherlv_4= ',' ( (lv_args_5_0= rulePatternExpression ) ) )*
                // )? otherlv_6= ')' otherlv_7= '::' ( (lv_type_8_0= ruleTopType
                // ) ) ) | (otherlv_9= '(' ( (lv_name_10_0= ruleNAMEVAR ) )
                // otherlv_11= '(' ( ( (lv_args_12_0= rulePatternExpression ) )
                // (otherlv_13= ',' ( (lv_args_14_0= rulePatternExpression ) )
                // )* )? otherlv_15= ')' otherlv_16= '::' ( (lv_type_17_0=
                // ruleTopType ) ) otherlv_18= ')' ) ) otherlv_19= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2189:2:
                // ( ( ( ( 'type' | 'opaque' ) ) )=> ( (lv_tag_0_1= 'type' |
                // lv_tag_0_2= 'opaque' ) ) ) ( ( ( (lv_name_1_0= ruleNAMEVAR )
                // ) otherlv_2= '(' ( ( (lv_args_3_0= rulePatternExpression ) )
                // (otherlv_4= ',' ( (lv_args_5_0= rulePatternExpression ) ) )*
                // )? otherlv_6= ')' otherlv_7= '::' ( (lv_type_8_0= ruleTopType
                // ) ) ) | (otherlv_9= '(' ( (lv_name_10_0= ruleNAMEVAR ) )
                // otherlv_11= '(' ( ( (lv_args_12_0= rulePatternExpression ) )
                // (otherlv_13= ',' ( (lv_args_14_0= rulePatternExpression ) )
                // )* )? otherlv_15= ')' otherlv_16= '::' ( (lv_type_17_0=
                // ruleTopType ) ) otherlv_18= ')' ) ) otherlv_19= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2189:2:
                    // ( ( ( ( 'type' | 'opaque' ) ) )=> ( (lv_tag_0_1= 'type' |
                    // lv_tag_0_2= 'opaque' ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2189:3:
                    // ( ( ( 'type' | 'opaque' ) ) )=> ( (lv_tag_0_1= 'type' |
                    // lv_tag_0_2= 'opaque' ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2202:1:
                        // ( (lv_tag_0_1= 'type' | lv_tag_0_2= 'opaque' ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2203:1:
                        // (lv_tag_0_1= 'type' | lv_tag_0_2= 'opaque' )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2203:1:
                            // (lv_tag_0_1= 'type' | lv_tag_0_2= 'opaque' )
                            int alt30 = 2;
                            final int LA30_0 = input.LA(1);

                            if (LA30_0 == 47) {
                                alt30 = 1;
                            } else if (LA30_0 == 48) {
                                alt30 = 2;
                            } else {
                                if (state.backtracking > 0) {
                                    state.failed = true;
                                    return current;
                                }
                                final NoViableAltException nvae = new NoViableAltException(
                                        "", 30, 0, input);

                                throw nvae;
                            }
                            switch (alt30) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2204:3:
                            // lv_tag_0_1= 'type'
                            {
                                lv_tag_0_1 = (Token) match(input, 47,
                                        FOLLOW_47_in_ruleTypeAttribute5088);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(lv_tag_0_1, grammarAccess
                                            .getTypeAttributeAccess()
                                            .getTagTypeKeyword_0_0_0());

                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElement(grammarAccess
                                                .getTypeAttributeRule());
                                    }
                                    setWithLastConsumed(current, "tag",
                                            lv_tag_0_1, null);

                                }

                            }
                                break;
                            case 2:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2216:8:
                            // lv_tag_0_2= 'opaque'
                            {
                                lv_tag_0_2 = (Token) match(input, 48,
                                        FOLLOW_48_in_ruleTypeAttribute5117);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(lv_tag_0_2, grammarAccess
                                            .getTypeAttributeAccess()
                                            .getTagOpaqueKeyword_0_0_1());

                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElement(grammarAccess
                                                .getTypeAttributeRule());
                                    }
                                    setWithLastConsumed(current, "tag",
                                            lv_tag_0_2, null);

                                }

                            }
                                break;

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2231:2:
                    // ( ( ( (lv_name_1_0= ruleNAMEVAR ) ) otherlv_2= '(' ( (
                    // (lv_args_3_0= rulePatternExpression ) ) (otherlv_4= ',' (
                    // (lv_args_5_0= rulePatternExpression ) ) )* )? otherlv_6=
                    // ')' otherlv_7= '::' ( (lv_type_8_0= ruleTopType ) ) ) |
                    // (otherlv_9= '(' ( (lv_name_10_0= ruleNAMEVAR ) )
                    // otherlv_11= '(' ( ( (lv_args_12_0= rulePatternExpression
                    // ) ) (otherlv_13= ',' ( (lv_args_14_0=
                    // rulePatternExpression ) ) )* )? otherlv_15= ')'
                    // otherlv_16= '::' ( (lv_type_17_0= ruleTopType ) )
                    // otherlv_18= ')' ) )
                    int alt35 = 2;
                    final int LA35_0 = input.LA(1);

                    if (LA35_0 == RULE_ATOM || LA35_0 == RULE_VARIABLE
                            || LA35_0 == 20 || LA35_0 >= 24 && LA35_0 <= 34
                            || LA35_0 == 39 || LA35_0 >= 42 && LA35_0 <= 45
                            || LA35_0 >= 47 && LA35_0 <= 48 || LA35_0 == 52) {
                        alt35 = 1;
                    } else if (LA35_0 == 21) {
                        alt35 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 35, 0, input);

                        throw nvae;
                    }
                    switch (alt35) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2231:3:
                    // ( ( (lv_name_1_0= ruleNAMEVAR ) ) otherlv_2= '(' ( (
                    // (lv_args_3_0= rulePatternExpression ) ) (otherlv_4= ',' (
                    // (lv_args_5_0= rulePatternExpression ) ) )* )? otherlv_6=
                    // ')' otherlv_7= '::' ( (lv_type_8_0= ruleTopType ) ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2231:3:
                        // ( ( (lv_name_1_0= ruleNAMEVAR ) ) otherlv_2= '(' ( (
                        // (lv_args_3_0= rulePatternExpression ) ) (otherlv_4=
                        // ',' ( (lv_args_5_0= rulePatternExpression ) ) )* )?
                        // otherlv_6= ')' otherlv_7= '::' ( (lv_type_8_0=
                        // ruleTopType ) ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2231:4:
                        // ( (lv_name_1_0= ruleNAMEVAR ) ) otherlv_2= '(' ( (
                        // (lv_args_3_0= rulePatternExpression ) ) (otherlv_4=
                        // ',' ( (lv_args_5_0= rulePatternExpression ) ) )* )?
                        // otherlv_6= ')' otherlv_7= '::' ( (lv_type_8_0=
                        // ruleTopType ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2231:4:
                            // ( (lv_name_1_0= ruleNAMEVAR ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2232:1:
                            // (lv_name_1_0= ruleNAMEVAR )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2232:1:
                                // (lv_name_1_0= ruleNAMEVAR )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2233:3:
                                // lv_name_1_0= ruleNAMEVAR
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeAttributeAccess()
                                                .getNameNAMEVARParserRuleCall_1_0_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleNAMEVAR_in_ruleTypeAttribute5156);
                                    lv_name_1_0 = ruleNAMEVAR();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeAttributeRule());
                                        }
                                        set(current, "name", lv_name_1_0,
                                                "NAMEVAR");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            otherlv_2 = (Token) match(input, 21,
                                    FOLLOW_21_in_ruleTypeAttribute5168);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_2, grammarAccess
                                        .getTypeAttributeAccess()
                                        .getLeftParenthesisKeyword_1_0_1());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2253:1:
                            // ( ( (lv_args_3_0= rulePatternExpression ) )
                            // (otherlv_4= ',' ( (lv_args_5_0=
                            // rulePatternExpression ) ) )* )?
                            int alt32 = 2;
                            final int LA32_0 = input.LA(1);

                            if (LA32_0 >= RULE_STRING
                                    && LA32_0 <= RULE_BASED_INT || LA32_0 == 20
                                    || LA32_0 >= 24 && LA32_0 <= 35
                                    || LA32_0 >= 39 && LA32_0 <= 40
                                    || LA32_0 >= 42 && LA32_0 <= 45
                                    || LA32_0 >= 47 && LA32_0 <= 48
                                    || LA32_0 >= 51 && LA32_0 <= 52
                                    || LA32_0 == 56 || LA32_0 == 73
                                    || LA32_0 == 102) {
                                alt32 = 1;
                            }
                            switch (alt32) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2253:2:
                            // ( (lv_args_3_0= rulePatternExpression ) )
                            // (otherlv_4= ',' ( (lv_args_5_0=
                            // rulePatternExpression ) ) )*
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2253:2:
                                // ( (lv_args_3_0= rulePatternExpression ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2254:1:
                                // (lv_args_3_0= rulePatternExpression )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2254:1:
                                    // (lv_args_3_0= rulePatternExpression )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2255:3:
                                    // lv_args_3_0= rulePatternExpression
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getTypeAttributeAccess()
                                                    .getArgsPatternExpressionParserRuleCall_1_0_2_0_0());

                                        }
                                        pushFollow(FOLLOW_rulePatternExpression_in_ruleTypeAttribute5190);
                                        lv_args_3_0 = rulePatternExpression();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getTypeAttributeRule());
                                            }
                                            add(current, "args", lv_args_3_0,
                                                    "PatternExpression");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2271:2:
                                // (otherlv_4= ',' ( (lv_args_5_0=
                                // rulePatternExpression ) ) )*
                                loop31:
                                do {
                                    int alt31 = 2;
                                    final int LA31_0 = input.LA(1);

                                    if (LA31_0 == 22) {
                                        alt31 = 1;
                                    }

                                    switch (alt31) {
                                    case 1:
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2271:4:
                                    // otherlv_4= ',' ( (lv_args_5_0=
                                    // rulePatternExpression ) )
                                    {
                                        otherlv_4 = (Token) match(input, 22,
                                                FOLLOW_22_in_ruleTypeAttribute5203);
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            newLeafNode(
                                                    otherlv_4,
                                                    grammarAccess
                                                            .getTypeAttributeAccess()
                                                            .getCommaKeyword_1_0_2_1_0());

                                        }
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2275:1:
                                        // ( (lv_args_5_0= rulePatternExpression
                                        // ) )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2276:1:
                                        // (lv_args_5_0= rulePatternExpression )
                                        {
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2276:1:
                                            // (lv_args_5_0=
                                            // rulePatternExpression )
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2277:3:
                                            // lv_args_5_0=
                                            // rulePatternExpression
                                            {
                                                if (state.backtracking == 0) {

                                                    newCompositeNode(grammarAccess
                                                            .getTypeAttributeAccess()
                                                            .getArgsPatternExpressionParserRuleCall_1_0_2_1_1_0());

                                                }
                                                pushFollow(FOLLOW_rulePatternExpression_in_ruleTypeAttribute5224);
                                                lv_args_5_0 = rulePatternExpression();

                                                state._fsp--;
                                                if (state.failed) {
                                                    return current;
                                                }
                                                if (state.backtracking == 0) {

                                                    if (current == null) {
                                                        current = createModelElementForParent(grammarAccess
                                                                .getTypeAttributeRule());
                                                    }
                                                    add(current, "args",
                                                            lv_args_5_0,
                                                            "PatternExpression");
                                                    afterParserOrEnumRuleCall();

                                                }

                                            }

                                        }

                                    }
                                        break;

                                    default:
                                        break loop31;
                                    }
                                } while (true);

                            }
                                break;

                            }

                            otherlv_6 = (Token) match(input, 23,
                                    FOLLOW_23_in_ruleTypeAttribute5240);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_6, grammarAccess
                                        .getTypeAttributeAccess()
                                        .getRightParenthesisKeyword_1_0_3());

                            }
                            otherlv_7 = (Token) match(input, 38,
                                    FOLLOW_38_in_ruleTypeAttribute5252);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_7, grammarAccess
                                        .getTypeAttributeAccess()
                                        .getColonColonKeyword_1_0_4());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2301:1:
                            // ( (lv_type_8_0= ruleTopType ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2302:1:
                            // (lv_type_8_0= ruleTopType )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2302:1:
                                // (lv_type_8_0= ruleTopType )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2303:3:
                                // lv_type_8_0= ruleTopType
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeAttributeAccess()
                                                .getTypeTopTypeParserRuleCall_1_0_5_0());

                                    }
                                    pushFollow(FOLLOW_ruleTopType_in_ruleTypeAttribute5273);
                                    lv_type_8_0 = ruleTopType();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeAttributeRule());
                                        }
                                        set(current, "type", lv_type_8_0,
                                                "TopType");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2320:6:
                    // (otherlv_9= '(' ( (lv_name_10_0= ruleNAMEVAR ) )
                    // otherlv_11= '(' ( ( (lv_args_12_0= rulePatternExpression
                    // ) ) (otherlv_13= ',' ( (lv_args_14_0=
                    // rulePatternExpression ) ) )* )? otherlv_15= ')'
                    // otherlv_16= '::' ( (lv_type_17_0= ruleTopType ) )
                    // otherlv_18= ')' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2320:6:
                        // (otherlv_9= '(' ( (lv_name_10_0= ruleNAMEVAR ) )
                        // otherlv_11= '(' ( ( (lv_args_12_0=
                        // rulePatternExpression ) ) (otherlv_13= ',' (
                        // (lv_args_14_0= rulePatternExpression ) ) )* )?
                        // otherlv_15= ')' otherlv_16= '::' ( (lv_type_17_0=
                        // ruleTopType ) ) otherlv_18= ')' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2320:8:
                        // otherlv_9= '(' ( (lv_name_10_0= ruleNAMEVAR ) )
                        // otherlv_11= '(' ( ( (lv_args_12_0=
                        // rulePatternExpression ) ) (otherlv_13= ',' (
                        // (lv_args_14_0= rulePatternExpression ) ) )* )?
                        // otherlv_15= ')' otherlv_16= '::' ( (lv_type_17_0=
                        // ruleTopType ) ) otherlv_18= ')'
                        {
                            otherlv_9 = (Token) match(input, 21,
                                    FOLLOW_21_in_ruleTypeAttribute5293);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_9, grammarAccess
                                        .getTypeAttributeAccess()
                                        .getLeftParenthesisKeyword_1_1_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2324:1:
                            // ( (lv_name_10_0= ruleNAMEVAR ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2325:1:
                            // (lv_name_10_0= ruleNAMEVAR )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2325:1:
                                // (lv_name_10_0= ruleNAMEVAR )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2326:3:
                                // lv_name_10_0= ruleNAMEVAR
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeAttributeAccess()
                                                .getNameNAMEVARParserRuleCall_1_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleNAMEVAR_in_ruleTypeAttribute5314);
                                    lv_name_10_0 = ruleNAMEVAR();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeAttributeRule());
                                        }
                                        set(current, "name", lv_name_10_0,
                                                "NAMEVAR");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            otherlv_11 = (Token) match(input, 21,
                                    FOLLOW_21_in_ruleTypeAttribute5326);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_11, grammarAccess
                                        .getTypeAttributeAccess()
                                        .getLeftParenthesisKeyword_1_1_2());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2346:1:
                            // ( ( (lv_args_12_0= rulePatternExpression ) )
                            // (otherlv_13= ',' ( (lv_args_14_0=
                            // rulePatternExpression ) ) )* )?
                            int alt34 = 2;
                            final int LA34_0 = input.LA(1);

                            if (LA34_0 >= RULE_STRING
                                    && LA34_0 <= RULE_BASED_INT || LA34_0 == 20
                                    || LA34_0 >= 24 && LA34_0 <= 35
                                    || LA34_0 >= 39 && LA34_0 <= 40
                                    || LA34_0 >= 42 && LA34_0 <= 45
                                    || LA34_0 >= 47 && LA34_0 <= 48
                                    || LA34_0 >= 51 && LA34_0 <= 52
                                    || LA34_0 == 56 || LA34_0 == 73
                                    || LA34_0 == 102) {
                                alt34 = 1;
                            }
                            switch (alt34) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2346:2:
                            // ( (lv_args_12_0= rulePatternExpression ) )
                            // (otherlv_13= ',' ( (lv_args_14_0=
                            // rulePatternExpression ) ) )*
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2346:2:
                                // ( (lv_args_12_0= rulePatternExpression ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2347:1:
                                // (lv_args_12_0= rulePatternExpression )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2347:1:
                                    // (lv_args_12_0= rulePatternExpression )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2348:3:
                                    // lv_args_12_0= rulePatternExpression
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getTypeAttributeAccess()
                                                    .getArgsPatternExpressionParserRuleCall_1_1_3_0_0());

                                        }
                                        pushFollow(FOLLOW_rulePatternExpression_in_ruleTypeAttribute5348);
                                        lv_args_12_0 = rulePatternExpression();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getTypeAttributeRule());
                                            }
                                            add(current, "args", lv_args_12_0,
                                                    "PatternExpression");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2364:2:
                                // (otherlv_13= ',' ( (lv_args_14_0=
                                // rulePatternExpression ) ) )*
                                loop33:
                                do {
                                    int alt33 = 2;
                                    final int LA33_0 = input.LA(1);

                                    if (LA33_0 == 22) {
                                        alt33 = 1;
                                    }

                                    switch (alt33) {
                                    case 1:
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2364:4:
                                    // otherlv_13= ',' ( (lv_args_14_0=
                                    // rulePatternExpression ) )
                                    {
                                        otherlv_13 = (Token) match(input, 22,
                                                FOLLOW_22_in_ruleTypeAttribute5361);
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            newLeafNode(
                                                    otherlv_13,
                                                    grammarAccess
                                                            .getTypeAttributeAccess()
                                                            .getCommaKeyword_1_1_3_1_0());

                                        }
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2368:1:
                                        // ( (lv_args_14_0=
                                        // rulePatternExpression ) )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2369:1:
                                        // (lv_args_14_0= rulePatternExpression
                                        // )
                                        {
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2369:1:
                                            // (lv_args_14_0=
                                            // rulePatternExpression )
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2370:3:
                                            // lv_args_14_0=
                                            // rulePatternExpression
                                            {
                                                if (state.backtracking == 0) {

                                                    newCompositeNode(grammarAccess
                                                            .getTypeAttributeAccess()
                                                            .getArgsPatternExpressionParserRuleCall_1_1_3_1_1_0());

                                                }
                                                pushFollow(FOLLOW_rulePatternExpression_in_ruleTypeAttribute5382);
                                                lv_args_14_0 = rulePatternExpression();

                                                state._fsp--;
                                                if (state.failed) {
                                                    return current;
                                                }
                                                if (state.backtracking == 0) {

                                                    if (current == null) {
                                                        current = createModelElementForParent(grammarAccess
                                                                .getTypeAttributeRule());
                                                    }
                                                    add(current, "args",
                                                            lv_args_14_0,
                                                            "PatternExpression");
                                                    afterParserOrEnumRuleCall();

                                                }

                                            }

                                        }

                                    }
                                        break;

                                    default:
                                        break loop33;
                                    }
                                } while (true);

                            }
                                break;

                            }

                            otherlv_15 = (Token) match(input, 23,
                                    FOLLOW_23_in_ruleTypeAttribute5398);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_15, grammarAccess
                                        .getTypeAttributeAccess()
                                        .getRightParenthesisKeyword_1_1_4());

                            }
                            otherlv_16 = (Token) match(input, 38,
                                    FOLLOW_38_in_ruleTypeAttribute5410);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_16, grammarAccess
                                        .getTypeAttributeAccess()
                                        .getColonColonKeyword_1_1_5());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2394:1:
                            // ( (lv_type_17_0= ruleTopType ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2395:1:
                            // (lv_type_17_0= ruleTopType )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2395:1:
                                // (lv_type_17_0= ruleTopType )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2396:3:
                                // lv_type_17_0= ruleTopType
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeAttributeAccess()
                                                .getTypeTopTypeParserRuleCall_1_1_6_0());

                                    }
                                    pushFollow(FOLLOW_ruleTopType_in_ruleTypeAttribute5431);
                                    lv_type_17_0 = ruleTopType();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeAttributeRule());
                                        }
                                        set(current, "type", lv_type_17_0,
                                                "TopType");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            otherlv_18 = (Token) match(input, 23,
                                    FOLLOW_23_in_ruleTypeAttribute5443);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_18, grammarAccess
                                        .getTypeAttributeAccess()
                                        .getRightParenthesisKeyword_1_1_7());

                            }

                        }

                    }
                        break;

                    }

                    otherlv_19 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleTypeAttribute5457);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_19, grammarAccess
                                .getTypeAttributeAccess()
                                .getFullStopKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTypeAttribute"

    // $ANTLR start "entryRuleCustomAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2428:1:
    // entryRuleCustomAttribute returns [EObject current=null] :
    // iv_ruleCustomAttribute= ruleCustomAttribute EOF ;
    public final EObject entryRuleCustomAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCustomAttribute = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2429:2:
            // (iv_ruleCustomAttribute= ruleCustomAttribute EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2430:2:
            // iv_ruleCustomAttribute= ruleCustomAttribute EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getCustomAttributeRule());
                }
                pushFollow(FOLLOW_ruleCustomAttribute_in_entryRuleCustomAttribute5493);
                iv_ruleCustomAttribute = ruleCustomAttribute();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleCustomAttribute;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleCustomAttribute5503);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleCustomAttribute"

    // $ANTLR start "ruleCustomAttribute"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2437:1:
    // ruleCustomAttribute returns [EObject current=null] : ( ( (lv_tag_0_0=
    // RULE_ATOM ) ) otherlv_1= '(' ( ( (lv_value_2_0= ruleExpression ) )
    // (otherlv_3= ',' ( (lv_value_4_0= ruleExpression ) ) )* )? otherlv_5= ')'
    // otherlv_6= '.' ) ;
    public final EObject ruleCustomAttribute() throws RecognitionException {
        EObject current = null;

        Token lv_tag_0_0 = null;
        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        Token otherlv_6 = null;
        EObject lv_value_2_0 = null;

        EObject lv_value_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2440:28:
            // ( ( ( (lv_tag_0_0= RULE_ATOM ) ) otherlv_1= '(' ( (
            // (lv_value_2_0= ruleExpression ) ) (otherlv_3= ',' (
            // (lv_value_4_0= ruleExpression ) ) )* )? otherlv_5= ')' otherlv_6=
            // '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2441:1:
            // ( ( (lv_tag_0_0= RULE_ATOM ) ) otherlv_1= '(' ( ( (lv_value_2_0=
            // ruleExpression ) ) (otherlv_3= ',' ( (lv_value_4_0=
            // ruleExpression ) ) )* )? otherlv_5= ')' otherlv_6= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2441:1:
                // ( ( (lv_tag_0_0= RULE_ATOM ) ) otherlv_1= '(' ( (
                // (lv_value_2_0= ruleExpression ) ) (otherlv_3= ',' (
                // (lv_value_4_0= ruleExpression ) ) )* )? otherlv_5= ')'
                // otherlv_6= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2441:2:
                // ( (lv_tag_0_0= RULE_ATOM ) ) otherlv_1= '(' ( (
                // (lv_value_2_0= ruleExpression ) ) (otherlv_3= ',' (
                // (lv_value_4_0= ruleExpression ) ) )* )? otherlv_5= ')'
                // otherlv_6= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2441:2:
                    // ( (lv_tag_0_0= RULE_ATOM ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2442:1:
                    // (lv_tag_0_0= RULE_ATOM )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2442:1:
                        // (lv_tag_0_0= RULE_ATOM )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2443:3:
                        // lv_tag_0_0= RULE_ATOM
                        {
                            lv_tag_0_0 = (Token) match(input, RULE_ATOM,
                                    FOLLOW_RULE_ATOM_in_ruleCustomAttribute5545);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_tag_0_0, grammarAccess
                                        .getCustomAttributeAccess()
                                        .getTagATOMTerminalRuleCall_0_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getCustomAttributeRule());
                                }
                                setWithLastConsumed(current, "tag", lv_tag_0_0,
                                        "ATOM");

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleCustomAttribute5562);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getCustomAttributeAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2463:1:
                    // ( ( (lv_value_2_0= ruleExpression ) ) (otherlv_3= ',' (
                    // (lv_value_4_0= ruleExpression ) ) )* )?
                    int alt37 = 2;
                    final int LA37_0 = input.LA(1);

                    if (LA37_0 >= RULE_STRING && LA37_0 <= RULE_BASED_INT
                            || LA37_0 >= 19 && LA37_0 <= 21 || LA37_0 >= 24
                            && LA37_0 <= 35 || LA37_0 >= 39 && LA37_0 <= 40
                            || LA37_0 >= 42 && LA37_0 <= 45 || LA37_0 >= 47
                            && LA37_0 <= 48 || LA37_0 >= 51 && LA37_0 <= 53
                            || LA37_0 == 56 || LA37_0 == 58 || LA37_0 >= 60
                            && LA37_0 <= 64 || LA37_0 == 66 || LA37_0 == 68
                            || LA37_0 == 70 || LA37_0 == 73 || LA37_0 == 77
                            || LA37_0 >= 89 && LA37_0 <= 90 || LA37_0 == 102) {
                        alt37 = 1;
                    }
                    switch (alt37) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2463:2:
                    // ( (lv_value_2_0= ruleExpression ) ) (otherlv_3= ',' (
                    // (lv_value_4_0= ruleExpression ) ) )*
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2463:2:
                        // ( (lv_value_2_0= ruleExpression ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2464:1:
                        // (lv_value_2_0= ruleExpression )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2464:1:
                            // (lv_value_2_0= ruleExpression )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2465:3:
                            // lv_value_2_0= ruleExpression
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getCustomAttributeAccess()
                                            .getValueExpressionParserRuleCall_2_0_0());

                                }
                                pushFollow(FOLLOW_ruleExpression_in_ruleCustomAttribute5584);
                                lv_value_2_0 = ruleExpression();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getCustomAttributeRule());
                                    }
                                    add(current, "value", lv_value_2_0,
                                            "Expression");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2481:2:
                        // (otherlv_3= ',' ( (lv_value_4_0= ruleExpression ) )
                        // )*
                        loop36:
                        do {
                            int alt36 = 2;
                            final int LA36_0 = input.LA(1);

                            if (LA36_0 == 22) {
                                alt36 = 1;
                            }

                            switch (alt36) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2481:4:
                            // otherlv_3= ',' ( (lv_value_4_0= ruleExpression )
                            // )
                            {
                                otherlv_3 = (Token) match(input, 22,
                                        FOLLOW_22_in_ruleCustomAttribute5597);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_3, grammarAccess
                                            .getCustomAttributeAccess()
                                            .getCommaKeyword_2_1_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2485:1:
                                // ( (lv_value_4_0= ruleExpression ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2486:1:
                                // (lv_value_4_0= ruleExpression )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2486:1:
                                    // (lv_value_4_0= ruleExpression )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2487:3:
                                    // lv_value_4_0= ruleExpression
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getCustomAttributeAccess()
                                                    .getValueExpressionParserRuleCall_2_1_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleExpression_in_ruleCustomAttribute5618);
                                        lv_value_4_0 = ruleExpression();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getCustomAttributeRule());
                                            }
                                            add(current, "value", lv_value_4_0,
                                                    "Expression");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                break loop36;
                            }
                        } while (true);

                    }
                        break;

                    }

                    otherlv_5 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleCustomAttribute5634);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_5, grammarAccess
                                .getCustomAttributeAccess()
                                .getRightParenthesisKeyword_3());

                    }
                    otherlv_6 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleCustomAttribute5646);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_6, grammarAccess
                                .getCustomAttributeAccess()
                                .getFullStopKeyword_4());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleCustomAttribute"

    // $ANTLR start "entryRuleFunction"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2519:1:
    // entryRuleFunction returns [EObject current=null] : iv_ruleFunction=
    // ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2520:2:
            // (iv_ruleFunction= ruleFunction EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2521:2:
            // iv_ruleFunction= ruleFunction EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFunctionRule());
                }
                pushFollow(FOLLOW_ruleFunction_in_entryRuleFunction5682);
                iv_ruleFunction = ruleFunction();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFunction;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFunction5692);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFunction"

    // $ANTLR start "ruleFunction"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2528:1:
    // ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= ruleNAME
    // ) ) ( (lv_clauses_1_0= ruleFunctionClause ) ) (otherlv_2= ';' (
    // (lv_clauses_3_0= ruleFunctionClause ) ) )* otherlv_4= '.' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2 = null;
        Token otherlv_4 = null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_clauses_1_0 = null;

        EObject lv_clauses_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2531:28:
            // ( ( ( (lv_name_0_0= ruleNAME ) ) ( (lv_clauses_1_0=
            // ruleFunctionClause ) ) (otherlv_2= ';' ( (lv_clauses_3_0=
            // ruleFunctionClause ) ) )* otherlv_4= '.' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2532:1:
            // ( ( (lv_name_0_0= ruleNAME ) ) ( (lv_clauses_1_0=
            // ruleFunctionClause ) ) (otherlv_2= ';' ( (lv_clauses_3_0=
            // ruleFunctionClause ) ) )* otherlv_4= '.' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2532:1:
                // ( ( (lv_name_0_0= ruleNAME ) ) ( (lv_clauses_1_0=
                // ruleFunctionClause ) ) (otherlv_2= ';' ( (lv_clauses_3_0=
                // ruleFunctionClause ) ) )* otherlv_4= '.' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2532:2:
                // ( (lv_name_0_0= ruleNAME ) ) ( (lv_clauses_1_0=
                // ruleFunctionClause ) ) (otherlv_2= ';' ( (lv_clauses_3_0=
                // ruleFunctionClause ) ) )* otherlv_4= '.'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2532:2:
                    // ( (lv_name_0_0= ruleNAME ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2533:1:
                    // (lv_name_0_0= ruleNAME )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2533:1:
                        // (lv_name_0_0= ruleNAME )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2534:3:
                        // lv_name_0_0= ruleNAME
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunctionAccess()
                                        .getNameNAMEParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleNAME_in_ruleFunction5738);
                            lv_name_0_0 = ruleNAME();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFunctionRule());
                                }
                                set(current, "name", lv_name_0_0, "NAME");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2550:2:
                    // ( (lv_clauses_1_0= ruleFunctionClause ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2551:1:
                    // (lv_clauses_1_0= ruleFunctionClause )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2551:1:
                        // (lv_clauses_1_0= ruleFunctionClause )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2552:3:
                        // lv_clauses_1_0= ruleFunctionClause
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunctionAccess()
                                        .getClausesFunctionClauseParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleFunctionClause_in_ruleFunction5759);
                            lv_clauses_1_0 = ruleFunctionClause();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFunctionRule());
                                }
                                add(current, "clauses", lv_clauses_1_0,
                                        "FunctionClause");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2568:2:
                    // (otherlv_2= ';' ( (lv_clauses_3_0= ruleFunctionClause ) )
                    // )*
                    loop38:
                    do {
                        int alt38 = 2;
                        final int LA38_0 = input.LA(1);

                        if (LA38_0 == 46) {
                            alt38 = 1;
                        }

                        switch (alt38) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2568:4:
                        // otherlv_2= ';' ( (lv_clauses_3_0= ruleFunctionClause
                        // ) )
                        {
                            otherlv_2 = (Token) match(input, 46,
                                    FOLLOW_46_in_ruleFunction5772);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_2, grammarAccess
                                        .getFunctionAccess()
                                        .getSemicolonKeyword_2_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2572:1:
                            // ( (lv_clauses_3_0= ruleFunctionClause ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2573:1:
                            // (lv_clauses_3_0= ruleFunctionClause )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2573:1:
                                // (lv_clauses_3_0= ruleFunctionClause )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2574:3:
                                // lv_clauses_3_0= ruleFunctionClause
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getFunctionAccess()
                                                .getClausesFunctionClauseParserRuleCall_2_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleFunctionClause_in_ruleFunction5793);
                                    lv_clauses_3_0 = ruleFunctionClause();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getFunctionRule());
                                        }
                                        add(current, "clauses", lv_clauses_3_0,
                                                "FunctionClause");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop38;
                        }
                    } while (true);

                    otherlv_4 = (Token) match(input, 18,
                            FOLLOW_18_in_ruleFunction5807);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess
                                .getFunctionAccess().getFullStopKeyword_3());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFunction"

    // $ANTLR start "entryRuleFunctionClause"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2602:1:
    // entryRuleFunctionClause returns [EObject current=null] :
    // iv_ruleFunctionClause= ruleFunctionClause EOF ;
    public final EObject entryRuleFunctionClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionClause = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2603:2:
            // (iv_ruleFunctionClause= ruleFunctionClause EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2604:2:
            // iv_ruleFunctionClause= ruleFunctionClause EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFunctionClauseRule());
                }
                pushFollow(FOLLOW_ruleFunctionClause_in_entryRuleFunctionClause5843);
                iv_ruleFunctionClause = ruleFunctionClause();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFunctionClause;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFunctionClause5853);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFunctionClause"

    // $ANTLR start "ruleFunctionClause"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2611:1:
    // ruleFunctionClause returns [EObject current=null] : ( ( ( ruleNAME ) )?
    // otherlv_1= '(' ( (lv_params_2_0= ruleExpressions ) )? otherlv_3= ')' (
    // (otherlv_4= 'when' )? ( (lv_guard_5_0= ruleGuard ) ) )? otherlv_6= '->' (
    // (lv_body_7_0= ruleExpressions ) ) ) ;
    public final EObject ruleFunctionClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        EObject lv_params_2_0 = null;

        EObject lv_guard_5_0 = null;

        EObject lv_body_7_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2614:28:
            // ( ( ( ( ruleNAME ) )? otherlv_1= '(' ( (lv_params_2_0=
            // ruleExpressions ) )? otherlv_3= ')' ( (otherlv_4= 'when' )? (
            // (lv_guard_5_0= ruleGuard ) ) )? otherlv_6= '->' ( (lv_body_7_0=
            // ruleExpressions ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2615:1:
            // ( ( ( ruleNAME ) )? otherlv_1= '(' ( (lv_params_2_0=
            // ruleExpressions ) )? otherlv_3= ')' ( (otherlv_4= 'when' )? (
            // (lv_guard_5_0= ruleGuard ) ) )? otherlv_6= '->' ( (lv_body_7_0=
            // ruleExpressions ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2615:1:
                // ( ( ( ruleNAME ) )? otherlv_1= '(' ( (lv_params_2_0=
                // ruleExpressions ) )? otherlv_3= ')' ( (otherlv_4= 'when' )? (
                // (lv_guard_5_0= ruleGuard ) ) )? otherlv_6= '->' (
                // (lv_body_7_0= ruleExpressions ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2615:2:
                // ( ( ruleNAME ) )? otherlv_1= '(' ( (lv_params_2_0=
                // ruleExpressions ) )? otherlv_3= ')' ( (otherlv_4= 'when' )? (
                // (lv_guard_5_0= ruleGuard ) ) )? otherlv_6= '->' (
                // (lv_body_7_0= ruleExpressions ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2615:2:
                    // ( ( ruleNAME ) )?
                    int alt39 = 2;
                    final int LA39_0 = input.LA(1);

                    if (LA39_0 == RULE_ATOM || LA39_0 == 20 || LA39_0 >= 24
                            && LA39_0 <= 34 || LA39_0 == 39 || LA39_0 >= 42
                            && LA39_0 <= 45 || LA39_0 >= 47 && LA39_0 <= 48
                            || LA39_0 == 52) {
                        alt39 = 1;
                    }
                    switch (alt39) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2616:1:
                    // ( ruleNAME )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2616:1:
                        // ( ruleNAME )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2617:3:
                        // ruleNAME
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getFunctionClauseRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunctionClauseAccess()
                                        .getRefFunctionCrossReference_0_0());

                            }
                            pushFollow(FOLLOW_ruleNAME_in_ruleFunctionClause5901);
                            ruleNAME();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleFunctionClause5914);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getFunctionClauseAccess()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2634:1:
                    // ( (lv_params_2_0= ruleExpressions ) )?
                    int alt40 = 2;
                    final int LA40_0 = input.LA(1);

                    if (LA40_0 >= RULE_STRING && LA40_0 <= RULE_BASED_INT
                            || LA40_0 >= 19 && LA40_0 <= 21 || LA40_0 >= 24
                            && LA40_0 <= 35 || LA40_0 >= 39 && LA40_0 <= 40
                            || LA40_0 >= 42 && LA40_0 <= 45 || LA40_0 >= 47
                            && LA40_0 <= 48 || LA40_0 >= 51 && LA40_0 <= 53
                            || LA40_0 == 56 || LA40_0 == 58 || LA40_0 >= 60
                            && LA40_0 <= 64 || LA40_0 == 66 || LA40_0 == 68
                            || LA40_0 == 70 || LA40_0 == 73 || LA40_0 == 77
                            || LA40_0 >= 89 && LA40_0 <= 90 || LA40_0 == 102) {
                        alt40 = 1;
                    }
                    switch (alt40) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2635:1:
                    // (lv_params_2_0= ruleExpressions )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2635:1:
                        // (lv_params_2_0= ruleExpressions )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2636:3:
                        // lv_params_2_0= ruleExpressions
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunctionClauseAccess()
                                        .getParamsExpressionsParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleExpressions_in_ruleFunctionClause5935);
                            lv_params_2_0 = ruleExpressions();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFunctionClauseRule());
                                }
                                set(current, "params", lv_params_2_0,
                                        "Expressions");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }
                        break;

                    }

                    otherlv_3 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleFunctionClause5948);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getFunctionClauseAccess()
                                .getRightParenthesisKeyword_3());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2656:1:
                    // ( (otherlv_4= 'when' )? ( (lv_guard_5_0= ruleGuard ) ) )?
                    int alt42 = 2;
                    final int LA42_0 = input.LA(1);

                    if (LA42_0 >= RULE_STRING && LA42_0 <= RULE_BASED_INT
                            || LA42_0 >= 19 && LA42_0 <= 21 || LA42_0 >= 24
                            && LA42_0 <= 35 || LA42_0 >= 39 && LA42_0 <= 40
                            || LA42_0 >= 42 && LA42_0 <= 45 || LA42_0 >= 47
                            && LA42_0 <= 49 || LA42_0 >= 51 && LA42_0 <= 53
                            || LA42_0 == 56 || LA42_0 == 58 || LA42_0 >= 60
                            && LA42_0 <= 64 || LA42_0 == 66 || LA42_0 == 68
                            || LA42_0 == 70 || LA42_0 == 73 || LA42_0 == 77
                            || LA42_0 >= 89 && LA42_0 <= 90 || LA42_0 == 102) {
                        alt42 = 1;
                    }
                    switch (alt42) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2656:2:
                    // (otherlv_4= 'when' )? ( (lv_guard_5_0= ruleGuard ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2656:2:
                        // (otherlv_4= 'when' )?
                        int alt41 = 2;
                        final int LA41_0 = input.LA(1);

                        if (LA41_0 == 49) {
                            alt41 = 1;
                        }
                        switch (alt41) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2656:4:
                        // otherlv_4= 'when'
                        {
                            otherlv_4 = (Token) match(input, 49,
                                    FOLLOW_49_in_ruleFunctionClause5962);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_4, grammarAccess
                                        .getFunctionClauseAccess()
                                        .getWhenKeyword_4_0());

                            }

                        }
                        break;

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2660:3:
                        // ( (lv_guard_5_0= ruleGuard ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2661:1:
                        // (lv_guard_5_0= ruleGuard )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2661:1:
                            // (lv_guard_5_0= ruleGuard )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2662:3:
                            // lv_guard_5_0= ruleGuard
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getFunctionClauseAccess()
                                            .getGuardGuardParserRuleCall_4_1_0());

                                }
                                pushFollow(FOLLOW_ruleGuard_in_ruleFunctionClause5985);
                                lv_guard_5_0 = ruleGuard();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getFunctionClauseRule());
                                    }
                                    set(current, "guard", lv_guard_5_0, "Guard");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    otherlv_6 = (Token) match(input, 50,
                            FOLLOW_50_in_ruleFunctionClause5999);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_6, grammarAccess
                                .getFunctionClauseAccess()
                                .getHyphenMinusGreaterThanSignKeyword_5());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2682:1:
                    // ( (lv_body_7_0= ruleExpressions ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2683:1:
                    // (lv_body_7_0= ruleExpressions )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2683:1:
                        // (lv_body_7_0= ruleExpressions )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2684:3:
                        // lv_body_7_0= ruleExpressions
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunctionClauseAccess()
                                        .getBodyExpressionsParserRuleCall_6_0());

                            }
                            pushFollow(FOLLOW_ruleExpressions_in_ruleFunctionClause6020);
                            lv_body_7_0 = ruleExpressions();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFunctionClauseRule());
                                }
                                set(current, "body", lv_body_7_0, "Expressions");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFunctionClause"

    // $ANTLR start "entryRuleGuard"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2708:1:
    // entryRuleGuard returns [EObject current=null] : iv_ruleGuard= ruleGuard
    // EOF ;
    public final EObject entryRuleGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuard = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2709:2:
            // (iv_ruleGuard= ruleGuard EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2710:2:
            // iv_ruleGuard= ruleGuard EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getGuardRule());
                }
                pushFollow(FOLLOW_ruleGuard_in_entryRuleGuard6056);
                iv_ruleGuard = ruleGuard();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleGuard;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleGuard6066);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleGuard"

    // $ANTLR start "ruleGuard"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2717:1:
    // ruleGuard returns [EObject current=null] : ( ( (lv_guards_0_0=
    // ruleExpressions ) ) (otherlv_1= ';' ( (lv_guards_2_0= ruleExpressions ) )
    // )* ) ;
    public final EObject ruleGuard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_guards_0_0 = null;

        EObject lv_guards_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2720:28:
            // ( ( ( (lv_guards_0_0= ruleExpressions ) ) (otherlv_1= ';' (
            // (lv_guards_2_0= ruleExpressions ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2721:1:
            // ( ( (lv_guards_0_0= ruleExpressions ) ) (otherlv_1= ';' (
            // (lv_guards_2_0= ruleExpressions ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2721:1:
                // ( ( (lv_guards_0_0= ruleExpressions ) ) (otherlv_1= ';' (
                // (lv_guards_2_0= ruleExpressions ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2721:2:
                // ( (lv_guards_0_0= ruleExpressions ) ) (otherlv_1= ';' (
                // (lv_guards_2_0= ruleExpressions ) ) )*
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2721:2:
                    // ( (lv_guards_0_0= ruleExpressions ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2722:1:
                    // (lv_guards_0_0= ruleExpressions )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2722:1:
                        // (lv_guards_0_0= ruleExpressions )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2723:3:
                        // lv_guards_0_0= ruleExpressions
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getGuardAccess()
                                        .getGuardsExpressionsParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleExpressions_in_ruleGuard6112);
                            lv_guards_0_0 = ruleExpressions();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getGuardRule());
                                }
                                add(current, "guards", lv_guards_0_0,
                                        "Expressions");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2739:2:
                    // (otherlv_1= ';' ( (lv_guards_2_0= ruleExpressions ) ) )*
                    loop43:
                    do {
                        int alt43 = 2;
                        final int LA43_0 = input.LA(1);

                        if (LA43_0 == 46) {
                            alt43 = 1;
                        }

                        switch (alt43) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2739:4:
                        // otherlv_1= ';' ( (lv_guards_2_0= ruleExpressions ) )
                        {
                            otherlv_1 = (Token) match(input, 46,
                                    FOLLOW_46_in_ruleGuard6125);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getGuardAccess()
                                        .getSemicolonKeyword_1_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2743:1:
                            // ( (lv_guards_2_0= ruleExpressions ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2744:1:
                            // (lv_guards_2_0= ruleExpressions )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2744:1:
                                // (lv_guards_2_0= ruleExpressions )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2745:3:
                                // lv_guards_2_0= ruleExpressions
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getGuardAccess()
                                                .getGuardsExpressionsParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpressions_in_ruleGuard6146);
                                    lv_guards_2_0 = ruleExpressions();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getGuardRule());
                                        }
                                        add(current, "guards", lv_guards_2_0,
                                                "Expressions");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop43;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleGuard"

    // $ANTLR start "entryRuleExpressions"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2769:1:
    // entryRuleExpressions returns [EObject current=null] : iv_ruleExpressions=
    // ruleExpressions EOF ;
    public final EObject entryRuleExpressions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressions = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2770:2:
            // (iv_ruleExpressions= ruleExpressions EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2771:2:
            // iv_ruleExpressions= ruleExpressions EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpressionsRule());
                }
                pushFollow(FOLLOW_ruleExpressions_in_entryRuleExpressions6184);
                iv_ruleExpressions = ruleExpressions();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpressions;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpressions6194);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpressions"

    // $ANTLR start "ruleExpressions"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2778:1:
    // ruleExpressions returns [EObject current=null] : ( ( (lv_exprs_0_0=
    // ruleLExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleLExpression ) )
    // )* ) ;
    public final EObject ruleExpressions() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_exprs_0_0 = null;

        EObject lv_exprs_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2781:28:
            // ( ( ( (lv_exprs_0_0= ruleLExpression ) ) (otherlv_1= ',' (
            // (lv_exprs_2_0= ruleLExpression ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2782:1:
            // ( ( (lv_exprs_0_0= ruleLExpression ) ) (otherlv_1= ',' (
            // (lv_exprs_2_0= ruleLExpression ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2782:1:
                // ( ( (lv_exprs_0_0= ruleLExpression ) ) (otherlv_1= ',' (
                // (lv_exprs_2_0= ruleLExpression ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2782:2:
                // ( (lv_exprs_0_0= ruleLExpression ) ) (otherlv_1= ',' (
                // (lv_exprs_2_0= ruleLExpression ) ) )*
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2782:2:
                    // ( (lv_exprs_0_0= ruleLExpression ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2783:1:
                    // (lv_exprs_0_0= ruleLExpression )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2783:1:
                        // (lv_exprs_0_0= ruleLExpression )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2784:3:
                        // lv_exprs_0_0= ruleLExpression
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getExpressionsAccess()
                                        .getExprsLExpressionParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleLExpression_in_ruleExpressions6240);
                            lv_exprs_0_0 = ruleLExpression();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getExpressionsRule());
                                }
                                add(current, "exprs", lv_exprs_0_0,
                                        "LExpression");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2800:2:
                    // (otherlv_1= ',' ( (lv_exprs_2_0= ruleLExpression ) ) )*
                    loop44:
                    do {
                        int alt44 = 2;
                        final int LA44_0 = input.LA(1);

                        if (LA44_0 == 22) {
                            alt44 = 1;
                        }

                        switch (alt44) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2800:4:
                        // otherlv_1= ',' ( (lv_exprs_2_0= ruleLExpression ) )
                        {
                            otherlv_1 = (Token) match(input, 22,
                                    FOLLOW_22_in_ruleExpressions6253);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getExpressionsAccess()
                                        .getCommaKeyword_1_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2804:1:
                            // ( (lv_exprs_2_0= ruleLExpression ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2805:1:
                            // (lv_exprs_2_0= ruleLExpression )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2805:1:
                                // (lv_exprs_2_0= ruleLExpression )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2806:3:
                                // lv_exprs_2_0= ruleLExpression
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpressionsAccess()
                                                .getExprsLExpressionParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleLExpression_in_ruleExpressions6274);
                                    lv_exprs_2_0 = ruleLExpression();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpressionsRule());
                                        }
                                        add(current, "exprs", lv_exprs_2_0,
                                                "LExpression");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop44;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpressions"

    // $ANTLR start "entryRuleLExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2830:1:
    // entryRuleLExpression returns [EObject current=null] : iv_ruleLExpression=
    // ruleLExpression EOF ;
    public final EObject entryRuleLExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLExpression = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2831:2:
            // (iv_ruleLExpression= ruleLExpression EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2832:2:
            // iv_ruleLExpression= ruleLExpression EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getLExpressionRule());
                }
                pushFollow(FOLLOW_ruleLExpression_in_entryRuleLExpression6312);
                iv_ruleLExpression = ruleLExpression();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleLExpression;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleLExpression6322);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleLExpression"

    // $ANTLR start "ruleLExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2839:1:
    // ruleLExpression returns [EObject current=null] : ( ( ( ( ( ruleLineExpr )
    // )=> (lv_line_0_0= ruleLineExpr ) ) ( (lv_expr_1_0= ruleExpression ) ) ) |
    // this_Expression_2= ruleExpression ) ;
    public final EObject ruleLExpression() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_line_0_0 = null;

        EObject lv_expr_1_0 = null;

        EObject this_Expression_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2842:28:
            // ( ( ( ( ( ( ruleLineExpr ) )=> (lv_line_0_0= ruleLineExpr ) ) (
            // (lv_expr_1_0= ruleExpression ) ) ) | this_Expression_2=
            // ruleExpression ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2843:1:
            // ( ( ( ( ( ruleLineExpr ) )=> (lv_line_0_0= ruleLineExpr ) ) (
            // (lv_expr_1_0= ruleExpression ) ) ) | this_Expression_2=
            // ruleExpression )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2843:1:
                // ( ( ( ( ( ruleLineExpr ) )=> (lv_line_0_0= ruleLineExpr ) ) (
                // (lv_expr_1_0= ruleExpression ) ) ) | this_Expression_2=
                // ruleExpression )
                int alt45 = 2;
                final int LA45_0 = input.LA(1);

                if (LA45_0 == 51) {
                    final int LA45_1 = input.LA(2);

                    if (LA45_1 == 52 && synpred31_InternalErlang()) {
                        alt45 = 1;
                    } else if (LA45_1 == RULE_ATOM || LA45_1 == RULE_VARIABLE
                            || LA45_1 == 20 || LA45_1 >= 24 && LA45_1 <= 34
                            || LA45_1 == 39 || LA45_1 >= 42 && LA45_1 <= 45
                            || LA45_1 >= 47 && LA45_1 <= 48) {
                        alt45 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 45, 1, input);

                        throw nvae;
                    }
                } else if (LA45_0 >= RULE_STRING && LA45_0 <= RULE_BASED_INT
                        || LA45_0 >= 19 && LA45_0 <= 21 || LA45_0 >= 24
                        && LA45_0 <= 35 || LA45_0 >= 39 && LA45_0 <= 40
                        || LA45_0 >= 42 && LA45_0 <= 45 || LA45_0 >= 47
                        && LA45_0 <= 48 || LA45_0 >= 52 && LA45_0 <= 53
                        || LA45_0 == 56 || LA45_0 == 58 || LA45_0 >= 60
                        && LA45_0 <= 64 || LA45_0 == 66 || LA45_0 == 68
                        || LA45_0 == 70 || LA45_0 == 73 || LA45_0 == 77
                        || LA45_0 >= 89 && LA45_0 <= 90 || LA45_0 == 102) {
                    alt45 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 45, 0, input);

                    throw nvae;
                }
                switch (alt45) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2843:2:
                // ( ( ( ( ruleLineExpr ) )=> (lv_line_0_0= ruleLineExpr ) ) (
                // (lv_expr_1_0= ruleExpression ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2843:2:
                    // ( ( ( ( ruleLineExpr ) )=> (lv_line_0_0= ruleLineExpr ) )
                    // ( (lv_expr_1_0= ruleExpression ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2843:3:
                    // ( ( ( ruleLineExpr ) )=> (lv_line_0_0= ruleLineExpr ) ) (
                    // (lv_expr_1_0= ruleExpression ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2843:3:
                        // ( ( ( ruleLineExpr ) )=> (lv_line_0_0= ruleLineExpr )
                        // )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2843:4:
                        // ( ( ruleLineExpr ) )=> (lv_line_0_0= ruleLineExpr )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2848:1:
                            // (lv_line_0_0= ruleLineExpr )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2849:3:
                            // lv_line_0_0= ruleLineExpr
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getLExpressionAccess()
                                            .getLineLineExprParserRuleCall_0_0_0());

                                }
                                pushFollow(FOLLOW_ruleLineExpr_in_ruleLExpression6379);
                                lv_line_0_0 = ruleLineExpr();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getLExpressionRule());
                                    }
                                    set(current, "line", true, "LineExpr");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2865:2:
                        // ( (lv_expr_1_0= ruleExpression ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2866:1:
                        // (lv_expr_1_0= ruleExpression )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2866:1:
                            // (lv_expr_1_0= ruleExpression )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2867:3:
                            // lv_expr_1_0= ruleExpression
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getLExpressionAccess()
                                            .getExprExpressionParserRuleCall_0_1_0());

                                }
                                pushFollow(FOLLOW_ruleExpression_in_ruleLExpression6400);
                                lv_expr_1_0 = ruleExpression();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getLExpressionRule());
                                    }
                                    set(current, "expr", lv_expr_1_0,
                                            "Expression");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2885:5:
                // this_Expression_2= ruleExpression
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getLExpressionAccess()
                                .getExpressionParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleExpression_in_ruleLExpression6429);
                    this_Expression_2 = ruleExpression();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expression_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleLExpression"

    // $ANTLR start "entryRuleLineExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2901:1:
    // entryRuleLineExpr returns [String current=null] : iv_ruleLineExpr=
    // ruleLineExpr EOF ;
    public final String entryRuleLineExpr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLineExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2902:2:
            // (iv_ruleLineExpr= ruleLineExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2903:2:
            // iv_ruleLineExpr= ruleLineExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getLineExprRule());
                }
                pushFollow(FOLLOW_ruleLineExpr_in_entryRuleLineExpr6465);
                iv_ruleLineExpr = ruleLineExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleLineExpr.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleLineExpr6476);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleLineExpr"

    // $ANTLR start "ruleLineExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2910:1:
    // ruleLineExpr returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (kw= '?' kw= 'line' ) ;
    public final AntlrDatatypeRuleToken ruleLineExpr()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2913:28:
            // ( (kw= '?' kw= 'line' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2914:1:
            // (kw= '?' kw= 'line' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2914:1:
                // (kw= '?' kw= 'line' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2915:2:
                // kw= '?' kw= 'line'
                {
                    kw = (Token) match(input, 51, FOLLOW_51_in_ruleLineExpr6514);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getLineExprAccess()
                                .getQuestionMarkKeyword_0());

                    }
                    kw = (Token) match(input, 52, FOLLOW_52_in_ruleLineExpr6527);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getLineExprAccess()
                                .getLineKeyword_1());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleLineExpr"

    // $ANTLR start "entryRuleExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2934:1:
    // entryRuleExpression returns [EObject current=null] : iv_ruleExpression=
    // ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2935:2:
            // (iv_ruleExpression= ruleExpression EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2936:2:
            // iv_ruleExpression= ruleExpression EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpressionRule());
                }
                pushFollow(FOLLOW_ruleExpression_in_entryRuleExpression6567);
                iv_ruleExpression = ruleExpression();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpression;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpression6577);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpression"

    // $ANTLR start "ruleExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2943:1:
    // ruleExpression returns [EObject current=null] : ( ( () otherlv_1= 'catch'
    // ( (lv_expr_2_0= ruleExpression ) ) ) | this_Expr100_3= ruleExpr100 ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_expr_2_0 = null;

        EObject this_Expr100_3 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2946:28:
            // ( ( ( () otherlv_1= 'catch' ( (lv_expr_2_0= ruleExpression ) ) )
            // | this_Expr100_3= ruleExpr100 ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2947:1:
            // ( ( () otherlv_1= 'catch' ( (lv_expr_2_0= ruleExpression ) ) ) |
            // this_Expr100_3= ruleExpr100 )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2947:1:
                // ( ( () otherlv_1= 'catch' ( (lv_expr_2_0= ruleExpression ) )
                // ) | this_Expr100_3= ruleExpr100 )
                int alt46 = 2;
                final int LA46_0 = input.LA(1);

                if (LA46_0 == 53) {
                    alt46 = 1;
                } else if (LA46_0 >= RULE_STRING && LA46_0 <= RULE_BASED_INT
                        || LA46_0 >= 19 && LA46_0 <= 21 || LA46_0 >= 24
                        && LA46_0 <= 35 || LA46_0 >= 39 && LA46_0 <= 40
                        || LA46_0 >= 42 && LA46_0 <= 45 || LA46_0 >= 47
                        && LA46_0 <= 48 || LA46_0 >= 51 && LA46_0 <= 52
                        || LA46_0 == 56 || LA46_0 == 58 || LA46_0 >= 60
                        && LA46_0 <= 64 || LA46_0 == 66 || LA46_0 == 68
                        || LA46_0 == 70 || LA46_0 == 73 || LA46_0 == 77
                        || LA46_0 >= 89 && LA46_0 <= 90 || LA46_0 == 102) {
                    alt46 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 46, 0, input);

                    throw nvae;
                }
                switch (alt46) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2947:2:
                // ( () otherlv_1= 'catch' ( (lv_expr_2_0= ruleExpression ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2947:2:
                    // ( () otherlv_1= 'catch' ( (lv_expr_2_0= ruleExpression )
                    // ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2947:3:
                    // () otherlv_1= 'catch' ( (lv_expr_2_0= ruleExpression ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2947:3:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2948:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getExpressionAccess()
                                        .getCatchExprAction_0_0(), current);

                            }

                        }

                        otherlv_1 = (Token) match(input, 53,
                                FOLLOW_53_in_ruleExpression6624);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getExpressionAccess()
                                    .getCatchKeyword_0_1());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2957:1:
                        // ( (lv_expr_2_0= ruleExpression ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2958:1:
                        // (lv_expr_2_0= ruleExpression )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2958:1:
                            // (lv_expr_2_0= ruleExpression )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2959:3:
                            // lv_expr_2_0= ruleExpression
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getExpressionAccess()
                                            .getExprExpressionParserRuleCall_0_2_0());

                                }
                                pushFollow(FOLLOW_ruleExpression_in_ruleExpression6645);
                                lv_expr_2_0 = ruleExpression();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getExpressionRule());
                                    }
                                    set(current, "expr", lv_expr_2_0,
                                            "Expression");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2977:5:
                // this_Expr100_3= ruleExpr100
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpressionAccess()
                                .getExpr100ParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleExpr100_in_ruleExpression6674);
                    this_Expr100_3 = ruleExpr100();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr100_3;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpression"

    // $ANTLR start "entryRuleExpr100"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2993:1:
    // entryRuleExpr100 returns [EObject current=null] : iv_ruleExpr100=
    // ruleExpr100 EOF ;
    public final EObject entryRuleExpr100() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr100 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2994:2:
            // (iv_ruleExpr100= ruleExpr100 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2995:2:
            // iv_ruleExpr100= ruleExpr100 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr100Rule());
                }
                pushFollow(FOLLOW_ruleExpr100_in_entryRuleExpr1006709);
                iv_ruleExpr100 = ruleExpr100();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr100;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr1006719);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr100"

    // $ANTLR start "ruleExpr100"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3002:1:
    // ruleExpr100 returns [EObject current=null] : (this_Expr150_0= ruleExpr150
    // ( ( () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0= ruleExpr100 ) ) ) | ( ()
    // ( (lv_op_5_0= ruleSENDOP ) ) ( (lv_opRight_6_0= ruleExpr100 ) ) ) )? ) ;
    public final EObject ruleExpr100() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0 = null;
        EObject this_Expr150_0 = null;

        EObject lv_opRight_3_0 = null;

        AntlrDatatypeRuleToken lv_op_5_0 = null;

        EObject lv_opRight_6_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3005:28:
            // ( (this_Expr150_0= ruleExpr150 ( ( () ( (lv_op_2_0= '=' ) ) (
            // (lv_opRight_3_0= ruleExpr100 ) ) ) | ( () ( (lv_op_5_0=
            // ruleSENDOP ) ) ( (lv_opRight_6_0= ruleExpr100 ) ) ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3006:1:
            // (this_Expr150_0= ruleExpr150 ( ( () ( (lv_op_2_0= '=' ) ) (
            // (lv_opRight_3_0= ruleExpr100 ) ) ) | ( () ( (lv_op_5_0=
            // ruleSENDOP ) ) ( (lv_opRight_6_0= ruleExpr100 ) ) ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3006:1:
                // (this_Expr150_0= ruleExpr150 ( ( () ( (lv_op_2_0= '=' ) ) (
                // (lv_opRight_3_0= ruleExpr100 ) ) ) | ( () ( (lv_op_5_0=
                // ruleSENDOP ) ) ( (lv_opRight_6_0= ruleExpr100 ) ) ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3007:5:
                // this_Expr150_0= ruleExpr150 ( ( () ( (lv_op_2_0= '=' ) ) (
                // (lv_opRight_3_0= ruleExpr100 ) ) ) | ( () ( (lv_op_5_0=
                // ruleSENDOP ) ) ( (lv_opRight_6_0= ruleExpr100 ) ) ) )?
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr100Access()
                                .getExpr150ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleExpr150_in_ruleExpr1006766);
                    this_Expr150_0 = ruleExpr150();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr150_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3015:1:
                    // ( ( () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0=
                    // ruleExpr100 ) ) ) | ( () ( (lv_op_5_0= ruleSENDOP ) ) (
                    // (lv_opRight_6_0= ruleExpr100 ) ) ) )?
                    int alt47 = 3;
                    final int LA47_0 = input.LA(1);

                    if (LA47_0 == 37) {
                        alt47 = 1;
                    } else if (LA47_0 == 101) {
                        alt47 = 2;
                    }
                    switch (alt47) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3015:2:
                    // ( () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0= ruleExpr100
                    // ) ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3015:2:
                        // ( () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0=
                        // ruleExpr100 ) ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3015:3:
                        // () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0=
                        // ruleExpr100 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3015:3:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3016:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess
                                                    .getExpr100Access()
                                                    .getMatchExprOpLeftAction_1_0_0(),
                                            current);

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3021:2:
                            // ( (lv_op_2_0= '=' ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3022:1:
                            // (lv_op_2_0= '=' )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3022:1:
                                // (lv_op_2_0= '=' )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3023:3:
                                // lv_op_2_0= '='
                                {
                                    lv_op_2_0 = (Token) match(input, 37,
                                            FOLLOW_37_in_ruleExpr1006794);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(
                                                lv_op_2_0,
                                                grammarAccess
                                                        .getExpr100Access()
                                                        .getOpEqualsSignKeyword_1_0_1_0());

                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElement(grammarAccess
                                                    .getExpr100Rule());
                                        }
                                        setWithLastConsumed(current, "op",
                                                lv_op_2_0, "=");

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3036:2:
                            // ( (lv_opRight_3_0= ruleExpr100 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3037:1:
                            // (lv_opRight_3_0= ruleExpr100 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3037:1:
                                // (lv_opRight_3_0= ruleExpr100 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3038:3:
                                // lv_opRight_3_0= ruleExpr100
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr100Access()
                                                .getOpRightExpr100ParserRuleCall_1_0_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpr100_in_ruleExpr1006828);
                                    lv_opRight_3_0 = ruleExpr100();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr100Rule());
                                        }
                                        set(current, "opRight", lv_opRight_3_0,
                                                "Expr100");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3055:6:
                    // ( () ( (lv_op_5_0= ruleSENDOP ) ) ( (lv_opRight_6_0=
                    // ruleExpr100 ) ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3055:6:
                        // ( () ( (lv_op_5_0= ruleSENDOP ) ) ( (lv_opRight_6_0=
                        // ruleExpr100 ) ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3055:7:
                        // () ( (lv_op_5_0= ruleSENDOP ) ) ( (lv_opRight_6_0=
                        // ruleExpr100 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3055:7:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3056:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess
                                                    .getExpr100Access()
                                                    .getBinOpOpLeftAction_1_1_0(),
                                            current);

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3061:2:
                            // ( (lv_op_5_0= ruleSENDOP ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3062:1:
                            // (lv_op_5_0= ruleSENDOP )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3062:1:
                                // (lv_op_5_0= ruleSENDOP )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3063:3:
                                // lv_op_5_0= ruleSENDOP
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr100Access()
                                                .getOpSENDOPParserRuleCall_1_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleSENDOP_in_ruleExpr1006866);
                                    lv_op_5_0 = ruleSENDOP();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr100Rule());
                                        }
                                        set(current, "op", lv_op_5_0, "SENDOP");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3079:2:
                            // ( (lv_opRight_6_0= ruleExpr100 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3080:1:
                            // (lv_opRight_6_0= ruleExpr100 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3080:1:
                                // (lv_opRight_6_0= ruleExpr100 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3081:3:
                                // lv_opRight_6_0= ruleExpr100
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr100Access()
                                                .getOpRightExpr100ParserRuleCall_1_1_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpr100_in_ruleExpr1006887);
                                    lv_opRight_6_0 = ruleExpr100();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr100Rule());
                                        }
                                        set(current, "opRight", lv_opRight_6_0,
                                                "Expr100");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr100"

    // $ANTLR start "entryRuleExpr150"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3105:1:
    // entryRuleExpr150 returns [EObject current=null] : iv_ruleExpr150=
    // ruleExpr150 EOF ;
    public final EObject entryRuleExpr150() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr150 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3106:2:
            // (iv_ruleExpr150= ruleExpr150 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3107:2:
            // iv_ruleExpr150= ruleExpr150 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr150Rule());
                }
                pushFollow(FOLLOW_ruleExpr150_in_entryRuleExpr1506926);
                iv_ruleExpr150 = ruleExpr150();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr150;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr1506936);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr150"

    // $ANTLR start "ruleExpr150"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3114:1:
    // ruleExpr150 returns [EObject current=null] : (this_Expr160_0= ruleExpr160
    // ( () ( (lv_op_2_0= 'orelse' ) ) ( (lv_opRight_3_0= ruleExpr160 ) ) )* ) ;
    public final EObject ruleExpr150() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0 = null;
        EObject this_Expr160_0 = null;

        EObject lv_opRight_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3117:28:
            // ( (this_Expr160_0= ruleExpr160 ( () ( (lv_op_2_0= 'orelse' ) ) (
            // (lv_opRight_3_0= ruleExpr160 ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3118:1:
            // (this_Expr160_0= ruleExpr160 ( () ( (lv_op_2_0= 'orelse' ) ) (
            // (lv_opRight_3_0= ruleExpr160 ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3118:1:
                // (this_Expr160_0= ruleExpr160 ( () ( (lv_op_2_0= 'orelse' ) )
                // ( (lv_opRight_3_0= ruleExpr160 ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3119:5:
                // this_Expr160_0= ruleExpr160 ( () ( (lv_op_2_0= 'orelse' ) ) (
                // (lv_opRight_3_0= ruleExpr160 ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr150Access()
                                .getExpr160ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleExpr160_in_ruleExpr1506983);
                    this_Expr160_0 = ruleExpr160();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr160_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3127:1:
                    // ( () ( (lv_op_2_0= 'orelse' ) ) ( (lv_opRight_3_0=
                    // ruleExpr160 ) ) )*
                    loop48:
                    do {
                        int alt48 = 2;
                        final int LA48_0 = input.LA(1);

                        if (LA48_0 == 54) {
                            alt48 = 1;
                        }

                        switch (alt48) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3127:2:
                        // () ( (lv_op_2_0= 'orelse' ) ) ( (lv_opRight_3_0=
                        // ruleExpr160 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3127:2:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3128:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess.getExpr150Access()
                                                    .getBinOpOpLeftAction_1_0(),
                                            current);

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3133:2:
                            // ( (lv_op_2_0= 'orelse' ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3134:1:
                            // (lv_op_2_0= 'orelse' )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3134:1:
                                // (lv_op_2_0= 'orelse' )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3135:3:
                                // lv_op_2_0= 'orelse'
                                {
                                    lv_op_2_0 = (Token) match(input, 54,
                                            FOLLOW_54_in_ruleExpr1507010);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(lv_op_2_0, grammarAccess
                                                .getExpr150Access()
                                                .getOpOrelseKeyword_1_1_0());

                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElement(grammarAccess
                                                    .getExpr150Rule());
                                        }
                                        setWithLastConsumed(current, "op",
                                                lv_op_2_0, "orelse");

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3148:2:
                            // ( (lv_opRight_3_0= ruleExpr160 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3149:1:
                            // (lv_opRight_3_0= ruleExpr160 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3149:1:
                                // (lv_opRight_3_0= ruleExpr160 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3150:3:
                                // lv_opRight_3_0= ruleExpr160
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr150Access()
                                                .getOpRightExpr160ParserRuleCall_1_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpr160_in_ruleExpr1507044);
                                    lv_opRight_3_0 = ruleExpr160();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr150Rule());
                                        }
                                        set(current, "opRight", lv_opRight_3_0,
                                                "Expr160");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop48;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr150"

    // $ANTLR start "entryRuleExpr160"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3174:1:
    // entryRuleExpr160 returns [EObject current=null] : iv_ruleExpr160=
    // ruleExpr160 EOF ;
    public final EObject entryRuleExpr160() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr160 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3175:2:
            // (iv_ruleExpr160= ruleExpr160 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3176:2:
            // iv_ruleExpr160= ruleExpr160 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr160Rule());
                }
                pushFollow(FOLLOW_ruleExpr160_in_entryRuleExpr1607082);
                iv_ruleExpr160 = ruleExpr160();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr160;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr1607092);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr160"

    // $ANTLR start "ruleExpr160"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3183:1:
    // ruleExpr160 returns [EObject current=null] : (this_Expr200_0= ruleExpr200
    // ( () ( (lv_op_2_0= 'andalso' ) ) ( (lv_opRight2_3_0= ruleExpr200 ) ) )* )
    // ;
    public final EObject ruleExpr160() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0 = null;
        EObject this_Expr200_0 = null;

        EObject lv_opRight2_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3186:28:
            // ( (this_Expr200_0= ruleExpr200 ( () ( (lv_op_2_0= 'andalso' ) ) (
            // (lv_opRight2_3_0= ruleExpr200 ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3187:1:
            // (this_Expr200_0= ruleExpr200 ( () ( (lv_op_2_0= 'andalso' ) ) (
            // (lv_opRight2_3_0= ruleExpr200 ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3187:1:
                // (this_Expr200_0= ruleExpr200 ( () ( (lv_op_2_0= 'andalso' ) )
                // ( (lv_opRight2_3_0= ruleExpr200 ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3188:5:
                // this_Expr200_0= ruleExpr200 ( () ( (lv_op_2_0= 'andalso' ) )
                // ( (lv_opRight2_3_0= ruleExpr200 ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr160Access()
                                .getExpr200ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleExpr200_in_ruleExpr1607139);
                    this_Expr200_0 = ruleExpr200();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr200_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3196:1:
                    // ( () ( (lv_op_2_0= 'andalso' ) ) ( (lv_opRight2_3_0=
                    // ruleExpr200 ) ) )*
                    loop49:
                    do {
                        int alt49 = 2;
                        final int LA49_0 = input.LA(1);

                        if (LA49_0 == 55) {
                            alt49 = 1;
                        }

                        switch (alt49) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3196:2:
                        // () ( (lv_op_2_0= 'andalso' ) ) ( (lv_opRight2_3_0=
                        // ruleExpr200 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3196:2:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3197:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess.getExpr160Access()
                                                    .getBinOpOpLeftAction_1_0(),
                                            current);

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3202:2:
                            // ( (lv_op_2_0= 'andalso' ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3203:1:
                            // (lv_op_2_0= 'andalso' )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3203:1:
                                // (lv_op_2_0= 'andalso' )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3204:3:
                                // lv_op_2_0= 'andalso'
                                {
                                    lv_op_2_0 = (Token) match(input, 55,
                                            FOLLOW_55_in_ruleExpr1607166);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(lv_op_2_0, grammarAccess
                                                .getExpr160Access()
                                                .getOpAndalsoKeyword_1_1_0());

                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElement(grammarAccess
                                                    .getExpr160Rule());
                                        }
                                        setWithLastConsumed(current, "op",
                                                lv_op_2_0, "andalso");

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3217:2:
                            // ( (lv_opRight2_3_0= ruleExpr200 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3218:1:
                            // (lv_opRight2_3_0= ruleExpr200 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3218:1:
                                // (lv_opRight2_3_0= ruleExpr200 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3219:3:
                                // lv_opRight2_3_0= ruleExpr200
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr160Access()
                                                .getOpRight2Expr200ParserRuleCall_1_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpr200_in_ruleExpr1607200);
                                    lv_opRight2_3_0 = ruleExpr200();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr160Rule());
                                        }
                                        set(current, "opRight2",
                                                lv_opRight2_3_0, "Expr200");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop49;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr160"

    // $ANTLR start "entryRuleExpr200"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3243:1:
    // entryRuleExpr200 returns [EObject current=null] : iv_ruleExpr200=
    // ruleExpr200 EOF ;
    public final EObject entryRuleExpr200() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr200 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3244:2:
            // (iv_ruleExpr200= ruleExpr200 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3245:2:
            // iv_ruleExpr200= ruleExpr200 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr200Rule());
                }
                pushFollow(FOLLOW_ruleExpr200_in_entryRuleExpr2007238);
                iv_ruleExpr200 = ruleExpr200();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr200;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr2007248);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr200"

    // $ANTLR start "ruleExpr200"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3252:1:
    // ruleExpr200 returns [EObject current=null] : (this_Expr300_0= ruleExpr300
    // ( () ( (lv_op_2_0= ruleCOMPOP ) ) ( (lv_opRight_3_0= ruleExpr300 ) ) )? )
    // ;
    public final EObject ruleExpr200() throws RecognitionException {
        EObject current = null;

        EObject this_Expr300_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_opRight_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3255:28:
            // ( (this_Expr300_0= ruleExpr300 ( () ( (lv_op_2_0= ruleCOMPOP ) )
            // ( (lv_opRight_3_0= ruleExpr300 ) ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3256:1:
            // (this_Expr300_0= ruleExpr300 ( () ( (lv_op_2_0= ruleCOMPOP ) ) (
            // (lv_opRight_3_0= ruleExpr300 ) ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3256:1:
                // (this_Expr300_0= ruleExpr300 ( () ( (lv_op_2_0= ruleCOMPOP )
                // ) ( (lv_opRight_3_0= ruleExpr300 ) ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3257:5:
                // this_Expr300_0= ruleExpr300 ( () ( (lv_op_2_0= ruleCOMPOP ) )
                // ( (lv_opRight_3_0= ruleExpr300 ) ) )?
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr200Access()
                                .getExpr300ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleExpr300_in_ruleExpr2007295);
                    this_Expr300_0 = ruleExpr300();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr300_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3265:1:
                    // ( () ( (lv_op_2_0= ruleCOMPOP ) ) ( (lv_opRight_3_0=
                    // ruleExpr300 ) ) )?
                    int alt50 = 2;
                    final int LA50_0 = input.LA(1);

                    if (LA50_0 >= 93 && LA50_0 <= 100) {
                        alt50 = 1;
                    }
                    switch (alt50) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3265:2:
                    // () ( (lv_op_2_0= ruleCOMPOP ) ) ( (lv_opRight_3_0=
                    // ruleExpr300 ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3265:2:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3266:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElementAndSet(
                                        grammarAccess.getExpr200Access()
                                                .getBinOpOpLeftAction_1_0(),
                                        current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3271:2:
                        // ( (lv_op_2_0= ruleCOMPOP ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3272:1:
                        // (lv_op_2_0= ruleCOMPOP )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3272:1:
                            // (lv_op_2_0= ruleCOMPOP )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3273:3:
                            // lv_op_2_0= ruleCOMPOP
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getExpr200Access()
                                            .getOpCOMPOPParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleCOMPOP_in_ruleExpr2007325);
                                lv_op_2_0 = ruleCOMPOP();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getExpr200Rule());
                                    }
                                    set(current, "op", lv_op_2_0, "COMPOP");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3289:2:
                        // ( (lv_opRight_3_0= ruleExpr300 ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3290:1:
                        // (lv_opRight_3_0= ruleExpr300 )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3290:1:
                            // (lv_opRight_3_0= ruleExpr300 )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3291:3:
                            // lv_opRight_3_0= ruleExpr300
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getExpr200Access()
                                            .getOpRightExpr300ParserRuleCall_1_2_0());

                                }
                                pushFollow(FOLLOW_ruleExpr300_in_ruleExpr2007346);
                                lv_opRight_3_0 = ruleExpr300();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getExpr200Rule());
                                    }
                                    set(current, "opRight", lv_opRight_3_0,
                                            "Expr300");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr200"

    // $ANTLR start "entryRuleExpr300"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3315:1:
    // entryRuleExpr300 returns [EObject current=null] : iv_ruleExpr300=
    // ruleExpr300 EOF ;
    public final EObject entryRuleExpr300() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr300 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3316:2:
            // (iv_ruleExpr300= ruleExpr300 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3317:2:
            // iv_ruleExpr300= ruleExpr300 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr300Rule());
                }
                pushFollow(FOLLOW_ruleExpr300_in_entryRuleExpr3007384);
                iv_ruleExpr300 = ruleExpr300();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr300;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr3007394);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr300"

    // $ANTLR start "ruleExpr300"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3324:1:
    // ruleExpr300 returns [EObject current=null] : (this_Expr400_0= ruleExpr400
    // ( () ( (lv_op_2_0= ruleLISTOP ) ) ( (lv_opRight_3_0= ruleExpr400 ) ) )* )
    // ;
    public final EObject ruleExpr300() throws RecognitionException {
        EObject current = null;

        EObject this_Expr400_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_opRight_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3327:28:
            // ( (this_Expr400_0= ruleExpr400 ( () ( (lv_op_2_0= ruleLISTOP ) )
            // ( (lv_opRight_3_0= ruleExpr400 ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3328:1:
            // (this_Expr400_0= ruleExpr400 ( () ( (lv_op_2_0= ruleLISTOP ) ) (
            // (lv_opRight_3_0= ruleExpr400 ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3328:1:
                // (this_Expr400_0= ruleExpr400 ( () ( (lv_op_2_0= ruleLISTOP )
                // ) ( (lv_opRight_3_0= ruleExpr400 ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3329:5:
                // this_Expr400_0= ruleExpr400 ( () ( (lv_op_2_0= ruleLISTOP ) )
                // ( (lv_opRight_3_0= ruleExpr400 ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr300Access()
                                .getExpr400ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleExpr400_in_ruleExpr3007441);
                    this_Expr400_0 = ruleExpr400();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr400_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3337:1:
                    // ( () ( (lv_op_2_0= ruleLISTOP ) ) ( (lv_opRight_3_0=
                    // ruleExpr400 ) ) )*
                    loop51:
                    do {
                        int alt51 = 2;
                        final int LA51_0 = input.LA(1);

                        if (LA51_0 >= 91 && LA51_0 <= 92) {
                            alt51 = 1;
                        }

                        switch (alt51) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3337:2:
                        // () ( (lv_op_2_0= ruleLISTOP ) ) ( (lv_opRight_3_0=
                        // ruleExpr400 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3337:2:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3338:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess.getExpr300Access()
                                                    .getBinOpOpLeftAction_1_0(),
                                            current);

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3343:2:
                            // ( (lv_op_2_0= ruleLISTOP ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3344:1:
                            // (lv_op_2_0= ruleLISTOP )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3344:1:
                                // (lv_op_2_0= ruleLISTOP )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3345:3:
                                // lv_op_2_0= ruleLISTOP
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr300Access()
                                                .getOpLISTOPParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleLISTOP_in_ruleExpr3007471);
                                    lv_op_2_0 = ruleLISTOP();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr300Rule());
                                        }
                                        set(current, "op", lv_op_2_0, "LISTOP");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3361:2:
                            // ( (lv_opRight_3_0= ruleExpr400 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3362:1:
                            // (lv_opRight_3_0= ruleExpr400 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3362:1:
                                // (lv_opRight_3_0= ruleExpr400 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3363:3:
                                // lv_opRight_3_0= ruleExpr400
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr300Access()
                                                .getOpRightExpr400ParserRuleCall_1_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpr400_in_ruleExpr3007492);
                                    lv_opRight_3_0 = ruleExpr400();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr300Rule());
                                        }
                                        set(current, "opRight", lv_opRight_3_0,
                                                "Expr400");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop51;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr300"

    // $ANTLR start "entryRuleExpr400"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3387:1:
    // entryRuleExpr400 returns [EObject current=null] : iv_ruleExpr400=
    // ruleExpr400 EOF ;
    public final EObject entryRuleExpr400() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr400 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3388:2:
            // (iv_ruleExpr400= ruleExpr400 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3389:2:
            // iv_ruleExpr400= ruleExpr400 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr400Rule());
                }
                pushFollow(FOLLOW_ruleExpr400_in_entryRuleExpr4007530);
                iv_ruleExpr400 = ruleExpr400();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr400;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr4007540);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr400"

    // $ANTLR start "ruleExpr400"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3396:1:
    // ruleExpr400 returns [EObject current=null] : (this_Expr500_0= ruleExpr500
    // ( () ( (lv_op_2_0= ruleADDOP ) ) ( (lv_opRight_3_0= ruleExpr500 ) ) )* )
    // ;
    public final EObject ruleExpr400() throws RecognitionException {
        EObject current = null;

        EObject this_Expr500_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_opRight_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3399:28:
            // ( (this_Expr500_0= ruleExpr500 ( () ( (lv_op_2_0= ruleADDOP ) ) (
            // (lv_opRight_3_0= ruleExpr500 ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3400:1:
            // (this_Expr500_0= ruleExpr500 ( () ( (lv_op_2_0= ruleADDOP ) ) (
            // (lv_opRight_3_0= ruleExpr500 ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3400:1:
                // (this_Expr500_0= ruleExpr500 ( () ( (lv_op_2_0= ruleADDOP ) )
                // ( (lv_opRight_3_0= ruleExpr500 ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3401:5:
                // this_Expr500_0= ruleExpr500 ( () ( (lv_op_2_0= ruleADDOP ) )
                // ( (lv_opRight_3_0= ruleExpr500 ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr400Access()
                                .getExpr500ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleExpr500_in_ruleExpr4007587);
                    this_Expr500_0 = ruleExpr500();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr500_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3409:1:
                    // ( () ( (lv_op_2_0= ruleADDOP ) ) ( (lv_opRight_3_0=
                    // ruleExpr500 ) ) )*
                    loop52:
                    do {
                        int alt52 = 2;
                        final int LA52_0 = input.LA(1);

                        if (LA52_0 == 19 || LA52_0 >= 77 && LA52_0 <= 83) {
                            alt52 = 1;
                        }

                        switch (alt52) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3409:2:
                        // () ( (lv_op_2_0= ruleADDOP ) ) ( (lv_opRight_3_0=
                        // ruleExpr500 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3409:2:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3410:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess.getExpr400Access()
                                                    .getAddOpOpLeftAction_1_0(),
                                            current);

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3415:2:
                            // ( (lv_op_2_0= ruleADDOP ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3416:1:
                            // (lv_op_2_0= ruleADDOP )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3416:1:
                                // (lv_op_2_0= ruleADDOP )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3417:3:
                                // lv_op_2_0= ruleADDOP
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr400Access()
                                                .getOpADDOPParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleADDOP_in_ruleExpr4007617);
                                    lv_op_2_0 = ruleADDOP();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr400Rule());
                                        }
                                        set(current, "op", lv_op_2_0, "ADDOP");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3433:2:
                            // ( (lv_opRight_3_0= ruleExpr500 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3434:1:
                            // (lv_opRight_3_0= ruleExpr500 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3434:1:
                                // (lv_opRight_3_0= ruleExpr500 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3435:3:
                                // lv_opRight_3_0= ruleExpr500
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr400Access()
                                                .getOpRightExpr500ParserRuleCall_1_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpr500_in_ruleExpr4007638);
                                    lv_opRight_3_0 = ruleExpr500();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr400Rule());
                                        }
                                        set(current, "opRight", lv_opRight_3_0,
                                                "Expr500");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop52;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr400"

    // $ANTLR start "entryRuleExpr500"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3459:1:
    // entryRuleExpr500 returns [EObject current=null] : iv_ruleExpr500=
    // ruleExpr500 EOF ;
    public final EObject entryRuleExpr500() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr500 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3460:2:
            // (iv_ruleExpr500= ruleExpr500 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3461:2:
            // iv_ruleExpr500= ruleExpr500 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr500Rule());
                }
                pushFollow(FOLLOW_ruleExpr500_in_entryRuleExpr5007676);
                iv_ruleExpr500 = ruleExpr500();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr500;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr5007686);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr500"

    // $ANTLR start "ruleExpr500"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3468:1:
    // ruleExpr500 returns [EObject current=null] : (this_UnaryExpr_0=
    // ruleUnaryExpr ( () ( (lv_op_2_0= ruleMULTOP ) ) ( (lv_opRight_3_0=
    // ruleUnaryExpr ) ) )* ) ;
    public final EObject ruleExpr500() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpr_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_opRight_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3471:28:
            // ( (this_UnaryExpr_0= ruleUnaryExpr ( () ( (lv_op_2_0= ruleMULTOP
            // ) ) ( (lv_opRight_3_0= ruleUnaryExpr ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3472:1:
            // (this_UnaryExpr_0= ruleUnaryExpr ( () ( (lv_op_2_0= ruleMULTOP )
            // ) ( (lv_opRight_3_0= ruleUnaryExpr ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3472:1:
                // (this_UnaryExpr_0= ruleUnaryExpr ( () ( (lv_op_2_0=
                // ruleMULTOP ) ) ( (lv_opRight_3_0= ruleUnaryExpr ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3473:5:
                // this_UnaryExpr_0= ruleUnaryExpr ( () ( (lv_op_2_0= ruleMULTOP
                // ) ) ( (lv_opRight_3_0= ruleUnaryExpr ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr500Access()
                                .getUnaryExprParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleUnaryExpr_in_ruleExpr5007733);
                    this_UnaryExpr_0 = ruleUnaryExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_UnaryExpr_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3481:1:
                    // ( () ( (lv_op_2_0= ruleMULTOP ) ) ( (lv_opRight_3_0=
                    // ruleUnaryExpr ) ) )*
                    loop53:
                    do {
                        int alt53 = 2;
                        final int LA53_0 = input.LA(1);

                        if (LA53_0 == 69 || LA53_0 >= 84 && LA53_0 <= 88) {
                            alt53 = 1;
                        }

                        switch (alt53) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3481:2:
                        // () ( (lv_op_2_0= ruleMULTOP ) ) ( (lv_opRight_3_0=
                        // ruleUnaryExpr ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3481:2:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3482:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess
                                                    .getExpr500Access()
                                                    .getMultOpOpLeftAction_1_0(),
                                            current);

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3487:2:
                            // ( (lv_op_2_0= ruleMULTOP ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3488:1:
                            // (lv_op_2_0= ruleMULTOP )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3488:1:
                                // (lv_op_2_0= ruleMULTOP )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3489:3:
                                // lv_op_2_0= ruleMULTOP
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr500Access()
                                                .getOpMULTOPParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleMULTOP_in_ruleExpr5007763);
                                    lv_op_2_0 = ruleMULTOP();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr500Rule());
                                        }
                                        set(current, "op", lv_op_2_0, "MULTOP");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3505:2:
                            // ( (lv_opRight_3_0= ruleUnaryExpr ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3506:1:
                            // (lv_opRight_3_0= ruleUnaryExpr )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3506:1:
                                // (lv_opRight_3_0= ruleUnaryExpr )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3507:3:
                                // lv_opRight_3_0= ruleUnaryExpr
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr500Access()
                                                .getOpRightUnaryExprParserRuleCall_1_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleUnaryExpr_in_ruleExpr5007784);
                                    lv_opRight_3_0 = ruleUnaryExpr();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr500Rule());
                                        }
                                        set(current, "opRight", lv_opRight_3_0,
                                                "UnaryExpr");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop53;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr500"

    // $ANTLR start "entryRuleUnaryExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3531:1:
    // entryRuleUnaryExpr returns [EObject current=null] : iv_ruleUnaryExpr=
    // ruleUnaryExpr EOF ;
    public final EObject entryRuleUnaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3532:2:
            // (iv_ruleUnaryExpr= ruleUnaryExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3533:2:
            // iv_ruleUnaryExpr= ruleUnaryExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getUnaryExprRule());
                }
                pushFollow(FOLLOW_ruleUnaryExpr_in_entryRuleUnaryExpr7822);
                iv_ruleUnaryExpr = ruleUnaryExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleUnaryExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleUnaryExpr7832);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleUnaryExpr"

    // $ANTLR start "ruleUnaryExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3540:1:
    // ruleUnaryExpr returns [EObject current=null] : ( ( () ( (lv_op_1_0=
    // rulePREFIXOP ) ) ( (lv_operand_2_0= ruleExpr700 ) ) ) | this_Expr700_3=
    // ruleExpr700 ) ;
    public final EObject ruleUnaryExpr() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_op_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_Expr700_3 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3543:28:
            // ( ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
            // ruleExpr700 ) ) ) | this_Expr700_3= ruleExpr700 ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3544:1:
            // ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
            // ruleExpr700 ) ) ) | this_Expr700_3= ruleExpr700 )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3544:1:
                // ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                // ruleExpr700 ) ) ) | this_Expr700_3= ruleExpr700 )
                int alt54 = 2;
                final int LA54_0 = input.LA(1);

                if (LA54_0 == 19 || LA54_0 == 77 || LA54_0 >= 89
                        && LA54_0 <= 90) {
                    alt54 = 1;
                } else if (LA54_0 >= RULE_STRING && LA54_0 <= RULE_BASED_INT
                        || LA54_0 >= 20 && LA54_0 <= 21 || LA54_0 >= 24
                        && LA54_0 <= 35 || LA54_0 >= 39 && LA54_0 <= 40
                        || LA54_0 >= 42 && LA54_0 <= 45 || LA54_0 >= 47
                        && LA54_0 <= 48 || LA54_0 >= 51 && LA54_0 <= 52
                        || LA54_0 == 56 || LA54_0 == 58 || LA54_0 >= 60
                        && LA54_0 <= 64 || LA54_0 == 66 || LA54_0 == 68
                        || LA54_0 == 70 || LA54_0 == 73 || LA54_0 == 102) {
                    alt54 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 54, 0, input);

                    throw nvae;
                }
                switch (alt54) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3544:2:
                // ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                // ruleExpr700 ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3544:2:
                    // ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                    // ruleExpr700 ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3544:3:
                    // () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                    // ruleExpr700 ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3544:3:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3545:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getUnaryExprAccess()
                                        .getUnaryExprAction_0_0(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3550:2:
                        // ( (lv_op_1_0= rulePREFIXOP ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3551:1:
                        // (lv_op_1_0= rulePREFIXOP )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3551:1:
                            // (lv_op_1_0= rulePREFIXOP )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3552:3:
                            // lv_op_1_0= rulePREFIXOP
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getUnaryExprAccess()
                                            .getOpPREFIXOPParserRuleCall_0_1_0());

                                }
                                pushFollow(FOLLOW_rulePREFIXOP_in_ruleUnaryExpr7888);
                                lv_op_1_0 = rulePREFIXOP();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getUnaryExprRule());
                                    }
                                    set(current, "op", lv_op_1_0, "PREFIXOP");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3568:2:
                        // ( (lv_operand_2_0= ruleExpr700 ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3569:1:
                        // (lv_operand_2_0= ruleExpr700 )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3569:1:
                            // (lv_operand_2_0= ruleExpr700 )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3570:3:
                            // lv_operand_2_0= ruleExpr700
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getUnaryExprAccess()
                                            .getOperandExpr700ParserRuleCall_0_2_0());

                                }
                                pushFollow(FOLLOW_ruleExpr700_in_ruleUnaryExpr7909);
                                lv_operand_2_0 = ruleExpr700();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getUnaryExprRule());
                                    }
                                    set(current, "operand", lv_operand_2_0,
                                            "Expr700");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3588:5:
                // this_Expr700_3= ruleExpr700
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getUnaryExprAccess()
                                .getExpr700ParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleExpr700_in_ruleUnaryExpr7938);
                    this_Expr700_3 = ruleExpr700();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr700_3;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleUnaryExpr"

    // $ANTLR start "entryRuleExpr700"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3604:1:
    // entryRuleExpr700 returns [EObject current=null] : iv_ruleExpr700=
    // ruleExpr700 EOF ;
    public final EObject entryRuleExpr700() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr700 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3605:2:
            // (iv_ruleExpr700= ruleExpr700 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3606:2:
            // iv_ruleExpr700= ruleExpr700 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr700Rule());
                }
                pushFollow(FOLLOW_ruleExpr700_in_entryRuleExpr7007973);
                iv_ruleExpr700 = ruleExpr700();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr700;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr7007983);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr700"

    // $ANTLR start "ruleExpr700"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3613:1:
    // ruleExpr700 returns [EObject current=null] : (this_Expr800_0= ruleExpr800
    // ( (otherlv_1= '(' () ( (lv_args_3_0= ruleExpressions ) )? otherlv_4= ')'
    // (otherlv_5= '(' ( (lv_args2_6_0= ruleExpressions ) )? otherlv_7= ')' )? )
    // | (otherlv_8= '#' () ( (lv_record_10_0= ruleRecordExpr ) ) )+ )? ) ;
    public final EObject ruleExpr700() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_4 = null;
        Token otherlv_5 = null;
        Token otherlv_7 = null;
        Token otherlv_8 = null;
        EObject this_Expr800_0 = null;

        EObject lv_args_3_0 = null;

        EObject lv_args2_6_0 = null;

        EObject lv_record_10_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3616:28:
            // ( (this_Expr800_0= ruleExpr800 ( (otherlv_1= '(' () (
            // (lv_args_3_0= ruleExpressions ) )? otherlv_4= ')' (otherlv_5= '('
            // ( (lv_args2_6_0= ruleExpressions ) )? otherlv_7= ')' )? ) |
            // (otherlv_8= '#' () ( (lv_record_10_0= ruleRecordExpr ) ) )+ )? )
            // )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3617:1:
            // (this_Expr800_0= ruleExpr800 ( (otherlv_1= '(' () ( (lv_args_3_0=
            // ruleExpressions ) )? otherlv_4= ')' (otherlv_5= '(' (
            // (lv_args2_6_0= ruleExpressions ) )? otherlv_7= ')' )? ) |
            // (otherlv_8= '#' () ( (lv_record_10_0= ruleRecordExpr ) ) )+ )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3617:1:
                // (this_Expr800_0= ruleExpr800 ( (otherlv_1= '(' () (
                // (lv_args_3_0= ruleExpressions ) )? otherlv_4= ')' (otherlv_5=
                // '(' ( (lv_args2_6_0= ruleExpressions ) )? otherlv_7= ')' )? )
                // | (otherlv_8= '#' () ( (lv_record_10_0= ruleRecordExpr ) ) )+
                // )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3618:5:
                // this_Expr800_0= ruleExpr800 ( (otherlv_1= '(' () (
                // (lv_args_3_0= ruleExpressions ) )? otherlv_4= ')' (otherlv_5=
                // '(' ( (lv_args2_6_0= ruleExpressions ) )? otherlv_7= ')' )? )
                // | (otherlv_8= '#' () ( (lv_record_10_0= ruleRecordExpr ) ) )+
                // )?
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr700Access()
                                .getExpr800ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleExpr800_in_ruleExpr7008030);
                    this_Expr800_0 = ruleExpr800();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Expr800_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3626:1:
                    // ( (otherlv_1= '(' () ( (lv_args_3_0= ruleExpressions ) )?
                    // otherlv_4= ')' (otherlv_5= '(' ( (lv_args2_6_0=
                    // ruleExpressions ) )? otherlv_7= ')' )? ) | (otherlv_8=
                    // '#' () ( (lv_record_10_0= ruleRecordExpr ) ) )+ )?
                    int alt59 = 3;
                    final int LA59_0 = input.LA(1);

                    if (LA59_0 == 21) {
                        alt59 = 1;
                    } else if (LA59_0 == 56) {
                        alt59 = 2;
                    }
                    switch (alt59) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3626:2:
                    // (otherlv_1= '(' () ( (lv_args_3_0= ruleExpressions ) )?
                    // otherlv_4= ')' (otherlv_5= '(' ( (lv_args2_6_0=
                    // ruleExpressions ) )? otherlv_7= ')' )? )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3626:2:
                        // (otherlv_1= '(' () ( (lv_args_3_0= ruleExpressions )
                        // )? otherlv_4= ')' (otherlv_5= '(' ( (lv_args2_6_0=
                        // ruleExpressions ) )? otherlv_7= ')' )? )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3626:4:
                        // otherlv_1= '(' () ( (lv_args_3_0= ruleExpressions )
                        // )? otherlv_4= ')' (otherlv_5= '(' ( (lv_args2_6_0=
                        // ruleExpressions ) )? otherlv_7= ')' )?
                        {
                            otherlv_1 = (Token) match(input, 21,
                                    FOLLOW_21_in_ruleExpr7008043);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getExpr700Access()
                                        .getLeftParenthesisKeyword_1_0_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3630:1:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3631:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess
                                                    .getExpr700Access()
                                                    .getFunCallTargetAction_1_0_1(),
                                            current);

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3636:2:
                            // ( (lv_args_3_0= ruleExpressions ) )?
                            int alt55 = 2;
                            final int LA55_0 = input.LA(1);

                            if (LA55_0 >= RULE_STRING
                                    && LA55_0 <= RULE_BASED_INT || LA55_0 >= 19
                                    && LA55_0 <= 21 || LA55_0 >= 24
                                    && LA55_0 <= 35 || LA55_0 >= 39
                                    && LA55_0 <= 40 || LA55_0 >= 42
                                    && LA55_0 <= 45 || LA55_0 >= 47
                                    && LA55_0 <= 48 || LA55_0 >= 51
                                    && LA55_0 <= 53 || LA55_0 == 56
                                    || LA55_0 == 58 || LA55_0 >= 60
                                    && LA55_0 <= 64 || LA55_0 == 66
                                    || LA55_0 == 68 || LA55_0 == 70
                                    || LA55_0 == 73 || LA55_0 == 77
                                    || LA55_0 >= 89 && LA55_0 <= 90
                                    || LA55_0 == 102) {
                                alt55 = 1;
                            }
                            switch (alt55) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3637:1:
                            // (lv_args_3_0= ruleExpressions )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3637:1:
                                // (lv_args_3_0= ruleExpressions )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3638:3:
                                // lv_args_3_0= ruleExpressions
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getExpr700Access()
                                                .getArgsExpressionsParserRuleCall_1_0_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpressions_in_ruleExpr7008073);
                                    lv_args_3_0 = ruleExpressions();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getExpr700Rule());
                                        }
                                        set(current, "args", lv_args_3_0,
                                                "Expressions");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }
                                break;

                            }

                            otherlv_4 = (Token) match(input, 23,
                                    FOLLOW_23_in_ruleExpr7008086);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_4, grammarAccess
                                        .getExpr700Access()
                                        .getRightParenthesisKeyword_1_0_3());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3658:1:
                            // (otherlv_5= '(' ( (lv_args2_6_0= ruleExpressions
                            // ) )? otherlv_7= ')' )?
                            int alt57 = 2;
                            final int LA57_0 = input.LA(1);

                            if (LA57_0 == 21) {
                                alt57 = 1;
                            }
                            switch (alt57) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3658:3:
                            // otherlv_5= '(' ( (lv_args2_6_0= ruleExpressions )
                            // )? otherlv_7= ')'
                            {
                                otherlv_5 = (Token) match(input, 21,
                                        FOLLOW_21_in_ruleExpr7008099);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(
                                            otherlv_5,
                                            grammarAccess
                                                    .getExpr700Access()
                                                    .getLeftParenthesisKeyword_1_0_4_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3662:1:
                                // ( (lv_args2_6_0= ruleExpressions ) )?
                                int alt56 = 2;
                                final int LA56_0 = input.LA(1);

                                if (LA56_0 >= RULE_STRING
                                        && LA56_0 <= RULE_BASED_INT
                                        || LA56_0 >= 19 && LA56_0 <= 21
                                        || LA56_0 >= 24 && LA56_0 <= 35
                                        || LA56_0 >= 39 && LA56_0 <= 40
                                        || LA56_0 >= 42 && LA56_0 <= 45
                                        || LA56_0 >= 47 && LA56_0 <= 48
                                        || LA56_0 >= 51 && LA56_0 <= 53
                                        || LA56_0 == 56 || LA56_0 == 58
                                        || LA56_0 >= 60 && LA56_0 <= 64
                                        || LA56_0 == 66 || LA56_0 == 68
                                        || LA56_0 == 70 || LA56_0 == 73
                                        || LA56_0 == 77 || LA56_0 >= 89
                                        && LA56_0 <= 90 || LA56_0 == 102) {
                                    alt56 = 1;
                                }
                                switch (alt56) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3663:1:
                                // (lv_args2_6_0= ruleExpressions )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3663:1:
                                    // (lv_args2_6_0= ruleExpressions )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3664:3:
                                    // lv_args2_6_0= ruleExpressions
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getExpr700Access()
                                                    .getArgs2ExpressionsParserRuleCall_1_0_4_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleExpressions_in_ruleExpr7008120);
                                        lv_args2_6_0 = ruleExpressions();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getExpr700Rule());
                                            }
                                            set(current, "args2", lv_args2_6_0,
                                                    "Expressions");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }
                                break;

                                }

                                otherlv_7 = (Token) match(input, 23,
                                        FOLLOW_23_in_ruleExpr7008133);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(
                                            otherlv_7,
                                            grammarAccess
                                                    .getExpr700Access()
                                                    .getRightParenthesisKeyword_1_0_4_2());

                                }

                            }
                                break;

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3685:6:
                    // (otherlv_8= '#' () ( (lv_record_10_0= ruleRecordExpr ) )
                    // )+
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3685:6:
                        // (otherlv_8= '#' () ( (lv_record_10_0= ruleRecordExpr
                        // ) ) )+
                        int cnt58 = 0;
                        loop58:
                        do {
                            int alt58 = 2;
                            final int LA58_0 = input.LA(1);

                            if (LA58_0 == 56) {
                                alt58 = 1;
                            }

                            switch (alt58) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3685:8:
                            // otherlv_8= '#' () ( (lv_record_10_0=
                            // ruleRecordExpr ) )
                            {
                                otherlv_8 = (Token) match(input, 56,
                                        FOLLOW_56_in_ruleExpr7008155);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_8, grammarAccess
                                            .getExpr700Access()
                                            .getNumberSignKeyword_1_1_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3689:1:
                                // ()
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3690:5:
                                {
                                    if (state.backtracking == 0) {

                                        current = forceCreateModelElementAndSet(
                                                grammarAccess
                                                        .getExpr700Access()
                                                        .getRecordExprRefAction_1_1_1(),
                                                current);

                                    }

                                }

                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3695:2:
                                // ( (lv_record_10_0= ruleRecordExpr ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3696:1:
                                // (lv_record_10_0= ruleRecordExpr )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3696:1:
                                    // (lv_record_10_0= ruleRecordExpr )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3697:3:
                                    // lv_record_10_0= ruleRecordExpr
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getExpr700Access()
                                                    .getRecordRecordExprParserRuleCall_1_1_2_0());

                                        }
                                        pushFollow(FOLLOW_ruleRecordExpr_in_ruleExpr7008185);
                                        lv_record_10_0 = ruleRecordExpr();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getExpr700Rule());
                                            }
                                            set(current, "record",
                                                    lv_record_10_0,
                                                    "RecordExpr");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                if (cnt58 >= 1) {
                                    break loop58;
                                }
                                if (state.backtracking > 0) {
                                    state.failed = true;
                                    return current;
                                }
                                    final EarlyExitException eee = new EarlyExitException(
                                        58, input);
                                    throw eee;
                            }
                            cnt58++;
                        } while (true);

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr700"

    // $ANTLR start "entryRuleExpr800"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3721:1:
    // entryRuleExpr800 returns [EObject current=null] : iv_ruleExpr800=
    // ruleExpr800 EOF ;
    public final EObject entryRuleExpr800() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr800 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3722:2:
            // (iv_ruleExpr800= ruleExpr800 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3723:2:
            // iv_ruleExpr800= ruleExpr800 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExpr800Rule());
                }
                pushFollow(FOLLOW_ruleExpr800_in_entryRuleExpr8008225);
                iv_ruleExpr800 = ruleExpr800();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExpr800;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExpr8008235);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExpr800"

    // $ANTLR start "ruleExpr800"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3730:1:
    // ruleExpr800 returns [EObject current=null] : (this_ExprMax_0= ruleExprMax
    // ( () otherlv_2= ':' ( (lv_function_3_0= ruleExprMax ) ) )? ) ;
    public final EObject ruleExpr800() throws RecognitionException {
        EObject current = null;

        Token otherlv_2 = null;
        EObject this_ExprMax_0 = null;

        EObject lv_function_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3733:28:
            // ( (this_ExprMax_0= ruleExprMax ( () otherlv_2= ':' (
            // (lv_function_3_0= ruleExprMax ) ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3734:1:
            // (this_ExprMax_0= ruleExprMax ( () otherlv_2= ':' (
            // (lv_function_3_0= ruleExprMax ) ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3734:1:
                // (this_ExprMax_0= ruleExprMax ( () otherlv_2= ':' (
                // (lv_function_3_0= ruleExprMax ) ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3735:5:
                // this_ExprMax_0= ruleExprMax ( () otherlv_2= ':' (
                // (lv_function_3_0= ruleExprMax ) ) )?
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExpr800Access()
                                .getExprMaxParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleExprMax_in_ruleExpr8008282);
                    this_ExprMax_0 = ruleExprMax();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_ExprMax_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3743:1:
                    // ( () otherlv_2= ':' ( (lv_function_3_0= ruleExprMax ) )
                    // )?
                    int alt60 = 2;
                    final int LA60_0 = input.LA(1);

                    if (LA60_0 == 57) {
                        alt60 = 1;
                    }
                    switch (alt60) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3743:2:
                    // () otherlv_2= ':' ( (lv_function_3_0= ruleExprMax ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3743:2:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3744:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElementAndSet(
                                        grammarAccess
                                                .getExpr800Access()
                                                .getRemoteTargetModuleAction_1_0(),
                                        current);

                            }

                        }

                        otherlv_2 = (Token) match(input, 57,
                                FOLLOW_57_in_ruleExpr8008303);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_2, grammarAccess
                                    .getExpr800Access().getColonKeyword_1_1());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3753:1:
                        // ( (lv_function_3_0= ruleExprMax ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3754:1:
                        // (lv_function_3_0= ruleExprMax )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3754:1:
                            // (lv_function_3_0= ruleExprMax )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3755:3:
                            // lv_function_3_0= ruleExprMax
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getExpr800Access()
                                            .getFunctionExprMaxParserRuleCall_1_2_0());

                                }
                                pushFollow(FOLLOW_ruleExprMax_in_ruleExpr8008324);
                                lv_function_3_0 = ruleExprMax();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getExpr800Rule());
                                    }
                                    set(current, "function", lv_function_3_0,
                                            "ExprMax");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExpr800"

    // $ANTLR start "entryRuleExprMax"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3779:1:
    // entryRuleExprMax returns [EObject current=null] : iv_ruleExprMax=
    // ruleExprMax EOF ;
    public final EObject entryRuleExprMax() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExprMax = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3780:2:
            // (iv_ruleExprMax= ruleExprMax EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3781:2:
            // iv_ruleExprMax= ruleExprMax EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getExprMaxRule());
                }
                pushFollow(FOLLOW_ruleExprMax_in_entryRuleExprMax8362);
                iv_ruleExprMax = ruleExprMax();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleExprMax;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleExprMax8372);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleExprMax"

    // $ANTLR start "ruleExprMax"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3788:1:
    // ruleExprMax returns [EObject current=null] : (this_TermExpression_0=
    // ruleTermExpression | (otherlv_1= '(' this_Expression_2= ruleExpression
    // otherlv_3= ')' ) | ( () otherlv_5= 'begin' ( (lv_body_6_0=
    // ruleExpressions ) ) otherlv_7= 'end' ) | this_IfExpr_8= ruleIfExpr |
    // this_CaseExpr_9= ruleCaseExpr | this_ReceiveExpr_10= ruleReceiveExpr |
    // this_FunExpr_11= ruleFunExpr | this_TryExpr_12= ruleTryExpr |
    // this_CondExpr_13= ruleCondExpr | this_QueryExpr_14= ruleQueryExpr |
    // this_LetExpr_15= ruleLetExpr ) ;
    public final EObject ruleExprMax() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        Token otherlv_7 = null;
        EObject this_TermExpression_0 = null;

        EObject this_Expression_2 = null;

        EObject lv_body_6_0 = null;

        EObject this_IfExpr_8 = null;

        EObject this_CaseExpr_9 = null;

        EObject this_ReceiveExpr_10 = null;

        EObject this_FunExpr_11 = null;

        EObject this_TryExpr_12 = null;

        EObject this_CondExpr_13 = null;

        EObject this_QueryExpr_14 = null;

        EObject this_LetExpr_15 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3791:28:
            // ( (this_TermExpression_0= ruleTermExpression | (otherlv_1= '('
            // this_Expression_2= ruleExpression otherlv_3= ')' ) | ( ()
            // otherlv_5= 'begin' ( (lv_body_6_0= ruleExpressions ) ) otherlv_7=
            // 'end' ) | this_IfExpr_8= ruleIfExpr | this_CaseExpr_9=
            // ruleCaseExpr | this_ReceiveExpr_10= ruleReceiveExpr |
            // this_FunExpr_11= ruleFunExpr | this_TryExpr_12= ruleTryExpr |
            // this_CondExpr_13= ruleCondExpr | this_QueryExpr_14= ruleQueryExpr
            // | this_LetExpr_15= ruleLetExpr ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3792:1:
            // (this_TermExpression_0= ruleTermExpression | (otherlv_1= '('
            // this_Expression_2= ruleExpression otherlv_3= ')' ) | ( ()
            // otherlv_5= 'begin' ( (lv_body_6_0= ruleExpressions ) ) otherlv_7=
            // 'end' ) | this_IfExpr_8= ruleIfExpr | this_CaseExpr_9=
            // ruleCaseExpr | this_ReceiveExpr_10= ruleReceiveExpr |
            // this_FunExpr_11= ruleFunExpr | this_TryExpr_12= ruleTryExpr |
            // this_CondExpr_13= ruleCondExpr | this_QueryExpr_14= ruleQueryExpr
            // | this_LetExpr_15= ruleLetExpr )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3792:1:
                // (this_TermExpression_0= ruleTermExpression | (otherlv_1= '('
                // this_Expression_2= ruleExpression otherlv_3= ')' ) | ( ()
                // otherlv_5= 'begin' ( (lv_body_6_0= ruleExpressions ) )
                // otherlv_7= 'end' ) | this_IfExpr_8= ruleIfExpr |
                // this_CaseExpr_9= ruleCaseExpr | this_ReceiveExpr_10=
                // ruleReceiveExpr | this_FunExpr_11= ruleFunExpr |
                // this_TryExpr_12= ruleTryExpr | this_CondExpr_13= ruleCondExpr
                // | this_QueryExpr_14= ruleQueryExpr | this_LetExpr_15=
                // ruleLetExpr )
                int alt61 = 11;
                switch (input.LA(1)) {
                case RULE_STRING:
                case RULE_ATOM:
                case RULE_CHAR:
                case RULE_VARIABLE:
                case RULE_INT:
                case RULE_BASED_INT:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 39:
                case 40:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 51:
                case 52:
                case 56:
                case 73:
                case 102: {
                    alt61 = 1;
                }
                    break;
                case 21: {
                    alt61 = 2;
                }
                    break;
                case 58: {
                    alt61 = 3;
                }
                    break;
                case 63: {
                    alt61 = 4;
                }
                    break;
                case 64: {
                    alt61 = 5;
                }
                    break;
                case 66: {
                    alt61 = 6;
                }
                    break;
                case 68: {
                    alt61 = 7;
                }
                    break;
                case 70: {
                    alt61 = 8;
                }
                    break;
                case 61: {
                    alt61 = 9;
                }
                    break;
                case 60: {
                    alt61 = 10;
                }
                    break;
                case 62: {
                    alt61 = 11;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 61, 0, input);

                    throw nvae;
                }

                switch (alt61) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3793:5:
                // this_TermExpression_0= ruleTermExpression
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getTermExpressionParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleTermExpression_in_ruleExprMax8419);
                    this_TermExpression_0 = ruleTermExpression();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_TermExpression_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3802:6:
                // (otherlv_1= '(' this_Expression_2= ruleExpression otherlv_3=
                // ')' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3802:6:
                    // (otherlv_1= '(' this_Expression_2= ruleExpression
                    // otherlv_3= ')' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3802:8:
                    // otherlv_1= '(' this_Expression_2= ruleExpression
                    // otherlv_3= ')'
                    {
                        otherlv_1 = (Token) match(input, 21,
                                FOLLOW_21_in_ruleExprMax8437);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getExprMaxAccess()
                                    .getLeftParenthesisKeyword_1_0());

                        }
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess.getExprMaxAccess()
                                    .getExpressionParserRuleCall_1_1());

                        }
                        pushFollow(FOLLOW_ruleExpression_in_ruleExprMax8459);
                        this_Expression_2 = ruleExpression();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_Expression_2;
                            afterParserOrEnumRuleCall();

                        }
                        otherlv_3 = (Token) match(input, 23,
                                FOLLOW_23_in_ruleExprMax8470);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_3, grammarAccess
                                    .getExprMaxAccess()
                                    .getRightParenthesisKeyword_1_2());

                        }

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3820:6:
                // ( () otherlv_5= 'begin' ( (lv_body_6_0= ruleExpressions ) )
                // otherlv_7= 'end' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3820:6:
                    // ( () otherlv_5= 'begin' ( (lv_body_6_0= ruleExpressions )
                    // ) otherlv_7= 'end' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3820:7:
                    // () otherlv_5= 'begin' ( (lv_body_6_0= ruleExpressions ) )
                    // otherlv_7= 'end'
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3820:7:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3821:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getExprMaxAccess()
                                        .getBlockExprAction_2_0(), current);

                            }

                        }

                        otherlv_5 = (Token) match(input, 58,
                                FOLLOW_58_in_ruleExprMax8499);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_5, grammarAccess
                                    .getExprMaxAccess().getBeginKeyword_2_1());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3830:1:
                        // ( (lv_body_6_0= ruleExpressions ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3831:1:
                        // (lv_body_6_0= ruleExpressions )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3831:1:
                            // (lv_body_6_0= ruleExpressions )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3832:3:
                            // lv_body_6_0= ruleExpressions
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getExprMaxAccess()
                                            .getBodyExpressionsParserRuleCall_2_2_0());

                                }
                                pushFollow(FOLLOW_ruleExpressions_in_ruleExprMax8520);
                                lv_body_6_0 = ruleExpressions();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getExprMaxRule());
                                    }
                                    set(current, "body", lv_body_6_0,
                                            "Expressions");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        otherlv_7 = (Token) match(input, 59,
                                FOLLOW_59_in_ruleExprMax8532);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_7, grammarAccess
                                    .getExprMaxAccess().getEndKeyword_2_3());

                        }

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3854:5:
                // this_IfExpr_8= ruleIfExpr
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getIfExprParserRuleCall_3());

                    }
                    pushFollow(FOLLOW_ruleIfExpr_in_ruleExprMax8561);
                    this_IfExpr_8 = ruleIfExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_IfExpr_8;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 5:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3864:5:
                // this_CaseExpr_9= ruleCaseExpr
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getCaseExprParserRuleCall_4());

                    }
                    pushFollow(FOLLOW_ruleCaseExpr_in_ruleExprMax8588);
                    this_CaseExpr_9 = ruleCaseExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_CaseExpr_9;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 6:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3874:5:
                // this_ReceiveExpr_10= ruleReceiveExpr
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getReceiveExprParserRuleCall_5());

                    }
                    pushFollow(FOLLOW_ruleReceiveExpr_in_ruleExprMax8615);
                    this_ReceiveExpr_10 = ruleReceiveExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_ReceiveExpr_10;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 7:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3884:5:
                // this_FunExpr_11= ruleFunExpr
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getFunExprParserRuleCall_6());

                    }
                    pushFollow(FOLLOW_ruleFunExpr_in_ruleExprMax8642);
                    this_FunExpr_11 = ruleFunExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_FunExpr_11;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 8:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3894:5:
                // this_TryExpr_12= ruleTryExpr
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getTryExprParserRuleCall_7());

                    }
                    pushFollow(FOLLOW_ruleTryExpr_in_ruleExprMax8669);
                    this_TryExpr_12 = ruleTryExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_TryExpr_12;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 9:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3904:5:
                // this_CondExpr_13= ruleCondExpr
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getCondExprParserRuleCall_8());

                    }
                    pushFollow(FOLLOW_ruleCondExpr_in_ruleExprMax8696);
                    this_CondExpr_13 = ruleCondExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_CondExpr_13;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 10:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3914:5:
                // this_QueryExpr_14= ruleQueryExpr
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getQueryExprParserRuleCall_9());

                    }
                    pushFollow(FOLLOW_ruleQueryExpr_in_ruleExprMax8723);
                    this_QueryExpr_14 = ruleQueryExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_QueryExpr_14;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 11:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3924:5:
                // this_LetExpr_15= ruleLetExpr
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getExprMaxAccess()
                                .getLetExprParserRuleCall_10());

                    }
                    pushFollow(FOLLOW_ruleLetExpr_in_ruleExprMax8750);
                    this_LetExpr_15 = ruleLetExpr();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_LetExpr_15;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleExprMax"

    // $ANTLR start "entryRuleTermExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3940:1:
    // entryRuleTermExpression returns [EObject current=null] :
    // iv_ruleTermExpression= ruleTermExpression EOF ;
    public final EObject entryRuleTermExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTermExpression = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3941:2:
            // (iv_ruleTermExpression= ruleTermExpression EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3942:2:
            // iv_ruleTermExpression= ruleTermExpression EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTermExpressionRule());
                }
                pushFollow(FOLLOW_ruleTermExpression_in_entryRuleTermExpression8785);
                iv_ruleTermExpression = ruleTermExpression();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTermExpression;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTermExpression8795);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTermExpression"

    // $ANTLR start "ruleTermExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3949:1:
    // ruleTermExpression returns [EObject current=null] : (this_Tuple_0=
    // ruleTuple | this_ListOrComprehension_1= ruleListOrComprehension |
    // this_BinaryOrComprehension_2= ruleBinaryOrComprehension | (otherlv_3= '#'
    // this_RecordExpr_4= ruleRecordExpr ) | this_LiteralExpression_5=
    // ruleLiteralExpression ) ;
    public final EObject ruleTermExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3 = null;
        EObject this_Tuple_0 = null;

        EObject this_ListOrComprehension_1 = null;

        EObject this_BinaryOrComprehension_2 = null;

        EObject this_RecordExpr_4 = null;

        EObject this_LiteralExpression_5 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3952:28:
            // ( (this_Tuple_0= ruleTuple | this_ListOrComprehension_1=
            // ruleListOrComprehension | this_BinaryOrComprehension_2=
            // ruleBinaryOrComprehension | (otherlv_3= '#' this_RecordExpr_4=
            // ruleRecordExpr ) | this_LiteralExpression_5=
            // ruleLiteralExpression ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3953:1:
            // (this_Tuple_0= ruleTuple | this_ListOrComprehension_1=
            // ruleListOrComprehension | this_BinaryOrComprehension_2=
            // ruleBinaryOrComprehension | (otherlv_3= '#' this_RecordExpr_4=
            // ruleRecordExpr ) | this_LiteralExpression_5=
            // ruleLiteralExpression )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3953:1:
                // (this_Tuple_0= ruleTuple | this_ListOrComprehension_1=
                // ruleListOrComprehension | this_BinaryOrComprehension_2=
                // ruleBinaryOrComprehension | (otherlv_3= '#'
                // this_RecordExpr_4= ruleRecordExpr ) |
                // this_LiteralExpression_5= ruleLiteralExpression )
                int alt62 = 5;
                switch (input.LA(1)) {
                case 35: {
                    alt62 = 1;
                }
                    break;
                case 40: {
                    alt62 = 2;
                }
                    break;
                case 73: {
                    alt62 = 3;
                }
                    break;
                case 56: {
                    alt62 = 4;
                }
                    break;
                case RULE_STRING:
                case RULE_ATOM:
                case RULE_CHAR:
                case RULE_VARIABLE:
                case RULE_INT:
                case RULE_BASED_INT:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 51:
                case 52:
                case 102: {
                    alt62 = 5;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 62, 0, input);

                    throw nvae;
                }

                switch (alt62) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3954:5:
                // this_Tuple_0= ruleTuple
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getTermExpressionAccess()
                                .getTupleParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleTuple_in_ruleTermExpression8842);
                    this_Tuple_0 = ruleTuple();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Tuple_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3964:5:
                // this_ListOrComprehension_1= ruleListOrComprehension
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getTermExpressionAccess()
                                .getListOrComprehensionParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleListOrComprehension_in_ruleTermExpression8869);
                    this_ListOrComprehension_1 = ruleListOrComprehension();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_ListOrComprehension_1;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3974:5:
                // this_BinaryOrComprehension_2= ruleBinaryOrComprehension
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getTermExpressionAccess()
                                .getBinaryOrComprehensionParserRuleCall_2());

                    }
                    pushFollow(FOLLOW_ruleBinaryOrComprehension_in_ruleTermExpression8896);
                    this_BinaryOrComprehension_2 = ruleBinaryOrComprehension();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_BinaryOrComprehension_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3983:6:
                // (otherlv_3= '#' this_RecordExpr_4= ruleRecordExpr )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3983:6:
                    // (otherlv_3= '#' this_RecordExpr_4= ruleRecordExpr )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3983:8:
                    // otherlv_3= '#' this_RecordExpr_4= ruleRecordExpr
                    {
                        otherlv_3 = (Token) match(input, 56,
                                FOLLOW_56_in_ruleTermExpression8914);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_3, grammarAccess
                                    .getTermExpressionAccess()
                                    .getNumberSignKeyword_3_0());

                        }
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess
                                    .getTermExpressionAccess()
                                    .getRecordExprParserRuleCall_3_1());

                        }
                        pushFollow(FOLLOW_ruleRecordExpr_in_ruleTermExpression8936);
                        this_RecordExpr_4 = ruleRecordExpr();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_RecordExpr_4;
                            afterParserOrEnumRuleCall();

                        }

                    }

                }
                break;
                case 5:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:3998:5:
                // this_LiteralExpression_5= ruleLiteralExpression
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getTermExpressionAccess()
                                .getLiteralExpressionParserRuleCall_4());

                    }
                    pushFollow(FOLLOW_ruleLiteralExpression_in_ruleTermExpression8964);
                    this_LiteralExpression_5 = ruleLiteralExpression();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_LiteralExpression_5;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTermExpression"

    // $ANTLR start "entryRuleMacroCall"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4014:1:
    // entryRuleMacroCall returns [EObject current=null] : iv_ruleMacroCall=
    // ruleMacroCall EOF ;
    public final EObject entryRuleMacroCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMacroCall = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4015:2:
            // (iv_ruleMacroCall= ruleMacroCall EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4016:2:
            // iv_ruleMacroCall= ruleMacroCall EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getMacroCallRule());
                }
                pushFollow(FOLLOW_ruleMacroCall_in_entryRuleMacroCall8999);
                iv_ruleMacroCall = ruleMacroCall();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleMacroCall;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleMacroCall9009);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleMacroCall"

    // $ANTLR start "ruleMacroCall"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4023:1:
    // ruleMacroCall returns [EObject current=null] : ( ( (lv_macroName_0_0=
    // ruleMacroLiteral ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_args_2_0=
    // ruleExpressions ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleMacroCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        EObject lv_macroName_0_0 = null;

        EObject lv_args_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4026:28:
            // ( ( ( (lv_macroName_0_0= ruleMacroLiteral ) ) ( ( ( '('
            // )=>otherlv_1= '(' ) ( (lv_args_2_0= ruleExpressions ) )?
            // otherlv_3= ')' )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4027:1:
            // ( ( (lv_macroName_0_0= ruleMacroLiteral ) ) ( ( ( '('
            // )=>otherlv_1= '(' ) ( (lv_args_2_0= ruleExpressions ) )?
            // otherlv_3= ')' )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4027:1:
                // ( ( (lv_macroName_0_0= ruleMacroLiteral ) ) ( ( ( '('
                // )=>otherlv_1= '(' ) ( (lv_args_2_0= ruleExpressions ) )?
                // otherlv_3= ')' )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4027:2:
                // ( (lv_macroName_0_0= ruleMacroLiteral ) ) ( ( ( '('
                // )=>otherlv_1= '(' ) ( (lv_args_2_0= ruleExpressions ) )?
                // otherlv_3= ')' )?
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4027:2:
                    // ( (lv_macroName_0_0= ruleMacroLiteral ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4028:1:
                    // (lv_macroName_0_0= ruleMacroLiteral )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4028:1:
                        // (lv_macroName_0_0= ruleMacroLiteral )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4029:3:
                        // lv_macroName_0_0= ruleMacroLiteral
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getMacroCallAccess()
                                        .getMacroNameMacroLiteralParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleMacroLiteral_in_ruleMacroCall9055);
                            lv_macroName_0_0 = ruleMacroLiteral();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getMacroCallRule());
                                }
                                set(current, "macroName", lv_macroName_0_0,
                                        "MacroLiteral");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4045:2:
                    // ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_args_2_0=
                    // ruleExpressions ) )? otherlv_3= ')' )?
                    int alt64 = 2;
                    alt64 = dfa64.predict(input);
                    switch (alt64) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4045:3:
                    // ( ( '(' )=>otherlv_1= '(' ) ( (lv_args_2_0=
                    // ruleExpressions ) )? otherlv_3= ')'
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4045:3:
                        // ( ( '(' )=>otherlv_1= '(' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4045:4:
                        // ( '(' )=>otherlv_1= '('
                        {
                            otherlv_1 = (Token) match(input, 21,
                                    FOLLOW_21_in_ruleMacroCall9076);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getMacroCallAccess()
                                        .getLeftParenthesisKeyword_1_0());

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4050:2:
                        // ( (lv_args_2_0= ruleExpressions ) )?
                        int alt63 = 2;
                        final int LA63_0 = input.LA(1);

                        if (LA63_0 >= RULE_STRING && LA63_0 <= RULE_BASED_INT
                                || LA63_0 >= 19 && LA63_0 <= 21 || LA63_0 >= 24
                                && LA63_0 <= 35 || LA63_0 >= 39 && LA63_0 <= 40
                                || LA63_0 >= 42 && LA63_0 <= 45 || LA63_0 >= 47
                                && LA63_0 <= 48 || LA63_0 >= 51 && LA63_0 <= 53
                                || LA63_0 == 56 || LA63_0 == 58 || LA63_0 >= 60
                                && LA63_0 <= 64 || LA63_0 == 66 || LA63_0 == 68
                                || LA63_0 == 70 || LA63_0 == 73 || LA63_0 == 77
                                || LA63_0 >= 89 && LA63_0 <= 90
                                || LA63_0 == 102) {
                            alt63 = 1;
                        }
                        switch (alt63) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4051:1:
                        // (lv_args_2_0= ruleExpressions )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4051:1:
                            // (lv_args_2_0= ruleExpressions )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4052:3:
                            // lv_args_2_0= ruleExpressions
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getMacroCallAccess()
                                            .getArgsExpressionsParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleExpressions_in_ruleMacroCall9098);
                                lv_args_2_0 = ruleExpressions();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getMacroCallRule());
                                    }
                                    set(current, "args", lv_args_2_0,
                                            "Expressions");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }
                        break;

                        }

                        otherlv_3 = (Token) match(input, 23,
                                FOLLOW_23_in_ruleMacroCall9111);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_3, grammarAccess
                                    .getMacroCallAccess()
                                    .getRightParenthesisKeyword_1_2());

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleMacroCall"

    // $ANTLR start "entryRuleRecordExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4080:1:
    // entryRuleRecordExpr returns [EObject current=null] : iv_ruleRecordExpr=
    // ruleRecordExpr EOF ;
    public final EObject entryRuleRecordExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4081:2:
            // (iv_ruleRecordExpr= ruleRecordExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4082:2:
            // iv_ruleRecordExpr= ruleRecordExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordExprRule());
                }
                pushFollow(FOLLOW_ruleRecordExpr_in_entryRuleRecordExpr9149);
                iv_ruleRecordExpr = ruleRecordExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleRecordExpr9159);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordExpr"

    // $ANTLR start "ruleRecordExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4089:1:
    // ruleRecordExpr returns [EObject current=null] : ( ( (lv_rec_0_0=
    // ruleRecordVarMacro ) ) ( (otherlv_1= '.' ( (lv_field_2_0=
    // ruleRecordFieldVarMacro ) ) ) | ( (lv_tuple_3_0= ruleRecordTuple ) ) ) )
    // ;
    public final EObject ruleRecordExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_rec_0_0 = null;

        EObject lv_field_2_0 = null;

        EObject lv_tuple_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4092:28:
            // ( ( ( (lv_rec_0_0= ruleRecordVarMacro ) ) ( (otherlv_1= '.' (
            // (lv_field_2_0= ruleRecordFieldVarMacro ) ) ) | ( (lv_tuple_3_0=
            // ruleRecordTuple ) ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4093:1:
            // ( ( (lv_rec_0_0= ruleRecordVarMacro ) ) ( (otherlv_1= '.' (
            // (lv_field_2_0= ruleRecordFieldVarMacro ) ) ) | ( (lv_tuple_3_0=
            // ruleRecordTuple ) ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4093:1:
                // ( ( (lv_rec_0_0= ruleRecordVarMacro ) ) ( (otherlv_1= '.' (
                // (lv_field_2_0= ruleRecordFieldVarMacro ) ) ) | (
                // (lv_tuple_3_0= ruleRecordTuple ) ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4093:2:
                // ( (lv_rec_0_0= ruleRecordVarMacro ) ) ( (otherlv_1= '.' (
                // (lv_field_2_0= ruleRecordFieldVarMacro ) ) ) | (
                // (lv_tuple_3_0= ruleRecordTuple ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4093:2:
                    // ( (lv_rec_0_0= ruleRecordVarMacro ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4094:1:
                    // (lv_rec_0_0= ruleRecordVarMacro )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4094:1:
                        // (lv_rec_0_0= ruleRecordVarMacro )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4095:3:
                        // lv_rec_0_0= ruleRecordVarMacro
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getRecordExprAccess()
                                        .getRecRecordVarMacroParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleRecordVarMacro_in_ruleRecordExpr9205);
                            lv_rec_0_0 = ruleRecordVarMacro();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getRecordExprRule());
                                }
                                set(current, "rec", lv_rec_0_0,
                                        "RecordVarMacro");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4111:2:
                    // ( (otherlv_1= '.' ( (lv_field_2_0=
                    // ruleRecordFieldVarMacro ) ) ) | ( (lv_tuple_3_0=
                    // ruleRecordTuple ) ) )
                    int alt65 = 2;
                    final int LA65_0 = input.LA(1);

                    if (LA65_0 == 18) {
                        alt65 = 1;
                    } else if (LA65_0 == 35) {
                        alt65 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 65, 0, input);

                        throw nvae;
                    }
                    switch (alt65) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4111:3:
                    // (otherlv_1= '.' ( (lv_field_2_0= ruleRecordFieldVarMacro
                    // ) ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4111:3:
                        // (otherlv_1= '.' ( (lv_field_2_0=
                        // ruleRecordFieldVarMacro ) ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4111:5:
                        // otherlv_1= '.' ( (lv_field_2_0=
                        // ruleRecordFieldVarMacro ) )
                        {
                            otherlv_1 = (Token) match(input, 18,
                                    FOLLOW_18_in_ruleRecordExpr9219);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getRecordExprAccess()
                                        .getFullStopKeyword_1_0_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4115:1:
                            // ( (lv_field_2_0= ruleRecordFieldVarMacro ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4116:1:
                            // (lv_field_2_0= ruleRecordFieldVarMacro )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4116:1:
                                // (lv_field_2_0= ruleRecordFieldVarMacro )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4117:3:
                                // lv_field_2_0= ruleRecordFieldVarMacro
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getRecordExprAccess()
                                                .getFieldRecordFieldVarMacroParserRuleCall_1_0_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleRecordFieldVarMacro_in_ruleRecordExpr9240);
                                    lv_field_2_0 = ruleRecordFieldVarMacro();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getRecordExprRule());
                                        }
                                        set(current, "field", lv_field_2_0,
                                                "RecordFieldVarMacro");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4134:6:
                    // ( (lv_tuple_3_0= ruleRecordTuple ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4134:6:
                        // ( (lv_tuple_3_0= ruleRecordTuple ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4135:1:
                        // (lv_tuple_3_0= ruleRecordTuple )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4135:1:
                            // (lv_tuple_3_0= ruleRecordTuple )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4136:3:
                            // lv_tuple_3_0= ruleRecordTuple
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getRecordExprAccess()
                                            .getTupleRecordTupleParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleRecordTuple_in_ruleRecordExpr9268);
                                lv_tuple_3_0 = ruleRecordTuple();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getRecordExprRule());
                                    }
                                    set(current, "tuple", lv_tuple_3_0,
                                            "RecordTuple");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordExpr"

    // $ANTLR start "entryRuleQueryExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4160:1:
    // entryRuleQueryExpr returns [EObject current=null] : iv_ruleQueryExpr=
    // ruleQueryExpr EOF ;
    public final EObject entryRuleQueryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4161:2:
            // (iv_ruleQueryExpr= ruleQueryExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4162:2:
            // iv_ruleQueryExpr= ruleQueryExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getQueryExprRule());
                }
                pushFollow(FOLLOW_ruleQueryExpr_in_entryRuleQueryExpr9305);
                iv_ruleQueryExpr = ruleQueryExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleQueryExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleQueryExpr9315);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleQueryExpr"

    // $ANTLR start "ruleQueryExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4169:1:
    // ruleQueryExpr returns [EObject current=null] : ( () otherlv_1= 'query' )
    // ;
    public final EObject ruleQueryExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4172:28:
            // ( ( () otherlv_1= 'query' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4173:1:
            // ( () otherlv_1= 'query' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4173:1:
                // ( () otherlv_1= 'query' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4173:2:
                // () otherlv_1= 'query'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4173:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4174:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getQueryExprAccess()
                                    .getQueryExprAction_0(), current);

                        }

                    }

                    otherlv_1 = (Token) match(input, 60,
                            FOLLOW_60_in_ruleQueryExpr9361);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getQueryExprAccess().getQueryKeyword_1());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleQueryExpr"

    // $ANTLR start "entryRuleCondExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4191:1:
    // entryRuleCondExpr returns [EObject current=null] : iv_ruleCondExpr=
    // ruleCondExpr EOF ;
    public final EObject entryRuleCondExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCondExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4192:2:
            // (iv_ruleCondExpr= ruleCondExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4193:2:
            // iv_ruleCondExpr= ruleCondExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getCondExprRule());
                }
                pushFollow(FOLLOW_ruleCondExpr_in_entryRuleCondExpr9397);
                iv_ruleCondExpr = ruleCondExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleCondExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleCondExpr9407);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleCondExpr"

    // $ANTLR start "ruleCondExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4200:1:
    // ruleCondExpr returns [EObject current=null] : ( () otherlv_1= 'cond' ) ;
    public final EObject ruleCondExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4203:28:
            // ( ( () otherlv_1= 'cond' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4204:1:
            // ( () otherlv_1= 'cond' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4204:1:
                // ( () otherlv_1= 'cond' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4204:2:
                // () otherlv_1= 'cond'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4204:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4205:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getCondExprAccess().getCondExprAction_0(),
                                    current);

                        }

                    }

                    otherlv_1 = (Token) match(input, 61,
                            FOLLOW_61_in_ruleCondExpr9453);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getCondExprAccess().getCondKeyword_1());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleCondExpr"

    // $ANTLR start "entryRuleLetExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4222:1:
    // entryRuleLetExpr returns [EObject current=null] : iv_ruleLetExpr=
    // ruleLetExpr EOF ;
    public final EObject entryRuleLetExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4223:2:
            // (iv_ruleLetExpr= ruleLetExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4224:2:
            // iv_ruleLetExpr= ruleLetExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getLetExprRule());
                }
                pushFollow(FOLLOW_ruleLetExpr_in_entryRuleLetExpr9489);
                iv_ruleLetExpr = ruleLetExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleLetExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleLetExpr9499);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleLetExpr"

    // $ANTLR start "ruleLetExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4231:1:
    // ruleLetExpr returns [EObject current=null] : ( () otherlv_1= 'let' ) ;
    public final EObject ruleLetExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4234:28:
            // ( ( () otherlv_1= 'let' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4235:1:
            // ( () otherlv_1= 'let' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4235:1:
                // ( () otherlv_1= 'let' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4235:2:
                // () otherlv_1= 'let'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4235:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4236:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getLetExprAccess().getLetExprAction_0(),
                                    current);

                        }

                    }

                    otherlv_1 = (Token) match(input, 62,
                            FOLLOW_62_in_ruleLetExpr9545);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess.getLetExprAccess()
                                .getLetKeyword_1());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleLetExpr"

    // $ANTLR start "entryRuleRecordTuple"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4253:1:
    // entryRuleRecordTuple returns [EObject current=null] : iv_ruleRecordTuple=
    // ruleRecordTuple EOF ;
    public final EObject entryRuleRecordTuple() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordTuple = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4254:2:
            // (iv_ruleRecordTuple= ruleRecordTuple EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4255:2:
            // iv_ruleRecordTuple= ruleRecordTuple EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordTupleRule());
                }
                pushFollow(FOLLOW_ruleRecordTuple_in_entryRuleRecordTuple9581);
                iv_ruleRecordTuple = ruleRecordTuple();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordTuple;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleRecordTuple9591);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordTuple"

    // $ANTLR start "ruleRecordTuple"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4262:1:
    // ruleRecordTuple returns [EObject current=null] : ( () otherlv_1= '{' ( (
    // (lv_fields_2_0= ruleRecordFieldExpr ) ) (otherlv_3= ',' ( (lv_fields_4_0=
    // ruleRecordFieldExpr ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleRecordTuple() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        EObject lv_fields_2_0 = null;

        EObject lv_fields_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4265:28:
            // ( ( () otherlv_1= '{' ( ( (lv_fields_2_0= ruleRecordFieldExpr ) )
            // (otherlv_3= ',' ( (lv_fields_4_0= ruleRecordFieldExpr ) ) )* )?
            // otherlv_5= '}' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4266:1:
            // ( () otherlv_1= '{' ( ( (lv_fields_2_0= ruleRecordFieldExpr ) )
            // (otherlv_3= ',' ( (lv_fields_4_0= ruleRecordFieldExpr ) ) )* )?
            // otherlv_5= '}' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4266:1:
                // ( () otherlv_1= '{' ( ( (lv_fields_2_0= ruleRecordFieldExpr )
                // ) (otherlv_3= ',' ( (lv_fields_4_0= ruleRecordFieldExpr ) )
                // )* )? otherlv_5= '}' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4266:2:
                // () otherlv_1= '{' ( ( (lv_fields_2_0= ruleRecordFieldExpr ) )
                // (otherlv_3= ',' ( (lv_fields_4_0= ruleRecordFieldExpr ) ) )*
                // )? otherlv_5= '}'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4266:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4267:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getRecordTupleAccess()
                                    .getRecordTupleAction_0(), current);

                        }

                    }

                    otherlv_1 = (Token) match(input, 35,
                            FOLLOW_35_in_ruleRecordTuple9637);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getRecordTupleAccess()
                                .getLeftCurlyBracketKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4276:1:
                    // ( ( (lv_fields_2_0= ruleRecordFieldExpr ) ) (otherlv_3=
                    // ',' ( (lv_fields_4_0= ruleRecordFieldExpr ) ) )* )?
                    int alt67 = 2;
                    final int LA67_0 = input.LA(1);

                    if (LA67_0 == RULE_ATOM || LA67_0 == RULE_VARIABLE
                            || LA67_0 == 20 || LA67_0 >= 24 && LA67_0 <= 34
                            || LA67_0 == 39 || LA67_0 >= 42 && LA67_0 <= 45
                            || LA67_0 >= 47 && LA67_0 <= 48 || LA67_0 >= 51
                            && LA67_0 <= 52 || LA67_0 == 102) {
                        alt67 = 1;
                    }
                    switch (alt67) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4276:2:
                    // ( (lv_fields_2_0= ruleRecordFieldExpr ) ) (otherlv_3= ','
                    // ( (lv_fields_4_0= ruleRecordFieldExpr ) ) )*
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4276:2:
                        // ( (lv_fields_2_0= ruleRecordFieldExpr ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4277:1:
                        // (lv_fields_2_0= ruleRecordFieldExpr )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4277:1:
                            // (lv_fields_2_0= ruleRecordFieldExpr )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4278:3:
                            // lv_fields_2_0= ruleRecordFieldExpr
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getRecordTupleAccess()
                                            .getFieldsRecordFieldExprParserRuleCall_2_0_0());

                                }
                                pushFollow(FOLLOW_ruleRecordFieldExpr_in_ruleRecordTuple9659);
                                lv_fields_2_0 = ruleRecordFieldExpr();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getRecordTupleRule());
                                    }
                                    add(current, "fields", lv_fields_2_0,
                                            "RecordFieldExpr");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4294:2:
                        // (otherlv_3= ',' ( (lv_fields_4_0= ruleRecordFieldExpr
                        // ) ) )*
                        loop66:
                        do {
                            int alt66 = 2;
                            final int LA66_0 = input.LA(1);

                            if (LA66_0 == 22) {
                                alt66 = 1;
                            }

                            switch (alt66) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4294:4:
                            // otherlv_3= ',' ( (lv_fields_4_0=
                            // ruleRecordFieldExpr ) )
                            {
                                otherlv_3 = (Token) match(input, 22,
                                        FOLLOW_22_in_ruleRecordTuple9672);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_3, grammarAccess
                                            .getRecordTupleAccess()
                                            .getCommaKeyword_2_1_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4298:1:
                                // ( (lv_fields_4_0= ruleRecordFieldExpr ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4299:1:
                                // (lv_fields_4_0= ruleRecordFieldExpr )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4299:1:
                                    // (lv_fields_4_0= ruleRecordFieldExpr )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4300:3:
                                    // lv_fields_4_0= ruleRecordFieldExpr
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getRecordTupleAccess()
                                                    .getFieldsRecordFieldExprParserRuleCall_2_1_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleRecordFieldExpr_in_ruleRecordTuple9693);
                                        lv_fields_4_0 = ruleRecordFieldExpr();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getRecordTupleRule());
                                            }
                                            add(current, "fields",
                                                    lv_fields_4_0,
                                                    "RecordFieldExpr");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                break loop66;
                            }
                        } while (true);

                    }
                        break;

                    }

                    otherlv_5 = (Token) match(input, 36,
                            FOLLOW_36_in_ruleRecordTuple9709);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_5, grammarAccess
                                .getRecordTupleAccess()
                                .getRightCurlyBracketKeyword_3());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordTuple"

    // $ANTLR start "entryRuleRecordFieldExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4328:1:
    // entryRuleRecordFieldExpr returns [EObject current=null] :
    // iv_ruleRecordFieldExpr= ruleRecordFieldExpr EOF ;
    public final EObject entryRuleRecordFieldExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordFieldExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4329:2:
            // (iv_ruleRecordFieldExpr= ruleRecordFieldExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4330:2:
            // iv_ruleRecordFieldExpr= ruleRecordFieldExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordFieldExprRule());
                }
                pushFollow(FOLLOW_ruleRecordFieldExpr_in_entryRuleRecordFieldExpr9745);
                iv_ruleRecordFieldExpr = ruleRecordFieldExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordFieldExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleRecordFieldExpr9755);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordFieldExpr"

    // $ANTLR start "ruleRecordFieldExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4337:1:
    // ruleRecordFieldExpr returns [EObject current=null] : ( ( (lv_ref_0_0=
    // ruleRecordFieldVarMacro ) ) (otherlv_1= '=' ( (lv_value_2_0=
    // ruleExpression ) ) )? (otherlv_3= '::' ( (lv_type_4_0= ruleTopType ) ) )?
    // ) ;
    public final EObject ruleRecordFieldExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        EObject lv_ref_0_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_type_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4340:28:
            // ( ( ( (lv_ref_0_0= ruleRecordFieldVarMacro ) ) (otherlv_1= '=' (
            // (lv_value_2_0= ruleExpression ) ) )? (otherlv_3= '::' (
            // (lv_type_4_0= ruleTopType ) ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4341:1:
            // ( ( (lv_ref_0_0= ruleRecordFieldVarMacro ) ) (otherlv_1= '=' (
            // (lv_value_2_0= ruleExpression ) ) )? (otherlv_3= '::' (
            // (lv_type_4_0= ruleTopType ) ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4341:1:
                // ( ( (lv_ref_0_0= ruleRecordFieldVarMacro ) ) (otherlv_1= '='
                // ( (lv_value_2_0= ruleExpression ) ) )? (otherlv_3= '::' (
                // (lv_type_4_0= ruleTopType ) ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4341:2:
                // ( (lv_ref_0_0= ruleRecordFieldVarMacro ) ) (otherlv_1= '=' (
                // (lv_value_2_0= ruleExpression ) ) )? (otherlv_3= '::' (
                // (lv_type_4_0= ruleTopType ) ) )?
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4341:2:
                    // ( (lv_ref_0_0= ruleRecordFieldVarMacro ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4342:1:
                    // (lv_ref_0_0= ruleRecordFieldVarMacro )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4342:1:
                        // (lv_ref_0_0= ruleRecordFieldVarMacro )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4343:3:
                        // lv_ref_0_0= ruleRecordFieldVarMacro
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getRecordFieldExprAccess()
                                        .getRefRecordFieldVarMacroParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleRecordFieldVarMacro_in_ruleRecordFieldExpr9801);
                            lv_ref_0_0 = ruleRecordFieldVarMacro();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getRecordFieldExprRule());
                                }
                                set(current, "ref", lv_ref_0_0,
                                        "RecordFieldVarMacro");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4359:2:
                    // (otherlv_1= '=' ( (lv_value_2_0= ruleExpression ) ) )?
                    int alt68 = 2;
                    final int LA68_0 = input.LA(1);

                    if (LA68_0 == 37) {
                        alt68 = 1;
                    }
                    switch (alt68) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4359:4:
                    // otherlv_1= '=' ( (lv_value_2_0= ruleExpression ) )
                    {
                        otherlv_1 = (Token) match(input, 37,
                                FOLLOW_37_in_ruleRecordFieldExpr9814);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getRecordFieldExprAccess()
                                    .getEqualsSignKeyword_1_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4363:1:
                        // ( (lv_value_2_0= ruleExpression ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4364:1:
                        // (lv_value_2_0= ruleExpression )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4364:1:
                            // (lv_value_2_0= ruleExpression )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4365:3:
                            // lv_value_2_0= ruleExpression
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getRecordFieldExprAccess()
                                            .getValueExpressionParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleExpression_in_ruleRecordFieldExpr9835);
                                lv_value_2_0 = ruleExpression();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getRecordFieldExprRule());
                                    }
                                    set(current, "value", lv_value_2_0,
                                            "Expression");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4381:4:
                    // (otherlv_3= '::' ( (lv_type_4_0= ruleTopType ) ) )?
                    int alt69 = 2;
                    final int LA69_0 = input.LA(1);

                    if (LA69_0 == 38) {
                        alt69 = 1;
                    }
                    switch (alt69) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4381:6:
                    // otherlv_3= '::' ( (lv_type_4_0= ruleTopType ) )
                    {
                        otherlv_3 = (Token) match(input, 38,
                                FOLLOW_38_in_ruleRecordFieldExpr9850);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_3, grammarAccess
                                    .getRecordFieldExprAccess()
                                    .getColonColonKeyword_2_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4385:1:
                        // ( (lv_type_4_0= ruleTopType ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4386:1:
                        // (lv_type_4_0= ruleTopType )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4386:1:
                            // (lv_type_4_0= ruleTopType )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4387:3:
                            // lv_type_4_0= ruleTopType
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getRecordFieldExprAccess()
                                            .getTypeTopTypeParserRuleCall_2_1_0());

                                }
                                pushFollow(FOLLOW_ruleTopType_in_ruleRecordFieldExpr9871);
                                lv_type_4_0 = ruleTopType();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getRecordFieldExprRule());
                                    }
                                    set(current, "type", lv_type_4_0, "TopType");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordFieldExpr"

    // $ANTLR start "entryRuleLiteralExpressionNoNumber"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4411:1:
    // entryRuleLiteralExpressionNoNumber returns [EObject current=null] :
    // iv_ruleLiteralExpressionNoNumber= ruleLiteralExpressionNoNumber EOF ;
    public final EObject entryRuleLiteralExpressionNoNumber()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralExpressionNoNumber = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4412:2:
            // (iv_ruleLiteralExpressionNoNumber= ruleLiteralExpressionNoNumber
            // EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4413:2:
            // iv_ruleLiteralExpressionNoNumber= ruleLiteralExpressionNoNumber
            // EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess
                            .getLiteralExpressionNoNumberRule());
                }
                pushFollow(FOLLOW_ruleLiteralExpressionNoNumber_in_entryRuleLiteralExpressionNoNumber9909);
                iv_ruleLiteralExpressionNoNumber = ruleLiteralExpressionNoNumber();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleLiteralExpressionNoNumber;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleLiteralExpressionNoNumber9919);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleLiteralExpressionNoNumber"

    // $ANTLR start "ruleLiteralExpressionNoNumber"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4420:1:
    // ruleLiteralExpressionNoNumber returns [EObject current=null] : ( ( () (
    // (lv_value_1_0= ruleNAME ) ) ) | this_VariableLiteral_2=
    // ruleVariableLiteral | ( () ( (lv_value_4_0= RULE_CHAR ) ) ) |
    // this_MacroLiteral_5= ruleMacroLiteral | this_StringLiteral_6=
    // ruleStringLiteral ) ;
    public final EObject ruleLiteralExpressionNoNumber()
            throws RecognitionException {
        EObject current = null;

        Token lv_value_4_0 = null;
        AntlrDatatypeRuleToken lv_value_1_0 = null;

        EObject this_VariableLiteral_2 = null;

        EObject this_MacroLiteral_5 = null;

        EObject this_StringLiteral_6 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4423:28:
            // ( ( ( () ( (lv_value_1_0= ruleNAME ) ) ) |
            // this_VariableLiteral_2= ruleVariableLiteral | ( () (
            // (lv_value_4_0= RULE_CHAR ) ) ) | this_MacroLiteral_5=
            // ruleMacroLiteral | this_StringLiteral_6= ruleStringLiteral ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4424:1:
            // ( ( () ( (lv_value_1_0= ruleNAME ) ) ) | this_VariableLiteral_2=
            // ruleVariableLiteral | ( () ( (lv_value_4_0= RULE_CHAR ) ) ) |
            // this_MacroLiteral_5= ruleMacroLiteral | this_StringLiteral_6=
            // ruleStringLiteral )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4424:1:
                // ( ( () ( (lv_value_1_0= ruleNAME ) ) ) |
                // this_VariableLiteral_2= ruleVariableLiteral | ( () (
                // (lv_value_4_0= RULE_CHAR ) ) ) | this_MacroLiteral_5=
                // ruleMacroLiteral | this_StringLiteral_6= ruleStringLiteral )
                int alt70 = 5;
                switch (input.LA(1)) {
                case RULE_ATOM:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 52: {
                    alt70 = 1;
                }
                    break;
                case RULE_VARIABLE: {
                    alt70 = 2;
                }
                    break;
                case RULE_CHAR: {
                    alt70 = 3;
                }
                    break;
                case 51:
                case 102: {
                    alt70 = 4;
                }
                    break;
                case RULE_STRING: {
                    alt70 = 5;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 70, 0, input);

                    throw nvae;
                }

                switch (alt70) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4424:2:
                // ( () ( (lv_value_1_0= ruleNAME ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4424:2:
                    // ( () ( (lv_value_1_0= ruleNAME ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4424:3:
                    // () ( (lv_value_1_0= ruleNAME ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4424:3:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4425:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getLiteralExpressionNoNumberAccess()
                                        .getAtomAction_0_0(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4430:2:
                        // ( (lv_value_1_0= ruleNAME ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4431:1:
                        // (lv_value_1_0= ruleNAME )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4431:1:
                            // (lv_value_1_0= ruleNAME )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4432:3:
                            // lv_value_1_0= ruleNAME
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getLiteralExpressionNoNumberAccess()
                                            .getValueNAMEParserRuleCall_0_1_0());

                                }
                                pushFollow(FOLLOW_ruleNAME_in_ruleLiteralExpressionNoNumber9975);
                                lv_value_1_0 = ruleNAME();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getLiteralExpressionNoNumberRule());
                                    }
                                    set(current, "value", lv_value_1_0, "NAME");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4450:5:
                // this_VariableLiteral_2= ruleVariableLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getLiteralExpressionNoNumberAccess()
                                .getVariableLiteralParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleVariableLiteral_in_ruleLiteralExpressionNoNumber10004);
                    this_VariableLiteral_2 = ruleVariableLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_VariableLiteral_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4459:6:
                // ( () ( (lv_value_4_0= RULE_CHAR ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4459:6:
                    // ( () ( (lv_value_4_0= RULE_CHAR ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4459:7:
                    // () ( (lv_value_4_0= RULE_CHAR ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4459:7:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4460:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getLiteralExpressionNoNumberAccess()
                                        .getErlCharAction_2_0(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4465:2:
                        // ( (lv_value_4_0= RULE_CHAR ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4466:1:
                        // (lv_value_4_0= RULE_CHAR )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4466:1:
                            // (lv_value_4_0= RULE_CHAR )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4467:3:
                            // lv_value_4_0= RULE_CHAR
                            {
                                lv_value_4_0 = (Token) match(input, RULE_CHAR,
                                        FOLLOW_RULE_CHAR_in_ruleLiteralExpressionNoNumber10036);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(
                                            lv_value_4_0,
                                            grammarAccess
                                                    .getLiteralExpressionNoNumberAccess()
                                                    .getValueCHARTerminalRuleCall_2_1_0());

                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElement(grammarAccess
                                                .getLiteralExpressionNoNumberRule());
                                    }
                                    setWithLastConsumed(current, "value",
                                            lv_value_4_0, "CHAR");

                                }

                            }

                        }

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4485:5:
                // this_MacroLiteral_5= ruleMacroLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getLiteralExpressionNoNumberAccess()
                                .getMacroLiteralParserRuleCall_3());

                    }
                    pushFollow(FOLLOW_ruleMacroLiteral_in_ruleLiteralExpressionNoNumber10070);
                    this_MacroLiteral_5 = ruleMacroLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_MacroLiteral_5;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 5:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4495:5:
                // this_StringLiteral_6= ruleStringLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getLiteralExpressionNoNumberAccess()
                                .getStringLiteralParserRuleCall_4());

                    }
                    pushFollow(FOLLOW_ruleStringLiteral_in_ruleLiteralExpressionNoNumber10097);
                    this_StringLiteral_6 = ruleStringLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_StringLiteral_6;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleLiteralExpressionNoNumber"

    // $ANTLR start "entryRuleModuleRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4511:1:
    // entryRuleModuleRef returns [EObject current=null] : iv_ruleModuleRef=
    // ruleModuleRef EOF ;
    public final EObject entryRuleModuleRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleRef = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4512:2:
            // (iv_ruleModuleRef= ruleModuleRef EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4513:2:
            // iv_ruleModuleRef= ruleModuleRef EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getModuleRefRule());
                }
                pushFollow(FOLLOW_ruleModuleRef_in_entryRuleModuleRef10132);
                iv_ruleModuleRef = ruleModuleRef();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleModuleRef;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleModuleRef10142);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleModuleRef"

    // $ANTLR start "ruleModuleRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4520:1:
    // ruleModuleRef returns [EObject current=null] : ( () ( ( ruleNAME ) ) ) ;
    public final EObject ruleModuleRef() throws RecognitionException {
        EObject current = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4523:28:
            // ( ( () ( ( ruleNAME ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4524:1:
            // ( () ( ( ruleNAME ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4524:1:
                // ( () ( ( ruleNAME ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4524:2:
                // () ( ( ruleNAME ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4524:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4525:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getModuleRefAccess().getAtomRefAction_0(),
                                    current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4530:2:
                    // ( ( ruleNAME ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4531:1:
                    // ( ruleNAME )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4531:1:
                        // ( ruleNAME )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4532:3:
                        // ruleNAME
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getModuleRefRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getModuleRefAccess()
                                        .getValueModuleCrossReference_1_0());

                            }
                            pushFollow(FOLLOW_ruleNAME_in_ruleModuleRef10199);
                            ruleNAME();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleModuleRef"

    // $ANTLR start "entryRuleFunctionRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4553:1:
    // entryRuleFunctionRef returns [EObject current=null] : iv_ruleFunctionRef=
    // ruleFunctionRef EOF ;
    public final EObject entryRuleFunctionRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionRef = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4554:2:
            // (iv_ruleFunctionRef= ruleFunctionRef EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4555:2:
            // iv_ruleFunctionRef= ruleFunctionRef EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFunctionRefRule());
                }
                pushFollow(FOLLOW_ruleFunctionRef_in_entryRuleFunctionRef10235);
                iv_ruleFunctionRef = ruleFunctionRef();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFunctionRef;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFunctionRef10245);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFunctionRef"

    // $ANTLR start "ruleFunctionRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4562:1:
    // ruleFunctionRef returns [EObject current=null] : ( () ( ( ruleNAME ) ) )
    // ;
    public final EObject ruleFunctionRef() throws RecognitionException {
        EObject current = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4565:28:
            // ( ( () ( ( ruleNAME ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4566:1:
            // ( () ( ( ruleNAME ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4566:1:
                // ( () ( ( ruleNAME ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4566:2:
                // () ( ( ruleNAME ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4566:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4567:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getFunctionRefAccess()
                                    .getAtomRefAction_0(), current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4572:2:
                    // ( ( ruleNAME ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4573:1:
                    // ( ruleNAME )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4573:1:
                        // ( ruleNAME )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4574:3:
                        // ruleNAME
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getFunctionRefRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunctionRefAccess()
                                        .getValueFunctionCrossReference_1_0());

                            }
                            pushFollow(FOLLOW_ruleNAME_in_ruleFunctionRef10302);
                            ruleNAME();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFunctionRef"

    // $ANTLR start "entryRuleRecordRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4595:1:
    // entryRuleRecordRef returns [EObject current=null] : iv_ruleRecordRef=
    // ruleRecordRef EOF ;
    public final EObject entryRuleRecordRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordRef = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4596:2:
            // (iv_ruleRecordRef= ruleRecordRef EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4597:2:
            // iv_ruleRecordRef= ruleRecordRef EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordRefRule());
                }
                pushFollow(FOLLOW_ruleRecordRef_in_entryRuleRecordRef10338);
                iv_ruleRecordRef = ruleRecordRef();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordRef;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleRecordRef10348);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordRef"

    // $ANTLR start "ruleRecordRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4604:1:
    // ruleRecordRef returns [EObject current=null] : ( () ( ( ruleNAME ) ) ) ;
    public final EObject ruleRecordRef() throws RecognitionException {
        EObject current = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4607:28:
            // ( ( () ( ( ruleNAME ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4608:1:
            // ( () ( ( ruleNAME ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4608:1:
                // ( () ( ( ruleNAME ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4608:2:
                // () ( ( ruleNAME ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4608:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4609:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getRecordRefAccess().getAtomRefAction_0(),
                                    current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4614:2:
                    // ( ( ruleNAME ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4615:1:
                    // ( ruleNAME )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4615:1:
                        // ( ruleNAME )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4616:3:
                        // ruleNAME
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getRecordRefRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getRecordRefAccess()
                                        .getValueRecordAttributeCrossReference_1_0());

                            }
                            pushFollow(FOLLOW_ruleNAME_in_ruleRecordRef10405);
                            ruleNAME();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordRef"

    // $ANTLR start "entryRuleRecordFieldRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4637:1:
    // entryRuleRecordFieldRef returns [EObject current=null] :
    // iv_ruleRecordFieldRef= ruleRecordFieldRef EOF ;
    public final EObject entryRuleRecordFieldRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordFieldRef = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4638:2:
            // (iv_ruleRecordFieldRef= ruleRecordFieldRef EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4639:2:
            // iv_ruleRecordFieldRef= ruleRecordFieldRef EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordFieldRefRule());
                }
                pushFollow(FOLLOW_ruleRecordFieldRef_in_entryRuleRecordFieldRef10441);
                iv_ruleRecordFieldRef = ruleRecordFieldRef();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordFieldRef;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleRecordFieldRef10451);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordFieldRef"

    // $ANTLR start "ruleRecordFieldRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4646:1:
    // ruleRecordFieldRef returns [EObject current=null] : ( () ( ( ruleNAME ) )
    // ) ;
    public final EObject ruleRecordFieldRef() throws RecognitionException {
        EObject current = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4649:28:
            // ( ( () ( ( ruleNAME ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4650:1:
            // ( () ( ( ruleNAME ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4650:1:
                // ( () ( ( ruleNAME ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4650:2:
                // () ( ( ruleNAME ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4650:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4651:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getRecordFieldRefAccess()
                                    .getAtomRefAction_0(), current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4656:2:
                    // ( ( ruleNAME ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4657:1:
                    // ( ruleNAME )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4657:1:
                        // ( ruleNAME )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4658:3:
                        // ruleNAME
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getRecordFieldRefRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getRecordFieldRefAccess()
                                        .getValueRecordFieldDefCrossReference_1_0());

                            }
                            pushFollow(FOLLOW_ruleNAME_in_ruleRecordFieldRef10508);
                            ruleNAME();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordFieldRef"

    // $ANTLR start "entryRuleTypeRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4679:1:
    // entryRuleTypeRef returns [EObject current=null] : iv_ruleTypeRef=
    // ruleTypeRef EOF ;
    public final EObject entryRuleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRef = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4680:2:
            // (iv_ruleTypeRef= ruleTypeRef EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4681:2:
            // iv_ruleTypeRef= ruleTypeRef EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTypeRefRule());
                }
                pushFollow(FOLLOW_ruleTypeRef_in_entryRuleTypeRef10544);
                iv_ruleTypeRef = ruleTypeRef();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTypeRef;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTypeRef10554);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTypeRef"

    // $ANTLR start "ruleTypeRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4688:1:
    // ruleTypeRef returns [EObject current=null] : ( () ( ( ruleNAME ) ) ) ;
    public final EObject ruleTypeRef() throws RecognitionException {
        EObject current = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4691:28:
            // ( ( () ( ( ruleNAME ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4692:1:
            // ( () ( ( ruleNAME ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4692:1:
                // ( () ( ( ruleNAME ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4692:2:
                // () ( ( ruleNAME ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4692:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4693:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getTypeRefAccess().getAtomRefAction_0(),
                                    current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4698:2:
                    // ( ( ruleNAME ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4699:1:
                    // ( ruleNAME )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4699:1:
                        // ( ruleNAME )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4700:3:
                        // ruleNAME
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getTypeRefRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getTypeRefAccess()
                                        .getValueTypeAttributeCrossReference_1_0());

                            }
                            pushFollow(FOLLOW_ruleNAME_in_ruleTypeRef10611);
                            ruleNAME();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTypeRef"

    // $ANTLR start "entryRuleMacroLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4721:1:
    // entryRuleMacroLiteral returns [EObject current=null] :
    // iv_ruleMacroLiteral= ruleMacroLiteral EOF ;
    public final EObject entryRuleMacroLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMacroLiteral = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4722:2:
            // (iv_ruleMacroLiteral= ruleMacroLiteral EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4723:2:
            // iv_ruleMacroLiteral= ruleMacroLiteral EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getMacroLiteralRule());
                }
                pushFollow(FOLLOW_ruleMacroLiteral_in_entryRuleMacroLiteral10647);
                iv_ruleMacroLiteral = ruleMacroLiteral();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleMacroLiteral;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleMacroLiteral10657);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleMacroLiteral"

    // $ANTLR start "ruleMacroLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4730:1:
    // ruleMacroLiteral returns [EObject current=null] : ( () ( ( ruleMACRO ) )
    // ) ;
    public final EObject ruleMacroLiteral() throws RecognitionException {
        EObject current = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4733:28:
            // ( ( () ( ( ruleMACRO ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4734:1:
            // ( () ( ( ruleMACRO ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4734:1:
                // ( () ( ( ruleMACRO ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4734:2:
                // () ( ( ruleMACRO ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4734:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4735:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(
                                    grammarAccess.getMacroLiteralAccess()
                                            .getMacroAction_0(), current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4740:2:
                    // ( ( ruleMACRO ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4741:1:
                    // ( ruleMACRO )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4741:1:
                        // ( ruleMACRO )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4742:3:
                        // ruleMACRO
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getMacroLiteralRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getMacroLiteralAccess()
                                        .getValueDefineAttributeCrossReference_1_0());

                            }
                            pushFollow(FOLLOW_ruleMACRO_in_ruleMacroLiteral10714);
                            ruleMACRO();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleMacroLiteral"

    // $ANTLR start "entryRuleMacroRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4763:1:
    // entryRuleMacroRef returns [EObject current=null] : iv_ruleMacroRef=
    // ruleMacroRef EOF ;
    public final EObject entryRuleMacroRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMacroRef = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4764:2:
            // (iv_ruleMacroRef= ruleMacroRef EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4765:2:
            // iv_ruleMacroRef= ruleMacroRef EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getMacroRefRule());
                }
                pushFollow(FOLLOW_ruleMacroRef_in_entryRuleMacroRef10750);
                iv_ruleMacroRef = ruleMacroRef();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleMacroRef;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleMacroRef10760);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleMacroRef"

    // $ANTLR start "ruleMacroRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4772:1:
    // ruleMacroRef returns [EObject current=null] : ( () ( ( ruleNAMEVAR ) ) )
    // ;
    public final EObject ruleMacroRef() throws RecognitionException {
        EObject current = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4775:28:
            // ( ( () ( ( ruleNAMEVAR ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4776:1:
            // ( () ( ( ruleNAMEVAR ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4776:1:
                // ( () ( ( ruleNAMEVAR ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4776:2:
                // () ( ( ruleNAMEVAR ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4776:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4777:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getMacroRefAccess().getMacroAction_0(),
                                    current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4782:2:
                    // ( ( ruleNAMEVAR ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4783:1:
                    // ( ruleNAMEVAR )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4783:1:
                        // ( ruleNAMEVAR )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4784:3:
                        // ruleNAMEVAR
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getMacroRefRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getMacroRefAccess()
                                        .getValueDefineAttributeCrossReference_1_0());

                            }
                            pushFollow(FOLLOW_ruleNAMEVAR_in_ruleMacroRef10817);
                            ruleNAMEVAR();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleMacroRef"

    // $ANTLR start "entryRuleVariableLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4805:1:
    // entryRuleVariableLiteral returns [EObject current=null] :
    // iv_ruleVariableLiteral= ruleVariableLiteral EOF ;
    public final EObject entryRuleVariableLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableLiteral = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4806:2:
            // (iv_ruleVariableLiteral= ruleVariableLiteral EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4807:2:
            // iv_ruleVariableLiteral= ruleVariableLiteral EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getVariableLiteralRule());
                }
                pushFollow(FOLLOW_ruleVariableLiteral_in_entryRuleVariableLiteral10853);
                iv_ruleVariableLiteral = ruleVariableLiteral();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleVariableLiteral;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleVariableLiteral10863);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleVariableLiteral"

    // $ANTLR start "ruleVariableLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4814:1:
    // ruleVariableLiteral returns [EObject current=null] : ( () ( (otherlv_1=
    // RULE_VARIABLE ) ) ) ;
    public final EObject ruleVariableLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4817:28:
            // ( ( () ( (otherlv_1= RULE_VARIABLE ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4818:1:
            // ( () ( (otherlv_1= RULE_VARIABLE ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4818:1:
                // ( () ( (otherlv_1= RULE_VARIABLE ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4818:2:
                // () ( (otherlv_1= RULE_VARIABLE ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4818:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4819:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getVariableLiteralAccess()
                                    .getVariableAction_0(), current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4824:2:
                    // ( (otherlv_1= RULE_VARIABLE ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4825:1:
                    // (otherlv_1= RULE_VARIABLE )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4825:1:
                        // (otherlv_1= RULE_VARIABLE )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4826:3:
                        // otherlv_1= RULE_VARIABLE
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getVariableLiteralRule());
                                }

                            }
                            otherlv_1 = (Token) match(input, RULE_VARIABLE,
                                    FOLLOW_RULE_VARIABLE_in_ruleVariableLiteral10917);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getVariableLiteralAccess()
                                        .getValueExpressionCrossReference_1_0());

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleVariableLiteral"

    // $ANTLR start "entryRuleStringLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4845:1:
    // entryRuleStringLiteral returns [EObject current=null] :
    // iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteral = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4846:2:
            // (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4847:2:
            // iv_ruleStringLiteral= ruleStringLiteral EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getStringLiteralRule());
                }
                pushFollow(FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral10953);
                iv_ruleStringLiteral = ruleStringLiteral();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleStringLiteral;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleStringLiteral10963);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleStringLiteral"

    // $ANTLR start "ruleStringLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4854:1:
    // ruleStringLiteral returns [EObject current=null] : ( ( (lv_parts_0_0=
    // ruleStringLiteralLiteral ) ) ( (lv_parts_1_0= ruleStringLiteralPart ) )*
    // ) ;
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_parts_0_0 = null;

        EObject lv_parts_1_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4857:28:
            // ( ( ( (lv_parts_0_0= ruleStringLiteralLiteral ) ) (
            // (lv_parts_1_0= ruleStringLiteralPart ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4858:1:
            // ( ( (lv_parts_0_0= ruleStringLiteralLiteral ) ) ( (lv_parts_1_0=
            // ruleStringLiteralPart ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4858:1:
                // ( ( (lv_parts_0_0= ruleStringLiteralLiteral ) ) (
                // (lv_parts_1_0= ruleStringLiteralPart ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4858:2:
                // ( (lv_parts_0_0= ruleStringLiteralLiteral ) ) (
                // (lv_parts_1_0= ruleStringLiteralPart ) )*
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4858:2:
                    // ( (lv_parts_0_0= ruleStringLiteralLiteral ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4859:1:
                    // (lv_parts_0_0= ruleStringLiteralLiteral )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4859:1:
                        // (lv_parts_0_0= ruleStringLiteralLiteral )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4860:3:
                        // lv_parts_0_0= ruleStringLiteralLiteral
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getStringLiteralAccess()
                                        .getPartsStringLiteralLiteralParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleStringLiteralLiteral_in_ruleStringLiteral11009);
                            lv_parts_0_0 = ruleStringLiteralLiteral();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getStringLiteralRule());
                                }
                                add(current, "parts", lv_parts_0_0,
                                        "StringLiteralLiteral");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4876:2:
                    // ( (lv_parts_1_0= ruleStringLiteralPart ) )*
                    loop71:
                    do {
                        int alt71 = 2;
                        final int LA71_0 = input.LA(1);

                        if (LA71_0 == RULE_STRING || LA71_0 == 51
                                || LA71_0 == 102) {
                            alt71 = 1;
                        }

                        switch (alt71) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4877:1:
                        // (lv_parts_1_0= ruleStringLiteralPart )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4877:1:
                            // (lv_parts_1_0= ruleStringLiteralPart )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4878:3:
                            // lv_parts_1_0= ruleStringLiteralPart
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getStringLiteralAccess()
                                            .getPartsStringLiteralPartParserRuleCall_1_0());

                                }
                                pushFollow(FOLLOW_ruleStringLiteralPart_in_ruleStringLiteral11030);
                                lv_parts_1_0 = ruleStringLiteralPart();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getStringLiteralRule());
                                    }
                                    add(current, "parts", lv_parts_1_0,
                                            "StringLiteralPart");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }
                            break;

                        default:
                            break loop71;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleStringLiteral"

    // $ANTLR start "entryRuleStringLiteralPart"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4902:1:
    // entryRuleStringLiteralPart returns [EObject current=null] :
    // iv_ruleStringLiteralPart= ruleStringLiteralPart EOF ;
    public final EObject entryRuleStringLiteralPart()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteralPart = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4903:2:
            // (iv_ruleStringLiteralPart= ruleStringLiteralPart EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4904:2:
            // iv_ruleStringLiteralPart= ruleStringLiteralPart EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getStringLiteralPartRule());
                }
                pushFollow(FOLLOW_ruleStringLiteralPart_in_entryRuleStringLiteralPart11067);
                iv_ruleStringLiteralPart = ruleStringLiteralPart();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleStringLiteralPart;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleStringLiteralPart11077);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleStringLiteralPart"

    // $ANTLR start "ruleStringLiteralPart"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4911:1:
    // ruleStringLiteralPart returns [EObject current=null] :
    // (this_StringLiteralLiteral_0= ruleStringLiteralLiteral | ( (lv_macro_1_0=
    // ruleMacroCall ) ) ) ;
    public final EObject ruleStringLiteralPart() throws RecognitionException {
        EObject current = null;

        EObject this_StringLiteralLiteral_0 = null;

        EObject lv_macro_1_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4914:28:
            // ( (this_StringLiteralLiteral_0= ruleStringLiteralLiteral | (
            // (lv_macro_1_0= ruleMacroCall ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4915:1:
            // (this_StringLiteralLiteral_0= ruleStringLiteralLiteral | (
            // (lv_macro_1_0= ruleMacroCall ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4915:1:
                // (this_StringLiteralLiteral_0= ruleStringLiteralLiteral | (
                // (lv_macro_1_0= ruleMacroCall ) ) )
                int alt72 = 2;
                final int LA72_0 = input.LA(1);

                if (LA72_0 == RULE_STRING) {
                    alt72 = 1;
                } else if (LA72_0 == 51 || LA72_0 == 102) {
                    alt72 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 72, 0, input);

                    throw nvae;
                }
                switch (alt72) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4916:5:
                // this_StringLiteralLiteral_0= ruleStringLiteralLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getStringLiteralPartAccess()
                                .getStringLiteralLiteralParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleStringLiteralLiteral_in_ruleStringLiteralPart11124);
                    this_StringLiteralLiteral_0 = ruleStringLiteralLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_StringLiteralLiteral_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4925:6:
                // ( (lv_macro_1_0= ruleMacroCall ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4925:6:
                    // ( (lv_macro_1_0= ruleMacroCall ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4926:1:
                    // (lv_macro_1_0= ruleMacroCall )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4926:1:
                        // (lv_macro_1_0= ruleMacroCall )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4927:3:
                        // lv_macro_1_0= ruleMacroCall
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getStringLiteralPartAccess()
                                        .getMacroMacroCallParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleMacroCall_in_ruleStringLiteralPart11150);
                            lv_macro_1_0 = ruleMacroCall();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getStringLiteralPartRule());
                                }
                                set(current, "macro", lv_macro_1_0, "MacroCall");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleStringLiteralPart"

    // $ANTLR start "entryRuleStringLiteralLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4951:1:
    // entryRuleStringLiteralLiteral returns [EObject current=null] :
    // iv_ruleStringLiteralLiteral= ruleStringLiteralLiteral EOF ;
    public final EObject entryRuleStringLiteralLiteral()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteralLiteral = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4952:2:
            // (iv_ruleStringLiteralLiteral= ruleStringLiteralLiteral EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4953:2:
            // iv_ruleStringLiteralLiteral= ruleStringLiteralLiteral EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess
                            .getStringLiteralLiteralRule());
                }
                pushFollow(FOLLOW_ruleStringLiteralLiteral_in_entryRuleStringLiteralLiteral11186);
                iv_ruleStringLiteralLiteral = ruleStringLiteralLiteral();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleStringLiteralLiteral;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleStringLiteralLiteral11196);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleStringLiteralLiteral"

    // $ANTLR start "ruleStringLiteralLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4960:1:
    // ruleStringLiteralLiteral returns [EObject current=null] : (
    // (lv_string_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringLiteralLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_string_0_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4963:28:
            // ( ( (lv_string_0_0= RULE_STRING ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4964:1:
            // ( (lv_string_0_0= RULE_STRING ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4964:1:
                // ( (lv_string_0_0= RULE_STRING ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4965:1:
                // (lv_string_0_0= RULE_STRING )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4965:1:
                    // (lv_string_0_0= RULE_STRING )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4966:3:
                    // lv_string_0_0= RULE_STRING
                    {
                        lv_string_0_0 = (Token) match(input, RULE_STRING,
                                FOLLOW_RULE_STRING_in_ruleStringLiteralLiteral11237);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(lv_string_0_0, grammarAccess
                                    .getStringLiteralLiteralAccess()
                                    .getStringSTRINGTerminalRuleCall_0());

                        }
                        if (state.backtracking == 0) {

                            if (current == null) {
                                current = createModelElement(grammarAccess
                                        .getStringLiteralLiteralRule());
                            }
                            setWithLastConsumed(current, "string",
                                    lv_string_0_0, "STRING");

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleStringLiteralLiteral"

    // $ANTLR start "entryRuleLiteralExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4990:1:
    // entryRuleLiteralExpression returns [EObject current=null] :
    // iv_ruleLiteralExpression= ruleLiteralExpression EOF ;
    public final EObject entryRuleLiteralExpression()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralExpression = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4991:2:
            // (iv_ruleLiteralExpression= ruleLiteralExpression EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4992:2:
            // iv_ruleLiteralExpression= ruleLiteralExpression EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getLiteralExpressionRule());
                }
                pushFollow(FOLLOW_ruleLiteralExpression_in_entryRuleLiteralExpression11277);
                iv_ruleLiteralExpression = ruleLiteralExpression();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleLiteralExpression;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleLiteralExpression11287);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleLiteralExpression"

    // $ANTLR start "ruleLiteralExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4999:1:
    // ruleLiteralExpression returns [EObject current=null] :
    // (this_LiteralExpressionNoNumber_0= ruleLiteralExpressionNoNumber |
    // this_IntegerLiteral_1= ruleIntegerLiteral | ( () ( (lv_value_3_0=
    // ruleFLOAT ) ) ) ) ;
    public final EObject ruleLiteralExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LiteralExpressionNoNumber_0 = null;

        EObject this_IntegerLiteral_1 = null;

        AntlrDatatypeRuleToken lv_value_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5002:28:
            // ( (this_LiteralExpressionNoNumber_0=
            // ruleLiteralExpressionNoNumber | this_IntegerLiteral_1=
            // ruleIntegerLiteral | ( () ( (lv_value_3_0= ruleFLOAT ) ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5003:1:
            // (this_LiteralExpressionNoNumber_0= ruleLiteralExpressionNoNumber
            // | this_IntegerLiteral_1= ruleIntegerLiteral | ( () (
            // (lv_value_3_0= ruleFLOAT ) ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5003:1:
                // (this_LiteralExpressionNoNumber_0=
                // ruleLiteralExpressionNoNumber | this_IntegerLiteral_1=
                // ruleIntegerLiteral | ( () ( (lv_value_3_0= ruleFLOAT ) ) ) )
                int alt73 = 3;
                switch (input.LA(1)) {
                case RULE_STRING:
                case RULE_ATOM:
                case RULE_CHAR:
                case RULE_VARIABLE:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 51:
                case 52:
                case 102: {
                    alt73 = 1;
                }
                    break;
                case RULE_INT: {
                    final int LA73_2 = input.LA(2);

                    if (LA73_2 == EOF || LA73_2 == 19 || LA73_2 >= 21
                            && LA73_2 <= 23 || LA73_2 >= 36 && LA73_2 <= 38
                            || LA73_2 == 41 || LA73_2 == 46 || LA73_2 >= 49
                            && LA73_2 <= 50 || LA73_2 >= 53 && LA73_2 <= 57
                            || LA73_2 == 59 || LA73_2 == 65 || LA73_2 == 67
                            || LA73_2 == 69 || LA73_2 >= 71 && LA73_2 <= 72
                            || LA73_2 >= 74 && LA73_2 <= 88 || LA73_2 >= 91
                            && LA73_2 <= 101) {
                        alt73 = 2;
                    } else if (LA73_2 == 18) {
                        final int LA73_4 = input.LA(3);

                        if (LA73_4 == EOF || LA73_4 == RULE_ATOM
                                || LA73_4 >= 19 && LA73_4 <= 20 || LA73_4 >= 24
                                && LA73_4 <= 34 || LA73_4 == 39 || LA73_4 >= 42
                                && LA73_4 <= 45 || LA73_4 >= 47 && LA73_4 <= 48
                                || LA73_4 >= 51 && LA73_4 <= 52
                                || LA73_4 == 102) {
                            alt73 = 2;
                        } else if (LA73_4 == RULE_INT || LA73_4 == RULE_EXT_INT) {
                            alt73 = 3;
                        } else {
                            if (state.backtracking > 0) {
                                state.failed = true;
                                return current;
                            }
                            final NoViableAltException nvae = new NoViableAltException(
                                    "", 73, 4, input);

                            throw nvae;
                        }
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 73, 2, input);

                        throw nvae;
                    }
                }
                    break;
                case RULE_BASED_INT: {
                    alt73 = 2;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 73, 0, input);

                    throw nvae;
                }

                switch (alt73) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5004:5:
                // this_LiteralExpressionNoNumber_0=
                // ruleLiteralExpressionNoNumber
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getLiteralExpressionAccess()
                                .getLiteralExpressionNoNumberParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleLiteralExpressionNoNumber_in_ruleLiteralExpression11334);
                    this_LiteralExpressionNoNumber_0 = ruleLiteralExpressionNoNumber();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_LiteralExpressionNoNumber_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5014:5:
                // this_IntegerLiteral_1= ruleIntegerLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getLiteralExpressionAccess()
                                .getIntegerLiteralParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleIntegerLiteral_in_ruleLiteralExpression11361);
                    this_IntegerLiteral_1 = ruleIntegerLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_IntegerLiteral_1;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5023:6:
                // ( () ( (lv_value_3_0= ruleFLOAT ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5023:6:
                    // ( () ( (lv_value_3_0= ruleFLOAT ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5023:7:
                    // () ( (lv_value_3_0= ruleFLOAT ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5023:7:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5024:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getLiteralExpressionAccess()
                                        .getErlFloatAction_2_0(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5029:2:
                        // ( (lv_value_3_0= ruleFLOAT ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5030:1:
                        // (lv_value_3_0= ruleFLOAT )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5030:1:
                            // (lv_value_3_0= ruleFLOAT )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5031:3:
                            // lv_value_3_0= ruleFLOAT
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getLiteralExpressionAccess()
                                            .getValueFLOATParserRuleCall_2_1_0());

                                }
                                pushFollow(FOLLOW_ruleFLOAT_in_ruleLiteralExpression11397);
                                lv_value_3_0 = ruleFLOAT();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getLiteralExpressionRule());
                                    }
                                    set(current, "value", lv_value_3_0, "FLOAT");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleLiteralExpression"

    // $ANTLR start "entryRuleIntegerLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5055:1:
    // entryRuleIntegerLiteral returns [EObject current=null] :
    // iv_ruleIntegerLiteral= ruleIntegerLiteral EOF ;
    public final EObject entryRuleIntegerLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerLiteral = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5056:2:
            // (iv_ruleIntegerLiteral= ruleIntegerLiteral EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5057:2:
            // iv_ruleIntegerLiteral= ruleIntegerLiteral EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getIntegerLiteralRule());
                }
                pushFollow(FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral11434);
                iv_ruleIntegerLiteral = ruleIntegerLiteral();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleIntegerLiteral;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleIntegerLiteral11444);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleIntegerLiteral"

    // $ANTLR start "ruleIntegerLiteral"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5064:1:
    // ruleIntegerLiteral returns [EObject current=null] : ( () ( (lv_value_1_0=
    // ruleINTEGER ) ) ) ;
    public final EObject ruleIntegerLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5067:28:
            // ( ( () ( (lv_value_1_0= ruleINTEGER ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5068:1:
            // ( () ( (lv_value_1_0= ruleINTEGER ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5068:1:
                // ( () ( (lv_value_1_0= ruleINTEGER ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5068:2:
                // () ( (lv_value_1_0= ruleINTEGER ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5068:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5069:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getIntegerLiteralAccess()
                                    .getErlIntegerAction_0(), current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5074:2:
                    // ( (lv_value_1_0= ruleINTEGER ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5075:1:
                    // (lv_value_1_0= ruleINTEGER )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5075:1:
                        // (lv_value_1_0= ruleINTEGER )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5076:3:
                        // lv_value_1_0= ruleINTEGER
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getIntegerLiteralAccess()
                                        .getValueINTEGERParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleINTEGER_in_ruleIntegerLiteral11499);
                            lv_value_1_0 = ruleINTEGER();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getIntegerLiteralRule());
                                }
                                set(current, "value", lv_value_1_0, "INTEGER");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleIntegerLiteral"

    // $ANTLR start "entryRulePatternExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5100:1:
    // entryRulePatternExpression returns [EObject current=null] :
    // iv_rulePatternExpression= rulePatternExpression EOF ;
    public final EObject entryRulePatternExpression()
            throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternExpression = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5101:2:
            // (iv_rulePatternExpression= rulePatternExpression EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5102:2:
            // iv_rulePatternExpression= rulePatternExpression EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getPatternExpressionRule());
                }
                pushFollow(FOLLOW_rulePatternExpression_in_entryRulePatternExpression11535);
                iv_rulePatternExpression = rulePatternExpression();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_rulePatternExpression;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRulePatternExpression11545);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRulePatternExpression"

    // $ANTLR start "rulePatternExpression"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5109:1:
    // rulePatternExpression returns [EObject current=null] :
    // (this_TermExpression_0= ruleTermExpression ( ( () ( (lv_op_2_0= '=' ) ) (
    // (lv_opRight_3_0= ruleTermExpression ) ) )+ | ( () otherlv_5= '(' (
    // (lv_args_6_0= ruleExpressions ) )? otherlv_7= ')' ) )? ) ;
    public final EObject rulePatternExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0 = null;
        Token otherlv_5 = null;
        Token otherlv_7 = null;
        EObject this_TermExpression_0 = null;

        EObject lv_opRight_3_0 = null;

        EObject lv_args_6_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5112:28:
            // ( (this_TermExpression_0= ruleTermExpression ( ( () ( (lv_op_2_0=
            // '=' ) ) ( (lv_opRight_3_0= ruleTermExpression ) ) )+ | ( ()
            // otherlv_5= '(' ( (lv_args_6_0= ruleExpressions ) )? otherlv_7=
            // ')' ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5113:1:
            // (this_TermExpression_0= ruleTermExpression ( ( () ( (lv_op_2_0=
            // '=' ) ) ( (lv_opRight_3_0= ruleTermExpression ) ) )+ | ( ()
            // otherlv_5= '(' ( (lv_args_6_0= ruleExpressions ) )? otherlv_7=
            // ')' ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5113:1:
                // (this_TermExpression_0= ruleTermExpression ( ( () (
                // (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0= ruleTermExpression ) )
                // )+ | ( () otherlv_5= '(' ( (lv_args_6_0= ruleExpressions ) )?
                // otherlv_7= ')' ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5114:5:
                // this_TermExpression_0= ruleTermExpression ( ( () (
                // (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0= ruleTermExpression ) )
                // )+ | ( () otherlv_5= '(' ( (lv_args_6_0= ruleExpressions ) )?
                // otherlv_7= ')' ) )?
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getPatternExpressionAccess()
                                .getTermExpressionParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleTermExpression_in_rulePatternExpression11592);
                    this_TermExpression_0 = ruleTermExpression();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_TermExpression_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5122:1:
                    // ( ( () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0=
                    // ruleTermExpression ) ) )+ | ( () otherlv_5= '(' (
                    // (lv_args_6_0= ruleExpressions ) )? otherlv_7= ')' ) )?
                    int alt76 = 3;
                    final int LA76_0 = input.LA(1);

                    if (LA76_0 == 37) {
                        alt76 = 1;
                    } else if (LA76_0 == 21) {
                        alt76 = 2;
                    }
                    switch (alt76) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5122:2:
                    // ( () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0=
                    // ruleTermExpression ) ) )+
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5122:2:
                        // ( () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0=
                        // ruleTermExpression ) ) )+
                        int cnt74 = 0;
                        loop74:
                        do {
                            int alt74 = 2;
                            final int LA74_0 = input.LA(1);

                            if (LA74_0 == 37) {
                                alt74 = 1;
                            }

                            switch (alt74) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5122:3:
                            // () ( (lv_op_2_0= '=' ) ) ( (lv_opRight_3_0=
                            // ruleTermExpression ) )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5122:3:
                                // ()
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5123:5:
                                {
                                    if (state.backtracking == 0) {

                                        current = forceCreateModelElementAndSet(
                                                grammarAccess
                                                        .getPatternExpressionAccess()
                                                        .getMatchExprOpLeftAction_1_0_0(),
                                                current);

                                    }

                                }

                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5128:2:
                                // ( (lv_op_2_0= '=' ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5129:1:
                                // (lv_op_2_0= '=' )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5129:1:
                                    // (lv_op_2_0= '=' )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5130:3:
                                    // lv_op_2_0= '='
                                    {
                                        lv_op_2_0 = (Token) match(input, 37,
                                                FOLLOW_37_in_rulePatternExpression11620);
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            newLeafNode(
                                                    lv_op_2_0,
                                                    grammarAccess
                                                            .getPatternExpressionAccess()
                                                            .getOpEqualsSignKeyword_1_0_1_0());

                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElement(grammarAccess
                                                        .getPatternExpressionRule());
                                            }
                                            setWithLastConsumed(current, "op",
                                                    lv_op_2_0, "=");

                                        }

                                    }

                                }

                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5143:2:
                                // ( (lv_opRight_3_0= ruleTermExpression ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5144:1:
                                // (lv_opRight_3_0= ruleTermExpression )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5144:1:
                                    // (lv_opRight_3_0= ruleTermExpression )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5145:3:
                                    // lv_opRight_3_0= ruleTermExpression
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getPatternExpressionAccess()
                                                    .getOpRightTermExpressionParserRuleCall_1_0_2_0());

                                        }
                                        pushFollow(FOLLOW_ruleTermExpression_in_rulePatternExpression11654);
                                        lv_opRight_3_0 = ruleTermExpression();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getPatternExpressionRule());
                                            }
                                            set(current, "opRight",
                                                    lv_opRight_3_0,
                                                    "TermExpression");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                if (cnt74 >= 1) {
                                    break loop74;
                                }
                                if (state.backtracking > 0) {
                                    state.failed = true;
                                    return current;
                                }
                                    final EarlyExitException eee = new EarlyExitException(
                                        74, input);
                                    throw eee;
                            }
                            cnt74++;
                        } while (true);

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5162:6:
                    // ( () otherlv_5= '(' ( (lv_args_6_0= ruleExpressions ) )?
                    // otherlv_7= ')' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5162:6:
                        // ( () otherlv_5= '(' ( (lv_args_6_0= ruleExpressions )
                        // )? otherlv_7= ')' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5162:7:
                        // () otherlv_5= '(' ( (lv_args_6_0= ruleExpressions )
                        // )? otherlv_7= ')'
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5162:7:
                            // ()
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5163:5:
                            {
                                if (state.backtracking == 0) {

                                    current = forceCreateModelElementAndSet(
                                            grammarAccess
                                                    .getPatternExpressionAccess()
                                                    .getFunCallTargetAction_1_1_0(),
                                            current);

                                }

                            }

                            otherlv_5 = (Token) match(input, 21,
                                    FOLLOW_21_in_rulePatternExpression11684);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_5, grammarAccess
                                        .getPatternExpressionAccess()
                                        .getLeftParenthesisKeyword_1_1_1());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5172:1:
                            // ( (lv_args_6_0= ruleExpressions ) )?
                            int alt75 = 2;
                            final int LA75_0 = input.LA(1);

                            if (LA75_0 >= RULE_STRING
                                    && LA75_0 <= RULE_BASED_INT || LA75_0 >= 19
                                    && LA75_0 <= 21 || LA75_0 >= 24
                                    && LA75_0 <= 35 || LA75_0 >= 39
                                    && LA75_0 <= 40 || LA75_0 >= 42
                                    && LA75_0 <= 45 || LA75_0 >= 47
                                    && LA75_0 <= 48 || LA75_0 >= 51
                                    && LA75_0 <= 53 || LA75_0 == 56
                                    || LA75_0 == 58 || LA75_0 >= 60
                                    && LA75_0 <= 64 || LA75_0 == 66
                                    || LA75_0 == 68 || LA75_0 == 70
                                    || LA75_0 == 73 || LA75_0 == 77
                                    || LA75_0 >= 89 && LA75_0 <= 90
                                    || LA75_0 == 102) {
                                alt75 = 1;
                            }
                            switch (alt75) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5173:1:
                            // (lv_args_6_0= ruleExpressions )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5173:1:
                                // (lv_args_6_0= ruleExpressions )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5174:3:
                                // lv_args_6_0= ruleExpressions
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getPatternExpressionAccess()
                                                .getArgsExpressionsParserRuleCall_1_1_2_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpressions_in_rulePatternExpression11705);
                                    lv_args_6_0 = ruleExpressions();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getPatternExpressionRule());
                                        }
                                        set(current, "args", lv_args_6_0,
                                                "Expressions");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }
                                break;

                            }

                            otherlv_7 = (Token) match(input, 23,
                                    FOLLOW_23_in_rulePatternExpression11718);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_7, grammarAccess
                                        .getPatternExpressionAccess()
                                        .getRightParenthesisKeyword_1_1_3());

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "rulePatternExpression"

    // $ANTLR start "entryRuleIfExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5202:1:
    // entryRuleIfExpr returns [EObject current=null] : iv_ruleIfExpr=
    // ruleIfExpr EOF ;
    public final EObject entryRuleIfExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5203:2:
            // (iv_ruleIfExpr= ruleIfExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5204:2:
            // iv_ruleIfExpr= ruleIfExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getIfExprRule());
                }
                pushFollow(FOLLOW_ruleIfExpr_in_entryRuleIfExpr11757);
                iv_ruleIfExpr = ruleIfExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleIfExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleIfExpr11767);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleIfExpr"

    // $ANTLR start "ruleIfExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5211:1:
    // ruleIfExpr returns [EObject current=null] : (otherlv_0= 'if' (
    // (lv_clauses_1_0= ruleIfClause ) ) (otherlv_2= ';' ( (lv_clauses_3_0=
    // ruleIfClause ) ) )* otherlv_4= 'end' ) ;
    public final EObject ruleIfExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        EObject lv_clauses_1_0 = null;

        EObject lv_clauses_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5214:28:
            // ( (otherlv_0= 'if' ( (lv_clauses_1_0= ruleIfClause ) )
            // (otherlv_2= ';' ( (lv_clauses_3_0= ruleIfClause ) ) )* otherlv_4=
            // 'end' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5215:1:
            // (otherlv_0= 'if' ( (lv_clauses_1_0= ruleIfClause ) ) (otherlv_2=
            // ';' ( (lv_clauses_3_0= ruleIfClause ) ) )* otherlv_4= 'end' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5215:1:
                // (otherlv_0= 'if' ( (lv_clauses_1_0= ruleIfClause ) )
                // (otherlv_2= ';' ( (lv_clauses_3_0= ruleIfClause ) ) )*
                // otherlv_4= 'end' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5215:3:
                // otherlv_0= 'if' ( (lv_clauses_1_0= ruleIfClause ) )
                // (otherlv_2= ';' ( (lv_clauses_3_0= ruleIfClause ) ) )*
                // otherlv_4= 'end'
                {
                    otherlv_0 = (Token) match(input, 63,
                            FOLLOW_63_in_ruleIfExpr11804);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess.getIfExprAccess()
                                .getIfKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5219:1:
                    // ( (lv_clauses_1_0= ruleIfClause ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5220:1:
                    // (lv_clauses_1_0= ruleIfClause )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5220:1:
                        // (lv_clauses_1_0= ruleIfClause )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5221:3:
                        // lv_clauses_1_0= ruleIfClause
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getIfExprAccess()
                                        .getClausesIfClauseParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleIfClause_in_ruleIfExpr11825);
                            lv_clauses_1_0 = ruleIfClause();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getIfExprRule());
                                }
                                add(current, "clauses", lv_clauses_1_0,
                                        "IfClause");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5237:2:
                    // (otherlv_2= ';' ( (lv_clauses_3_0= ruleIfClause ) ) )*
                    loop77:
                    do {
                        int alt77 = 2;
                        final int LA77_0 = input.LA(1);

                        if (LA77_0 == 46) {
                            alt77 = 1;
                        }

                        switch (alt77) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5237:4:
                        // otherlv_2= ';' ( (lv_clauses_3_0= ruleIfClause ) )
                        {
                            otherlv_2 = (Token) match(input, 46,
                                    FOLLOW_46_in_ruleIfExpr11838);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_2, grammarAccess
                                        .getIfExprAccess()
                                        .getSemicolonKeyword_2_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5241:1:
                            // ( (lv_clauses_3_0= ruleIfClause ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5242:1:
                            // (lv_clauses_3_0= ruleIfClause )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5242:1:
                                // (lv_clauses_3_0= ruleIfClause )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5243:3:
                                // lv_clauses_3_0= ruleIfClause
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getIfExprAccess()
                                                .getClausesIfClauseParserRuleCall_2_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleIfClause_in_ruleIfExpr11859);
                                    lv_clauses_3_0 = ruleIfClause();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getIfExprRule());
                                        }
                                        add(current, "clauses", lv_clauses_3_0,
                                                "IfClause");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop77;
                        }
                    } while (true);

                    otherlv_4 = (Token) match(input, 59,
                            FOLLOW_59_in_ruleIfExpr11873);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess.getIfExprAccess()
                                .getEndKeyword_3());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleIfExpr"

    // $ANTLR start "entryRuleIfClause"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5271:1:
    // entryRuleIfClause returns [EObject current=null] : iv_ruleIfClause=
    // ruleIfClause EOF ;
    public final EObject entryRuleIfClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfClause = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5272:2:
            // (iv_ruleIfClause= ruleIfClause EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5273:2:
            // iv_ruleIfClause= ruleIfClause EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getIfClauseRule());
                }
                pushFollow(FOLLOW_ruleIfClause_in_entryRuleIfClause11909);
                iv_ruleIfClause = ruleIfClause();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleIfClause;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleIfClause11919);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleIfClause"

    // $ANTLR start "ruleIfClause"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5280:1:
    // ruleIfClause returns [EObject current=null] : ( ( (lv_guard_0_0=
    // ruleGuard ) ) otherlv_1= '->' ( (lv_body_2_0= ruleExpressions ) ) ) ;
    public final EObject ruleIfClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_guard_0_0 = null;

        EObject lv_body_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5283:28:
            // ( ( ( (lv_guard_0_0= ruleGuard ) ) otherlv_1= '->' (
            // (lv_body_2_0= ruleExpressions ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5284:1:
            // ( ( (lv_guard_0_0= ruleGuard ) ) otherlv_1= '->' ( (lv_body_2_0=
            // ruleExpressions ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5284:1:
                // ( ( (lv_guard_0_0= ruleGuard ) ) otherlv_1= '->' (
                // (lv_body_2_0= ruleExpressions ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5284:2:
                // ( (lv_guard_0_0= ruleGuard ) ) otherlv_1= '->' (
                // (lv_body_2_0= ruleExpressions ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5284:2:
                    // ( (lv_guard_0_0= ruleGuard ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5285:1:
                    // (lv_guard_0_0= ruleGuard )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5285:1:
                        // (lv_guard_0_0= ruleGuard )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5286:3:
                        // lv_guard_0_0= ruleGuard
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getIfClauseAccess()
                                        .getGuardGuardParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleGuard_in_ruleIfClause11965);
                            lv_guard_0_0 = ruleGuard();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getIfClauseRule());
                                }
                                set(current, "guard", lv_guard_0_0, "Guard");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 50,
                            FOLLOW_50_in_ruleIfClause11977);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getIfClauseAccess()
                                .getHyphenMinusGreaterThanSignKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5306:1:
                    // ( (lv_body_2_0= ruleExpressions ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5307:1:
                    // (lv_body_2_0= ruleExpressions )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5307:1:
                        // (lv_body_2_0= ruleExpressions )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5308:3:
                        // lv_body_2_0= ruleExpressions
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getIfClauseAccess()
                                        .getBodyExpressionsParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleExpressions_in_ruleIfClause11998);
                            lv_body_2_0 = ruleExpressions();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getIfClauseRule());
                                }
                                set(current, "body", lv_body_2_0, "Expressions");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleIfClause"

    // $ANTLR start "entryRuleCaseExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5332:1:
    // entryRuleCaseExpr returns [EObject current=null] : iv_ruleCaseExpr=
    // ruleCaseExpr EOF ;
    public final EObject entryRuleCaseExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5333:2:
            // (iv_ruleCaseExpr= ruleCaseExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5334:2:
            // iv_ruleCaseExpr= ruleCaseExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getCaseExprRule());
                }
                pushFollow(FOLLOW_ruleCaseExpr_in_entryRuleCaseExpr12034);
                iv_ruleCaseExpr = ruleCaseExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleCaseExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleCaseExpr12044);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleCaseExpr"

    // $ANTLR start "ruleCaseExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5341:1:
    // ruleCaseExpr returns [EObject current=null] : (otherlv_0= 'case' (
    // (lv_expr_1_0= ruleExpression ) ) otherlv_2= 'of' ( (lv_clauses_3_0=
    // ruleCrClause ) ) (otherlv_4= ';' ( (lv_clauses_5_0= ruleCrClause ) ) )*
    // otherlv_6= 'end' ) ;
    public final EObject ruleCaseExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        EObject lv_expr_1_0 = null;

        EObject lv_clauses_3_0 = null;

        EObject lv_clauses_5_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5344:28:
            // ( (otherlv_0= 'case' ( (lv_expr_1_0= ruleExpression ) )
            // otherlv_2= 'of' ( (lv_clauses_3_0= ruleCrClause ) ) (otherlv_4=
            // ';' ( (lv_clauses_5_0= ruleCrClause ) ) )* otherlv_6= 'end' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5345:1:
            // (otherlv_0= 'case' ( (lv_expr_1_0= ruleExpression ) ) otherlv_2=
            // 'of' ( (lv_clauses_3_0= ruleCrClause ) ) (otherlv_4= ';' (
            // (lv_clauses_5_0= ruleCrClause ) ) )* otherlv_6= 'end' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5345:1:
                // (otherlv_0= 'case' ( (lv_expr_1_0= ruleExpression ) )
                // otherlv_2= 'of' ( (lv_clauses_3_0= ruleCrClause ) )
                // (otherlv_4= ';' ( (lv_clauses_5_0= ruleCrClause ) ) )*
                // otherlv_6= 'end' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5345:3:
                // otherlv_0= 'case' ( (lv_expr_1_0= ruleExpression ) )
                // otherlv_2= 'of' ( (lv_clauses_3_0= ruleCrClause ) )
                // (otherlv_4= ';' ( (lv_clauses_5_0= ruleCrClause ) ) )*
                // otherlv_6= 'end'
                {
                    otherlv_0 = (Token) match(input, 64,
                            FOLLOW_64_in_ruleCaseExpr12081);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getCaseExprAccess().getCaseKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5349:1:
                    // ( (lv_expr_1_0= ruleExpression ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5350:1:
                    // (lv_expr_1_0= ruleExpression )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5350:1:
                        // (lv_expr_1_0= ruleExpression )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5351:3:
                        // lv_expr_1_0= ruleExpression
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getCaseExprAccess()
                                        .getExprExpressionParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleExpression_in_ruleCaseExpr12102);
                            lv_expr_1_0 = ruleExpression();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getCaseExprRule());
                                }
                                set(current, "expr", lv_expr_1_0, "Expression");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_2 = (Token) match(input, 65,
                            FOLLOW_65_in_ruleCaseExpr12114);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_2, grammarAccess
                                .getCaseExprAccess().getOfKeyword_2());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5371:1:
                    // ( (lv_clauses_3_0= ruleCrClause ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5372:1:
                    // (lv_clauses_3_0= ruleCrClause )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5372:1:
                        // (lv_clauses_3_0= ruleCrClause )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5373:3:
                        // lv_clauses_3_0= ruleCrClause
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getCaseExprAccess()
                                        .getClausesCrClauseParserRuleCall_3_0());

                            }
                            pushFollow(FOLLOW_ruleCrClause_in_ruleCaseExpr12135);
                            lv_clauses_3_0 = ruleCrClause();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getCaseExprRule());
                                }
                                add(current, "clauses", lv_clauses_3_0,
                                        "CrClause");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5389:2:
                    // (otherlv_4= ';' ( (lv_clauses_5_0= ruleCrClause ) ) )*
                    loop78:
                    do {
                        int alt78 = 2;
                        final int LA78_0 = input.LA(1);

                        if (LA78_0 == 46) {
                            alt78 = 1;
                        }

                        switch (alt78) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5389:4:
                        // otherlv_4= ';' ( (lv_clauses_5_0= ruleCrClause ) )
                        {
                            otherlv_4 = (Token) match(input, 46,
                                    FOLLOW_46_in_ruleCaseExpr12148);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_4, grammarAccess
                                        .getCaseExprAccess()
                                        .getSemicolonKeyword_4_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5393:1:
                            // ( (lv_clauses_5_0= ruleCrClause ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5394:1:
                            // (lv_clauses_5_0= ruleCrClause )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5394:1:
                                // (lv_clauses_5_0= ruleCrClause )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5395:3:
                                // lv_clauses_5_0= ruleCrClause
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getCaseExprAccess()
                                                .getClausesCrClauseParserRuleCall_4_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleCrClause_in_ruleCaseExpr12169);
                                    lv_clauses_5_0 = ruleCrClause();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getCaseExprRule());
                                        }
                                        add(current, "clauses", lv_clauses_5_0,
                                                "CrClause");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop78;
                        }
                    } while (true);

                    otherlv_6 = (Token) match(input, 59,
                            FOLLOW_59_in_ruleCaseExpr12183);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_6, grammarAccess
                                .getCaseExprAccess().getEndKeyword_5());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleCaseExpr"

    // $ANTLR start "entryRuleCrClause"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5423:1:
    // entryRuleCrClause returns [EObject current=null] : iv_ruleCrClause=
    // ruleCrClause EOF ;
    public final EObject entryRuleCrClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCrClause = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5424:2:
            // (iv_ruleCrClause= ruleCrClause EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5425:2:
            // iv_ruleCrClause= ruleCrClause EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getCrClauseRule());
                }
                pushFollow(FOLLOW_ruleCrClause_in_entryRuleCrClause12219);
                iv_ruleCrClause = ruleCrClause();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleCrClause;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleCrClause12229);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleCrClause"

    // $ANTLR start "ruleCrClause"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5432:1:
    // ruleCrClause returns [EObject current=null] : ( ( (lv_expr_0_0=
    // ruleExpression ) ) (otherlv_1= 'when' ( (lv_guard_2_0= ruleGuard ) ) )?
    // otherlv_3= '->' ( (lv_body_4_0= ruleExpressions ) ) ) ;
    public final EObject ruleCrClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        EObject lv_expr_0_0 = null;

        EObject lv_guard_2_0 = null;

        EObject lv_body_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5435:28:
            // ( ( ( (lv_expr_0_0= ruleExpression ) ) (otherlv_1= 'when' (
            // (lv_guard_2_0= ruleGuard ) ) )? otherlv_3= '->' ( (lv_body_4_0=
            // ruleExpressions ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5436:1:
            // ( ( (lv_expr_0_0= ruleExpression ) ) (otherlv_1= 'when' (
            // (lv_guard_2_0= ruleGuard ) ) )? otherlv_3= '->' ( (lv_body_4_0=
            // ruleExpressions ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5436:1:
                // ( ( (lv_expr_0_0= ruleExpression ) ) (otherlv_1= 'when' (
                // (lv_guard_2_0= ruleGuard ) ) )? otherlv_3= '->' (
                // (lv_body_4_0= ruleExpressions ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5436:2:
                // ( (lv_expr_0_0= ruleExpression ) ) (otherlv_1= 'when' (
                // (lv_guard_2_0= ruleGuard ) ) )? otherlv_3= '->' (
                // (lv_body_4_0= ruleExpressions ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5436:2:
                    // ( (lv_expr_0_0= ruleExpression ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5437:1:
                    // (lv_expr_0_0= ruleExpression )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5437:1:
                        // (lv_expr_0_0= ruleExpression )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5438:3:
                        // lv_expr_0_0= ruleExpression
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getCrClauseAccess()
                                        .getExprExpressionParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleExpression_in_ruleCrClause12275);
                            lv_expr_0_0 = ruleExpression();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getCrClauseRule());
                                }
                                set(current, "expr", lv_expr_0_0, "Expression");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5454:2:
                    // (otherlv_1= 'when' ( (lv_guard_2_0= ruleGuard ) ) )?
                    int alt79 = 2;
                    final int LA79_0 = input.LA(1);

                    if (LA79_0 == 49) {
                        alt79 = 1;
                    }
                    switch (alt79) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5454:4:
                    // otherlv_1= 'when' ( (lv_guard_2_0= ruleGuard ) )
                    {
                        otherlv_1 = (Token) match(input, 49,
                                FOLLOW_49_in_ruleCrClause12288);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getCrClauseAccess().getWhenKeyword_1_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5458:1:
                        // ( (lv_guard_2_0= ruleGuard ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5459:1:
                        // (lv_guard_2_0= ruleGuard )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5459:1:
                            // (lv_guard_2_0= ruleGuard )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5460:3:
                            // lv_guard_2_0= ruleGuard
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getCrClauseAccess()
                                            .getGuardGuardParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleGuard_in_ruleCrClause12309);
                                lv_guard_2_0 = ruleGuard();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getCrClauseRule());
                                    }
                                    set(current, "guard", lv_guard_2_0, "Guard");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    otherlv_3 = (Token) match(input, 50,
                            FOLLOW_50_in_ruleCrClause12323);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getCrClauseAccess()
                                .getHyphenMinusGreaterThanSignKeyword_2());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5480:1:
                    // ( (lv_body_4_0= ruleExpressions ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5481:1:
                    // (lv_body_4_0= ruleExpressions )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5481:1:
                        // (lv_body_4_0= ruleExpressions )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5482:3:
                        // lv_body_4_0= ruleExpressions
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getCrClauseAccess()
                                        .getBodyExpressionsParserRuleCall_3_0());

                            }
                            pushFollow(FOLLOW_ruleExpressions_in_ruleCrClause12344);
                            lv_body_4_0 = ruleExpressions();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getCrClauseRule());
                                }
                                set(current, "body", lv_body_4_0, "Expressions");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleCrClause"

    // $ANTLR start "entryRuleReceiveExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5506:1:
    // entryRuleReceiveExpr returns [EObject current=null] : iv_ruleReceiveExpr=
    // ruleReceiveExpr EOF ;
    public final EObject entryRuleReceiveExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReceiveExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5507:2:
            // (iv_ruleReceiveExpr= ruleReceiveExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5508:2:
            // iv_ruleReceiveExpr= ruleReceiveExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getReceiveExprRule());
                }
                pushFollow(FOLLOW_ruleReceiveExpr_in_entryRuleReceiveExpr12380);
                iv_ruleReceiveExpr = ruleReceiveExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleReceiveExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleReceiveExpr12390);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleReceiveExpr"

    // $ANTLR start "ruleReceiveExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5515:1:
    // ruleReceiveExpr returns [EObject current=null] : (otherlv_0= 'receive' (
    // ( ( (lv_clauses_1_0= ruleCrClause ) ) (otherlv_2= ';' ( (lv_clauses_3_0=
    // ruleCrClause ) ) )* (otherlv_4= 'after' ( (lv_after_expr_5_0=
    // ruleExpression ) ) otherlv_6= '->' ( (lv_after_body_7_0= ruleExpressions
    // ) ) )? ) | (otherlv_8= 'after' ( (lv_after_expr_9_0= ruleExpression ) )
    // otherlv_10= '->' ( (lv_after_body_11_0= ruleExpressions ) ) ) )
    // otherlv_12= 'end' ) ;
    public final EObject ruleReceiveExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        Token otherlv_8 = null;
        Token otherlv_10 = null;
        Token otherlv_12 = null;
        EObject lv_clauses_1_0 = null;

        EObject lv_clauses_3_0 = null;

        EObject lv_after_expr_5_0 = null;

        EObject lv_after_body_7_0 = null;

        EObject lv_after_expr_9_0 = null;

        EObject lv_after_body_11_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5518:28:
            // ( (otherlv_0= 'receive' ( ( ( (lv_clauses_1_0= ruleCrClause ) )
            // (otherlv_2= ';' ( (lv_clauses_3_0= ruleCrClause ) ) )*
            // (otherlv_4= 'after' ( (lv_after_expr_5_0= ruleExpression ) )
            // otherlv_6= '->' ( (lv_after_body_7_0= ruleExpressions ) ) )? ) |
            // (otherlv_8= 'after' ( (lv_after_expr_9_0= ruleExpression ) )
            // otherlv_10= '->' ( (lv_after_body_11_0= ruleExpressions ) ) ) )
            // otherlv_12= 'end' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5519:1:
            // (otherlv_0= 'receive' ( ( ( (lv_clauses_1_0= ruleCrClause ) )
            // (otherlv_2= ';' ( (lv_clauses_3_0= ruleCrClause ) ) )*
            // (otherlv_4= 'after' ( (lv_after_expr_5_0= ruleExpression ) )
            // otherlv_6= '->' ( (lv_after_body_7_0= ruleExpressions ) ) )? ) |
            // (otherlv_8= 'after' ( (lv_after_expr_9_0= ruleExpression ) )
            // otherlv_10= '->' ( (lv_after_body_11_0= ruleExpressions ) ) ) )
            // otherlv_12= 'end' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5519:1:
                // (otherlv_0= 'receive' ( ( ( (lv_clauses_1_0= ruleCrClause ) )
                // (otherlv_2= ';' ( (lv_clauses_3_0= ruleCrClause ) ) )*
                // (otherlv_4= 'after' ( (lv_after_expr_5_0= ruleExpression ) )
                // otherlv_6= '->' ( (lv_after_body_7_0= ruleExpressions ) ) )?
                // ) | (otherlv_8= 'after' ( (lv_after_expr_9_0= ruleExpression
                // ) ) otherlv_10= '->' ( (lv_after_body_11_0= ruleExpressions )
                // ) ) ) otherlv_12= 'end' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5519:3:
                // otherlv_0= 'receive' ( ( ( (lv_clauses_1_0= ruleCrClause ) )
                // (otherlv_2= ';' ( (lv_clauses_3_0= ruleCrClause ) ) )*
                // (otherlv_4= 'after' ( (lv_after_expr_5_0= ruleExpression ) )
                // otherlv_6= '->' ( (lv_after_body_7_0= ruleExpressions ) ) )?
                // ) | (otherlv_8= 'after' ( (lv_after_expr_9_0= ruleExpression
                // ) ) otherlv_10= '->' ( (lv_after_body_11_0= ruleExpressions )
                // ) ) ) otherlv_12= 'end'
                {
                    otherlv_0 = (Token) match(input, 66,
                            FOLLOW_66_in_ruleReceiveExpr12427);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getReceiveExprAccess().getReceiveKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5523:1:
                    // ( ( ( (lv_clauses_1_0= ruleCrClause ) ) (otherlv_2= ';' (
                    // (lv_clauses_3_0= ruleCrClause ) ) )* (otherlv_4= 'after'
                    // ( (lv_after_expr_5_0= ruleExpression ) ) otherlv_6= '->'
                    // ( (lv_after_body_7_0= ruleExpressions ) ) )? ) |
                    // (otherlv_8= 'after' ( (lv_after_expr_9_0= ruleExpression
                    // ) ) otherlv_10= '->' ( (lv_after_body_11_0=
                    // ruleExpressions ) ) ) )
                    int alt82 = 2;
                    final int LA82_0 = input.LA(1);

                    if (LA82_0 >= RULE_STRING && LA82_0 <= RULE_BASED_INT
                            || LA82_0 >= 19 && LA82_0 <= 21 || LA82_0 >= 24
                            && LA82_0 <= 35 || LA82_0 >= 39 && LA82_0 <= 40
                            || LA82_0 >= 42 && LA82_0 <= 45 || LA82_0 >= 47
                            && LA82_0 <= 48 || LA82_0 >= 51 && LA82_0 <= 53
                            || LA82_0 == 56 || LA82_0 == 58 || LA82_0 >= 60
                            && LA82_0 <= 64 || LA82_0 == 66 || LA82_0 == 68
                            || LA82_0 == 70 || LA82_0 == 73 || LA82_0 == 77
                            || LA82_0 >= 89 && LA82_0 <= 90 || LA82_0 == 102) {
                        alt82 = 1;
                    } else if (LA82_0 == 67) {
                        alt82 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 82, 0, input);

                        throw nvae;
                    }
                    switch (alt82) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5523:2:
                    // ( ( (lv_clauses_1_0= ruleCrClause ) ) (otherlv_2= ';' (
                    // (lv_clauses_3_0= ruleCrClause ) ) )* (otherlv_4= 'after'
                    // ( (lv_after_expr_5_0= ruleExpression ) ) otherlv_6= '->'
                    // ( (lv_after_body_7_0= ruleExpressions ) ) )? )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5523:2:
                        // ( ( (lv_clauses_1_0= ruleCrClause ) ) (otherlv_2= ';'
                        // ( (lv_clauses_3_0= ruleCrClause ) ) )* (otherlv_4=
                        // 'after' ( (lv_after_expr_5_0= ruleExpression ) )
                        // otherlv_6= '->' ( (lv_after_body_7_0= ruleExpressions
                        // ) ) )? )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5523:3:
                        // ( (lv_clauses_1_0= ruleCrClause ) ) (otherlv_2= ';' (
                        // (lv_clauses_3_0= ruleCrClause ) ) )* (otherlv_4=
                        // 'after' ( (lv_after_expr_5_0= ruleExpression ) )
                        // otherlv_6= '->' ( (lv_after_body_7_0= ruleExpressions
                        // ) ) )?
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5523:3:
                            // ( (lv_clauses_1_0= ruleCrClause ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5524:1:
                            // (lv_clauses_1_0= ruleCrClause )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5524:1:
                                // (lv_clauses_1_0= ruleCrClause )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5525:3:
                                // lv_clauses_1_0= ruleCrClause
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getReceiveExprAccess()
                                                .getClausesCrClauseParserRuleCall_1_0_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleCrClause_in_ruleReceiveExpr12450);
                                    lv_clauses_1_0 = ruleCrClause();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getReceiveExprRule());
                                        }
                                        add(current, "clauses", lv_clauses_1_0,
                                                "CrClause");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5541:2:
                            // (otherlv_2= ';' ( (lv_clauses_3_0= ruleCrClause )
                            // ) )*
                            loop80:
                            do {
                                int alt80 = 2;
                                final int LA80_0 = input.LA(1);

                                if (LA80_0 == 46) {
                                    alt80 = 1;
                                }

                                switch (alt80) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5541:4:
                                // otherlv_2= ';' ( (lv_clauses_3_0=
                                // ruleCrClause ) )
                                {
                                    otherlv_2 = (Token) match(input, 46,
                                            FOLLOW_46_in_ruleReceiveExpr12463);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_2, grammarAccess
                                                .getReceiveExprAccess()
                                                .getSemicolonKeyword_1_0_1_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5545:1:
                                    // ( (lv_clauses_3_0= ruleCrClause ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5546:1:
                                    // (lv_clauses_3_0= ruleCrClause )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5546:1:
                                        // (lv_clauses_3_0= ruleCrClause )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5547:3:
                                        // lv_clauses_3_0= ruleCrClause
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getReceiveExprAccess()
                                                        .getClausesCrClauseParserRuleCall_1_0_1_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleCrClause_in_ruleReceiveExpr12484);
                                            lv_clauses_3_0 = ruleCrClause();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getReceiveExprRule());
                                                }
                                                add(current, "clauses",
                                                        lv_clauses_3_0,
                                                        "CrClause");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop80;
                                }
                            } while (true);

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5563:4:
                            // (otherlv_4= 'after' ( (lv_after_expr_5_0=
                            // ruleExpression ) ) otherlv_6= '->' (
                            // (lv_after_body_7_0= ruleExpressions ) ) )?
                            int alt81 = 2;
                            final int LA81_0 = input.LA(1);

                            if (LA81_0 == 67) {
                                alt81 = 1;
                            }
                            switch (alt81) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5563:6:
                            // otherlv_4= 'after' ( (lv_after_expr_5_0=
                            // ruleExpression ) ) otherlv_6= '->' (
                            // (lv_after_body_7_0= ruleExpressions ) )
                            {
                                otherlv_4 = (Token) match(input, 67,
                                        FOLLOW_67_in_ruleReceiveExpr12499);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_4, grammarAccess
                                            .getReceiveExprAccess()
                                            .getAfterKeyword_1_0_2_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5567:1:
                                // ( (lv_after_expr_5_0= ruleExpression ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5568:1:
                                // (lv_after_expr_5_0= ruleExpression )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5568:1:
                                    // (lv_after_expr_5_0= ruleExpression )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5569:3:
                                    // lv_after_expr_5_0= ruleExpression
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getReceiveExprAccess()
                                                    .getAfter_exprExpressionParserRuleCall_1_0_2_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleExpression_in_ruleReceiveExpr12520);
                                        lv_after_expr_5_0 = ruleExpression();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getReceiveExprRule());
                                            }
                                            set(current, "after_expr",
                                                    lv_after_expr_5_0,
                                                    "Expression");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                                otherlv_6 = (Token) match(input, 50,
                                        FOLLOW_50_in_ruleReceiveExpr12532);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(
                                            otherlv_6,
                                            grammarAccess
                                                    .getReceiveExprAccess()
                                                    .getHyphenMinusGreaterThanSignKeyword_1_0_2_2());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5589:1:
                                // ( (lv_after_body_7_0= ruleExpressions ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5590:1:
                                // (lv_after_body_7_0= ruleExpressions )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5590:1:
                                    // (lv_after_body_7_0= ruleExpressions )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5591:3:
                                    // lv_after_body_7_0= ruleExpressions
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getReceiveExprAccess()
                                                    .getAfter_bodyExpressionsParserRuleCall_1_0_2_3_0());

                                        }
                                        pushFollow(FOLLOW_ruleExpressions_in_ruleReceiveExpr12553);
                                        lv_after_body_7_0 = ruleExpressions();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getReceiveExprRule());
                                            }
                                            set(current, "after_body",
                                                    lv_after_body_7_0,
                                                    "Expressions");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5608:6:
                    // (otherlv_8= 'after' ( (lv_after_expr_9_0= ruleExpression
                    // ) ) otherlv_10= '->' ( (lv_after_body_11_0=
                    // ruleExpressions ) ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5608:6:
                        // (otherlv_8= 'after' ( (lv_after_expr_9_0=
                        // ruleExpression ) ) otherlv_10= '->' (
                        // (lv_after_body_11_0= ruleExpressions ) ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5608:8:
                        // otherlv_8= 'after' ( (lv_after_expr_9_0=
                        // ruleExpression ) ) otherlv_10= '->' (
                        // (lv_after_body_11_0= ruleExpressions ) )
                        {
                            otherlv_8 = (Token) match(input, 67,
                                    FOLLOW_67_in_ruleReceiveExpr12575);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_8, grammarAccess
                                        .getReceiveExprAccess()
                                        .getAfterKeyword_1_1_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5612:1:
                            // ( (lv_after_expr_9_0= ruleExpression ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5613:1:
                            // (lv_after_expr_9_0= ruleExpression )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5613:1:
                                // (lv_after_expr_9_0= ruleExpression )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5614:3:
                                // lv_after_expr_9_0= ruleExpression
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getReceiveExprAccess()
                                                .getAfter_exprExpressionParserRuleCall_1_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpression_in_ruleReceiveExpr12596);
                                    lv_after_expr_9_0 = ruleExpression();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getReceiveExprRule());
                                        }
                                        set(current, "after_expr",
                                                lv_after_expr_9_0, "Expression");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            otherlv_10 = (Token) match(input, 50,
                                    FOLLOW_50_in_ruleReceiveExpr12608);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(
                                        otherlv_10,
                                        grammarAccess
                                                .getReceiveExprAccess()
                                                .getHyphenMinusGreaterThanSignKeyword_1_1_2());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5634:1:
                            // ( (lv_after_body_11_0= ruleExpressions ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5635:1:
                            // (lv_after_body_11_0= ruleExpressions )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5635:1:
                                // (lv_after_body_11_0= ruleExpressions )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5636:3:
                                // lv_after_body_11_0= ruleExpressions
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getReceiveExprAccess()
                                                .getAfter_bodyExpressionsParserRuleCall_1_1_3_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpressions_in_ruleReceiveExpr12629);
                                    lv_after_body_11_0 = ruleExpressions();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getReceiveExprRule());
                                        }
                                        set(current, "after_body",
                                                lv_after_body_11_0,
                                                "Expressions");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }

                    }
                        break;

                    }

                    otherlv_12 = (Token) match(input, 59,
                            FOLLOW_59_in_ruleReceiveExpr12643);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_12, grammarAccess
                                .getReceiveExprAccess().getEndKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleReceiveExpr"

    // $ANTLR start "entryRuleFunExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5664:1:
    // entryRuleFunExpr returns [EObject current=null] : iv_ruleFunExpr=
    // ruleFunExpr EOF ;
    public final EObject entryRuleFunExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5665:2:
            // (iv_ruleFunExpr= ruleFunExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5666:2:
            // iv_ruleFunExpr= ruleFunExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFunExprRule());
                }
                pushFollow(FOLLOW_ruleFunExpr_in_entryRuleFunExpr12679);
                iv_ruleFunExpr = ruleFunExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFunExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFunExpr12689);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFunExpr"

    // $ANTLR start "ruleFunExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5673:1:
    // ruleFunExpr returns [EObject current=null] : (otherlv_0= 'fun'
    // (this_FunRef_1= ruleFunRef | this_InlineFun_2= ruleInlineFun ) ) ;
    public final EObject ruleFunExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        EObject this_FunRef_1 = null;

        EObject this_InlineFun_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5676:28:
            // ( (otherlv_0= 'fun' (this_FunRef_1= ruleFunRef |
            // this_InlineFun_2= ruleInlineFun ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5677:1:
            // (otherlv_0= 'fun' (this_FunRef_1= ruleFunRef | this_InlineFun_2=
            // ruleInlineFun ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5677:1:
                // (otherlv_0= 'fun' (this_FunRef_1= ruleFunRef |
                // this_InlineFun_2= ruleInlineFun ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5677:3:
                // otherlv_0= 'fun' (this_FunRef_1= ruleFunRef |
                // this_InlineFun_2= ruleInlineFun )
                {
                    otherlv_0 = (Token) match(input, 68,
                            FOLLOW_68_in_ruleFunExpr12726);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess.getFunExprAccess()
                                .getFunKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5681:1:
                    // (this_FunRef_1= ruleFunRef | this_InlineFun_2=
                    // ruleInlineFun )
                    int alt83 = 2;
                    alt83 = dfa83.predict(input);
                    switch (alt83) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5682:5:
                    // this_FunRef_1= ruleFunRef
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess.getFunExprAccess()
                                    .getFunRefParserRuleCall_1_0());

                        }
                        pushFollow(FOLLOW_ruleFunRef_in_ruleFunExpr12749);
                        this_FunRef_1 = ruleFunRef();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_FunRef_1;
                            afterParserOrEnumRuleCall();

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5692:5:
                    // this_InlineFun_2= ruleInlineFun
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess.getFunExprAccess()
                                    .getInlineFunParserRuleCall_1_1());

                        }
                        pushFollow(FOLLOW_ruleInlineFun_in_ruleFunExpr12776);
                        this_InlineFun_2 = ruleInlineFun();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_InlineFun_2;
                            afterParserOrEnumRuleCall();

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFunExpr"

    // $ANTLR start "entryRuleFunRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5708:1:
    // entryRuleFunRef returns [EObject current=null] : iv_ruleFunRef=
    // ruleFunRef EOF ;
    public final EObject entryRuleFunRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunRef = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5709:2:
            // (iv_ruleFunRef= ruleFunRef EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5710:2:
            // iv_ruleFunRef= ruleFunRef EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFunRefRule());
                }
                pushFollow(FOLLOW_ruleFunRef_in_entryRuleFunRef12812);
                iv_ruleFunRef = ruleFunRef();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFunRef;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFunRef12822);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFunRef"

    // $ANTLR start "ruleFunRef"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5717:1:
    // ruleFunRef returns [EObject current=null] : ( ( ( (lv_module_0_0=
    // ruleModuleVarMacro ) ) otherlv_1= ':' )? ( (lv_function_2_0=
    // ruleFunctionVarMacro ) ) otherlv_3= '/' ( (lv_arity_4_0= ruleIntVarMacro
    // ) ) ) ;
    public final EObject ruleFunRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        EObject lv_module_0_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_arity_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5720:28:
            // ( ( ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':' )?
            // ( (lv_function_2_0= ruleFunctionVarMacro ) ) otherlv_3= '/' (
            // (lv_arity_4_0= ruleIntVarMacro ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5721:1:
            // ( ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':' )? (
            // (lv_function_2_0= ruleFunctionVarMacro ) ) otherlv_3= '/' (
            // (lv_arity_4_0= ruleIntVarMacro ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5721:1:
                // ( ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':'
                // )? ( (lv_function_2_0= ruleFunctionVarMacro ) ) otherlv_3=
                // '/' ( (lv_arity_4_0= ruleIntVarMacro ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5721:2:
                // ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':' )?
                // ( (lv_function_2_0= ruleFunctionVarMacro ) ) otherlv_3= '/' (
                // (lv_arity_4_0= ruleIntVarMacro ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5721:2:
                    // ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':'
                    // )?
                    int alt84 = 2;
                    alt84 = dfa84.predict(input);
                    switch (alt84) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5721:3:
                    // ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':'
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5721:3:
                        // ( (lv_module_0_0= ruleModuleVarMacro ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5722:1:
                        // (lv_module_0_0= ruleModuleVarMacro )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5722:1:
                            // (lv_module_0_0= ruleModuleVarMacro )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5723:3:
                            // lv_module_0_0= ruleModuleVarMacro
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getFunRefAccess()
                                            .getModuleModuleVarMacroParserRuleCall_0_0_0());

                                }
                                pushFollow(FOLLOW_ruleModuleVarMacro_in_ruleFunRef12869);
                                lv_module_0_0 = ruleModuleVarMacro();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getFunRefRule());
                                    }
                                    set(current, "module", lv_module_0_0,
                                            "ModuleVarMacro");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        otherlv_1 = (Token) match(input, 57,
                                FOLLOW_57_in_ruleFunRef12881);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getFunRefAccess().getColonKeyword_0_1());

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5743:3:
                    // ( (lv_function_2_0= ruleFunctionVarMacro ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5744:1:
                    // (lv_function_2_0= ruleFunctionVarMacro )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5744:1:
                        // (lv_function_2_0= ruleFunctionVarMacro )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5745:3:
                        // lv_function_2_0= ruleFunctionVarMacro
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunRefAccess()
                                        .getFunctionFunctionVarMacroParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleFunctionVarMacro_in_ruleFunRef12904);
                            lv_function_2_0 = ruleFunctionVarMacro();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFunRefRule());
                                }
                                set(current, "function", lv_function_2_0,
                                        "FunctionVarMacro");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 69,
                            FOLLOW_69_in_ruleFunRef12916);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess.getFunRefAccess()
                                .getSolidusKeyword_2());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5765:1:
                    // ( (lv_arity_4_0= ruleIntVarMacro ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5766:1:
                    // (lv_arity_4_0= ruleIntVarMacro )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5766:1:
                        // (lv_arity_4_0= ruleIntVarMacro )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5767:3:
                        // lv_arity_4_0= ruleIntVarMacro
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunRefAccess()
                                        .getArityIntVarMacroParserRuleCall_3_0());

                            }
                            pushFollow(FOLLOW_ruleIntVarMacro_in_ruleFunRef12937);
                            lv_arity_4_0 = ruleIntVarMacro();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFunRefRule());
                                }
                                set(current, "arity", lv_arity_4_0,
                                        "IntVarMacro");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFunRef"

    // $ANTLR start "entryRuleInlineFun"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5791:1:
    // entryRuleInlineFun returns [EObject current=null] : iv_ruleInlineFun=
    // ruleInlineFun EOF ;
    public final EObject entryRuleInlineFun() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInlineFun = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5792:2:
            // (iv_ruleInlineFun= ruleInlineFun EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5793:2:
            // iv_ruleInlineFun= ruleInlineFun EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getInlineFunRule());
                }
                pushFollow(FOLLOW_ruleInlineFun_in_entryRuleInlineFun12973);
                iv_ruleInlineFun = ruleInlineFun();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleInlineFun;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleInlineFun12983);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleInlineFun"

    // $ANTLR start "ruleInlineFun"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5800:1:
    // ruleInlineFun returns [EObject current=null] : ( ( (lv_clauses_0_0=
    // ruleFunctionClause ) ) (otherlv_1= ';' ( (lv_clauses_2_0=
    // ruleFunctionClause ) ) )* otherlv_3= 'end' ) ;
    public final EObject ruleInlineFun() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        EObject lv_clauses_0_0 = null;

        EObject lv_clauses_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5803:28:
            // ( ( ( (lv_clauses_0_0= ruleFunctionClause ) ) (otherlv_1= ';' (
            // (lv_clauses_2_0= ruleFunctionClause ) ) )* otherlv_3= 'end' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5804:1:
            // ( ( (lv_clauses_0_0= ruleFunctionClause ) ) (otherlv_1= ';' (
            // (lv_clauses_2_0= ruleFunctionClause ) ) )* otherlv_3= 'end' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5804:1:
                // ( ( (lv_clauses_0_0= ruleFunctionClause ) ) (otherlv_1= ';' (
                // (lv_clauses_2_0= ruleFunctionClause ) ) )* otherlv_3= 'end' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5804:2:
                // ( (lv_clauses_0_0= ruleFunctionClause ) ) (otherlv_1= ';' (
                // (lv_clauses_2_0= ruleFunctionClause ) ) )* otherlv_3= 'end'
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5804:2:
                    // ( (lv_clauses_0_0= ruleFunctionClause ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5805:1:
                    // (lv_clauses_0_0= ruleFunctionClause )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5805:1:
                        // (lv_clauses_0_0= ruleFunctionClause )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5806:3:
                        // lv_clauses_0_0= ruleFunctionClause
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getInlineFunAccess()
                                        .getClausesFunctionClauseParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleFunctionClause_in_ruleInlineFun13029);
                            lv_clauses_0_0 = ruleFunctionClause();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getInlineFunRule());
                                }
                                add(current, "clauses", lv_clauses_0_0,
                                        "FunctionClause");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5822:2:
                    // (otherlv_1= ';' ( (lv_clauses_2_0= ruleFunctionClause ) )
                    // )*
                    loop85:
                    do {
                        int alt85 = 2;
                        final int LA85_0 = input.LA(1);

                        if (LA85_0 == 46) {
                            alt85 = 1;
                        }

                        switch (alt85) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5822:4:
                        // otherlv_1= ';' ( (lv_clauses_2_0= ruleFunctionClause
                        // ) )
                        {
                            otherlv_1 = (Token) match(input, 46,
                                    FOLLOW_46_in_ruleInlineFun13042);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getInlineFunAccess()
                                        .getSemicolonKeyword_1_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5826:1:
                            // ( (lv_clauses_2_0= ruleFunctionClause ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5827:1:
                            // (lv_clauses_2_0= ruleFunctionClause )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5827:1:
                                // (lv_clauses_2_0= ruleFunctionClause )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5828:3:
                                // lv_clauses_2_0= ruleFunctionClause
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getInlineFunAccess()
                                                .getClausesFunctionClauseParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleFunctionClause_in_ruleInlineFun13063);
                                    lv_clauses_2_0 = ruleFunctionClause();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getInlineFunRule());
                                        }
                                        add(current, "clauses", lv_clauses_2_0,
                                                "FunctionClause");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop85;
                        }
                    } while (true);

                    otherlv_3 = (Token) match(input, 59,
                            FOLLOW_59_in_ruleInlineFun13077);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getInlineFunAccess().getEndKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleInlineFun"

    // $ANTLR start "entryRuleTryExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5856:1:
    // entryRuleTryExpr returns [EObject current=null] : iv_ruleTryExpr=
    // ruleTryExpr EOF ;
    public final EObject entryRuleTryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTryExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5857:2:
            // (iv_ruleTryExpr= ruleTryExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5858:2:
            // iv_ruleTryExpr= ruleTryExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTryExprRule());
                }
                pushFollow(FOLLOW_ruleTryExpr_in_entryRuleTryExpr13113);
                iv_ruleTryExpr = ruleTryExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTryExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTryExpr13123);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTryExpr"

    // $ANTLR start "ruleTryExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5865:1:
    // ruleTryExpr returns [EObject current=null] : (otherlv_0= 'try' (
    // (lv_body_1_0= ruleExpressions ) ) (otherlv_2= 'of' ( (lv_of_clauses_3_0=
    // ruleCrClause ) ) (otherlv_4= ';' ( (lv_of_clauses_5_0= ruleCrClause ) )
    // )* )? ( (otherlv_6= 'catch' ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
    // (lv_catch_7_0= ruleTryClause ) ) (otherlv_8= ';' ( ( ( ( ( ruleNAMEVAR )
    // ) ':' ) )=> (lv_catch_9_0= ruleTryClause ) ) )* (otherlv_10= 'after' (
    // (lv_after_body_11_0= ruleExpressions ) ) )? ) | (otherlv_12= 'after' (
    // (lv_after_body_13_0= ruleExpressions ) ) ) ) otherlv_14= 'end' ) ;
    public final EObject ruleTryExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        Token otherlv_8 = null;
        Token otherlv_10 = null;
        Token otherlv_12 = null;
        Token otherlv_14 = null;
        EObject lv_body_1_0 = null;

        EObject lv_of_clauses_3_0 = null;

        EObject lv_of_clauses_5_0 = null;

        EObject lv_catch_7_0 = null;

        EObject lv_catch_9_0 = null;

        EObject lv_after_body_11_0 = null;

        EObject lv_after_body_13_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5868:28:
            // ( (otherlv_0= 'try' ( (lv_body_1_0= ruleExpressions ) )
            // (otherlv_2= 'of' ( (lv_of_clauses_3_0= ruleCrClause ) )
            // (otherlv_4= ';' ( (lv_of_clauses_5_0= ruleCrClause ) ) )* )? (
            // (otherlv_6= 'catch' ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
            // (lv_catch_7_0= ruleTryClause ) ) (otherlv_8= ';' ( ( ( ( (
            // ruleNAMEVAR ) ) ':' ) )=> (lv_catch_9_0= ruleTryClause ) ) )*
            // (otherlv_10= 'after' ( (lv_after_body_11_0= ruleExpressions ) )
            // )? ) | (otherlv_12= 'after' ( (lv_after_body_13_0=
            // ruleExpressions ) ) ) ) otherlv_14= 'end' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5869:1:
            // (otherlv_0= 'try' ( (lv_body_1_0= ruleExpressions ) ) (otherlv_2=
            // 'of' ( (lv_of_clauses_3_0= ruleCrClause ) ) (otherlv_4= ';' (
            // (lv_of_clauses_5_0= ruleCrClause ) ) )* )? ( (otherlv_6= 'catch'
            // ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> (lv_catch_7_0= ruleTryClause
            // ) ) (otherlv_8= ';' ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
            // (lv_catch_9_0= ruleTryClause ) ) )* (otherlv_10= 'after' (
            // (lv_after_body_11_0= ruleExpressions ) ) )? ) | (otherlv_12=
            // 'after' ( (lv_after_body_13_0= ruleExpressions ) ) ) )
            // otherlv_14= 'end' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5869:1:
                // (otherlv_0= 'try' ( (lv_body_1_0= ruleExpressions ) )
                // (otherlv_2= 'of' ( (lv_of_clauses_3_0= ruleCrClause ) )
                // (otherlv_4= ';' ( (lv_of_clauses_5_0= ruleCrClause ) ) )* )?
                // ( (otherlv_6= 'catch' ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
                // (lv_catch_7_0= ruleTryClause ) ) (otherlv_8= ';' ( ( ( ( (
                // ruleNAMEVAR ) ) ':' ) )=> (lv_catch_9_0= ruleTryClause ) ) )*
                // (otherlv_10= 'after' ( (lv_after_body_11_0= ruleExpressions )
                // ) )? ) | (otherlv_12= 'after' ( (lv_after_body_13_0=
                // ruleExpressions ) ) ) ) otherlv_14= 'end' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5869:3:
                // otherlv_0= 'try' ( (lv_body_1_0= ruleExpressions ) )
                // (otherlv_2= 'of' ( (lv_of_clauses_3_0= ruleCrClause ) )
                // (otherlv_4= ';' ( (lv_of_clauses_5_0= ruleCrClause ) ) )* )?
                // ( (otherlv_6= 'catch' ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
                // (lv_catch_7_0= ruleTryClause ) ) (otherlv_8= ';' ( ( ( ( (
                // ruleNAMEVAR ) ) ':' ) )=> (lv_catch_9_0= ruleTryClause ) ) )*
                // (otherlv_10= 'after' ( (lv_after_body_11_0= ruleExpressions )
                // ) )? ) | (otherlv_12= 'after' ( (lv_after_body_13_0=
                // ruleExpressions ) ) ) ) otherlv_14= 'end'
                {
                    otherlv_0 = (Token) match(input, 70,
                            FOLLOW_70_in_ruleTryExpr13160);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess.getTryExprAccess()
                                .getTryKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5873:1:
                    // ( (lv_body_1_0= ruleExpressions ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5874:1:
                    // (lv_body_1_0= ruleExpressions )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5874:1:
                        // (lv_body_1_0= ruleExpressions )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5875:3:
                        // lv_body_1_0= ruleExpressions
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getTryExprAccess()
                                        .getBodyExpressionsParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleExpressions_in_ruleTryExpr13181);
                            lv_body_1_0 = ruleExpressions();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getTryExprRule());
                                }
                                set(current, "body", lv_body_1_0, "Expressions");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5891:2:
                    // (otherlv_2= 'of' ( (lv_of_clauses_3_0= ruleCrClause ) )
                    // (otherlv_4= ';' ( (lv_of_clauses_5_0= ruleCrClause ) ) )*
                    // )?
                    int alt87 = 2;
                    final int LA87_0 = input.LA(1);

                    if (LA87_0 == 65) {
                        alt87 = 1;
                    }
                    switch (alt87) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5891:4:
                    // otherlv_2= 'of' ( (lv_of_clauses_3_0= ruleCrClause ) )
                    // (otherlv_4= ';' ( (lv_of_clauses_5_0= ruleCrClause ) ) )*
                    {
                        otherlv_2 = (Token) match(input, 65,
                                FOLLOW_65_in_ruleTryExpr13194);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_2, grammarAccess
                                    .getTryExprAccess().getOfKeyword_2_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5895:1:
                        // ( (lv_of_clauses_3_0= ruleCrClause ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5896:1:
                        // (lv_of_clauses_3_0= ruleCrClause )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5896:1:
                            // (lv_of_clauses_3_0= ruleCrClause )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5897:3:
                            // lv_of_clauses_3_0= ruleCrClause
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTryExprAccess()
                                            .getOf_clausesCrClauseParserRuleCall_2_1_0());

                                }
                                pushFollow(FOLLOW_ruleCrClause_in_ruleTryExpr13215);
                                lv_of_clauses_3_0 = ruleCrClause();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTryExprRule());
                                    }
                                    add(current, "of_clauses",
                                            lv_of_clauses_3_0, "CrClause");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5913:2:
                        // (otherlv_4= ';' ( (lv_of_clauses_5_0= ruleCrClause )
                        // ) )*
                        loop86:
                        do {
                            int alt86 = 2;
                            final int LA86_0 = input.LA(1);

                            if (LA86_0 == 46) {
                                alt86 = 1;
                            }

                            switch (alt86) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5913:4:
                            // otherlv_4= ';' ( (lv_of_clauses_5_0= ruleCrClause
                            // ) )
                            {
                                otherlv_4 = (Token) match(input, 46,
                                        FOLLOW_46_in_ruleTryExpr13228);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_4, grammarAccess
                                            .getTryExprAccess()
                                            .getSemicolonKeyword_2_2_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5917:1:
                                // ( (lv_of_clauses_5_0= ruleCrClause ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5918:1:
                                // (lv_of_clauses_5_0= ruleCrClause )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5918:1:
                                    // (lv_of_clauses_5_0= ruleCrClause )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5919:3:
                                    // lv_of_clauses_5_0= ruleCrClause
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getTryExprAccess()
                                                    .getOf_clausesCrClauseParserRuleCall_2_2_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleCrClause_in_ruleTryExpr13249);
                                        lv_of_clauses_5_0 = ruleCrClause();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getTryExprRule());
                                            }
                                            add(current, "of_clauses",
                                                    lv_of_clauses_5_0,
                                                    "CrClause");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                break loop86;
                            }
                        } while (true);

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5935:6:
                    // ( (otherlv_6= 'catch' ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
                    // (lv_catch_7_0= ruleTryClause ) ) (otherlv_8= ';' ( ( ( (
                    // ( ruleNAMEVAR ) ) ':' ) )=> (lv_catch_9_0= ruleTryClause
                    // ) ) )* (otherlv_10= 'after' ( (lv_after_body_11_0=
                    // ruleExpressions ) ) )? ) | (otherlv_12= 'after' (
                    // (lv_after_body_13_0= ruleExpressions ) ) ) )
                    int alt90 = 2;
                    final int LA90_0 = input.LA(1);

                    if (LA90_0 == 53) {
                        alt90 = 1;
                    } else if (LA90_0 == 67) {
                        alt90 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 90, 0, input);

                        throw nvae;
                    }
                    switch (alt90) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5935:7:
                    // (otherlv_6= 'catch' ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
                    // (lv_catch_7_0= ruleTryClause ) ) (otherlv_8= ';' ( ( ( (
                    // ( ruleNAMEVAR ) ) ':' ) )=> (lv_catch_9_0= ruleTryClause
                    // ) ) )* (otherlv_10= 'after' ( (lv_after_body_11_0=
                    // ruleExpressions ) ) )? )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5935:7:
                        // (otherlv_6= 'catch' ( ( ( ( ( ruleNAMEVAR ) ) ':' )
                        // )=> (lv_catch_7_0= ruleTryClause ) ) (otherlv_8= ';'
                        // ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> (lv_catch_9_0=
                        // ruleTryClause ) ) )* (otherlv_10= 'after' (
                        // (lv_after_body_11_0= ruleExpressions ) ) )? )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5935:9:
                        // otherlv_6= 'catch' ( ( ( ( ( ruleNAMEVAR ) ) ':' )
                        // )=> (lv_catch_7_0= ruleTryClause ) ) (otherlv_8= ';'
                        // ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> (lv_catch_9_0=
                        // ruleTryClause ) ) )* (otherlv_10= 'after' (
                        // (lv_after_body_11_0= ruleExpressions ) ) )?
                        {
                            otherlv_6 = (Token) match(input, 53,
                                    FOLLOW_53_in_ruleTryExpr13267);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_6, grammarAccess
                                        .getTryExprAccess()
                                        .getCatchKeyword_3_0_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5939:1:
                            // ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
                            // (lv_catch_7_0= ruleTryClause ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5939:2:
                            // ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> (lv_catch_7_0=
                            // ruleTryClause )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5945:1:
                                // (lv_catch_7_0= ruleTryClause )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5946:3:
                                // lv_catch_7_0= ruleTryClause
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTryExprAccess()
                                                .getCatchTryClauseParserRuleCall_3_0_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleTryClause_in_ruleTryExpr13306);
                                    lv_catch_7_0 = ruleTryClause();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTryExprRule());
                                        }
                                        add(current, "catch", lv_catch_7_0,
                                                "TryClause");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5962:2:
                            // (otherlv_8= ';' ( ( ( ( ( ruleNAMEVAR ) ) ':' )
                            // )=> (lv_catch_9_0= ruleTryClause ) ) )*
                            loop88:
                            do {
                                int alt88 = 2;
                                final int LA88_0 = input.LA(1);

                                if (LA88_0 == 46) {
                                    alt88 = 1;
                                }

                                switch (alt88) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5962:4:
                                // otherlv_8= ';' ( ( ( ( ( ruleNAMEVAR ) ) ':'
                                // ) )=> (lv_catch_9_0= ruleTryClause ) )
                                {
                                    otherlv_8 = (Token) match(input, 46,
                                            FOLLOW_46_in_ruleTryExpr13319);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_8, grammarAccess
                                                .getTryExprAccess()
                                                .getSemicolonKeyword_3_0_2_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5966:1:
                                    // ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
                                    // (lv_catch_9_0= ruleTryClause ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5966:2:
                                    // ( ( ( ( ruleNAMEVAR ) ) ':' ) )=>
                                    // (lv_catch_9_0= ruleTryClause )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5972:1:
                                        // (lv_catch_9_0= ruleTryClause )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5973:3:
                                        // lv_catch_9_0= ruleTryClause
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getTryExprAccess()
                                                        .getCatchTryClauseParserRuleCall_3_0_2_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleTryClause_in_ruleTryExpr13358);
                                            lv_catch_9_0 = ruleTryClause();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getTryExprRule());
                                                }
                                                add(current, "catch",
                                                        lv_catch_9_0,
                                                        "TryClause");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop88;
                                }
                            } while (true);

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5989:4:
                            // (otherlv_10= 'after' ( (lv_after_body_11_0=
                            // ruleExpressions ) ) )?
                            int alt89 = 2;
                            final int LA89_0 = input.LA(1);

                            if (LA89_0 == 67) {
                                alt89 = 1;
                            }
                            switch (alt89) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5989:6:
                            // otherlv_10= 'after' ( (lv_after_body_11_0=
                            // ruleExpressions ) )
                            {
                                otherlv_10 = (Token) match(input, 67,
                                        FOLLOW_67_in_ruleTryExpr13373);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_10, grammarAccess
                                            .getTryExprAccess()
                                            .getAfterKeyword_3_0_3_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5993:1:
                                // ( (lv_after_body_11_0= ruleExpressions ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5994:1:
                                // (lv_after_body_11_0= ruleExpressions )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5994:1:
                                    // (lv_after_body_11_0= ruleExpressions )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:5995:3:
                                    // lv_after_body_11_0= ruleExpressions
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getTryExprAccess()
                                                    .getAfter_bodyExpressionsParserRuleCall_3_0_3_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleExpressions_in_ruleTryExpr13394);
                                        lv_after_body_11_0 = ruleExpressions();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getTryExprRule());
                                            }
                                            set(current, "after_body",
                                                    lv_after_body_11_0,
                                                    "Expressions");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6012:6:
                    // (otherlv_12= 'after' ( (lv_after_body_13_0=
                    // ruleExpressions ) ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6012:6:
                        // (otherlv_12= 'after' ( (lv_after_body_13_0=
                        // ruleExpressions ) ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6012:8:
                        // otherlv_12= 'after' ( (lv_after_body_13_0=
                        // ruleExpressions ) )
                        {
                            otherlv_12 = (Token) match(input, 67,
                                    FOLLOW_67_in_ruleTryExpr13416);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_12, grammarAccess
                                        .getTryExprAccess()
                                        .getAfterKeyword_3_1_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6016:1:
                            // ( (lv_after_body_13_0= ruleExpressions ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6017:1:
                            // (lv_after_body_13_0= ruleExpressions )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6017:1:
                                // (lv_after_body_13_0= ruleExpressions )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6018:3:
                                // lv_after_body_13_0= ruleExpressions
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTryExprAccess()
                                                .getAfter_bodyExpressionsParserRuleCall_3_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpressions_in_ruleTryExpr13437);
                                    lv_after_body_13_0 = ruleExpressions();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTryExprRule());
                                        }
                                        set(current, "after_body",
                                                lv_after_body_13_0,
                                                "Expressions");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }

                    }
                        break;

                    }

                    otherlv_14 = (Token) match(input, 59,
                            FOLLOW_59_in_ruleTryExpr13451);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_14, grammarAccess
                                .getTryExprAccess().getEndKeyword_4());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTryExpr"

    // $ANTLR start "entryRuleTryClause"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6046:1:
    // entryRuleTryClause returns [EObject current=null] : iv_ruleTryClause=
    // ruleTryClause EOF ;
    public final EObject entryRuleTryClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTryClause = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6047:2:
            // (iv_ruleTryClause= ruleTryClause EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6048:2:
            // iv_ruleTryClause= ruleTryClause EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTryClauseRule());
                }
                pushFollow(FOLLOW_ruleTryClause_in_entryRuleTryClause13487);
                iv_ruleTryClause = ruleTryClause();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTryClause;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTryClause13497);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTryClause"

    // $ANTLR start "ruleTryClause"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6055:1:
    // ruleTryClause returns [EObject current=null] : ( ( ( ( ( ( ruleNAMEVAR )
    // ) ':' ) )=> ( ( (lv_hdr_0_0= ruleNAMEVAR ) ) otherlv_1= ':' ) )? (
    // (lv_cond_2_0= rulePatternExpression ) ) (otherlv_3= 'when' (
    // (lv_guard_4_0= ruleGuard ) ) )? otherlv_5= '->' ( (lv_body_6_0=
    // ruleExpressions ) ) ) ;
    public final EObject ruleTryClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        AntlrDatatypeRuleToken lv_hdr_0_0 = null;

        EObject lv_cond_2_0 = null;

        EObject lv_guard_4_0 = null;

        EObject lv_body_6_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6058:28:
            // ( ( ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> ( ( (lv_hdr_0_0=
            // ruleNAMEVAR ) ) otherlv_1= ':' ) )? ( (lv_cond_2_0=
            // rulePatternExpression ) ) (otherlv_3= 'when' ( (lv_guard_4_0=
            // ruleGuard ) ) )? otherlv_5= '->' ( (lv_body_6_0= ruleExpressions
            // ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:1:
            // ( ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> ( ( (lv_hdr_0_0=
            // ruleNAMEVAR ) ) otherlv_1= ':' ) )? ( (lv_cond_2_0=
            // rulePatternExpression ) ) (otherlv_3= 'when' ( (lv_guard_4_0=
            // ruleGuard ) ) )? otherlv_5= '->' ( (lv_body_6_0= ruleExpressions
            // ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:1:
                // ( ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> ( ( (lv_hdr_0_0=
                // ruleNAMEVAR ) ) otherlv_1= ':' ) )? ( (lv_cond_2_0=
                // rulePatternExpression ) ) (otherlv_3= 'when' ( (lv_guard_4_0=
                // ruleGuard ) ) )? otherlv_5= '->' ( (lv_body_6_0=
                // ruleExpressions ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:2:
                // ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> ( ( (lv_hdr_0_0=
                // ruleNAMEVAR ) ) otherlv_1= ':' ) )? ( (lv_cond_2_0=
                // rulePatternExpression ) ) (otherlv_3= 'when' ( (lv_guard_4_0=
                // ruleGuard ) ) )? otherlv_5= '->' ( (lv_body_6_0=
                // ruleExpressions ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:2:
                    // ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> ( ( (lv_hdr_0_0=
                    // ruleNAMEVAR ) ) otherlv_1= ':' ) )?
                    int alt91 = 2;
                    alt91 = dfa91.predict(input);
                    switch (alt91) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:3:
                    // ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> ( ( (lv_hdr_0_0=
                    // ruleNAMEVAR ) ) otherlv_1= ':' )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6064:5:
                        // ( ( (lv_hdr_0_0= ruleNAMEVAR ) ) otherlv_1= ':' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6064:6:
                        // ( (lv_hdr_0_0= ruleNAMEVAR ) ) otherlv_1= ':'
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6064:6:
                            // ( (lv_hdr_0_0= ruleNAMEVAR ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6065:1:
                            // (lv_hdr_0_0= ruleNAMEVAR )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6065:1:
                                // (lv_hdr_0_0= ruleNAMEVAR )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6066:3:
                                // lv_hdr_0_0= ruleNAMEVAR
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTryClauseAccess()
                                                .getHdrNAMEVARParserRuleCall_0_0_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleNAMEVAR_in_ruleTryClause13563);
                                    lv_hdr_0_0 = ruleNAMEVAR();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTryClauseRule());
                                        }
                                        set(current, "hdr", lv_hdr_0_0,
                                                "NAMEVAR");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            otherlv_1 = (Token) match(input, 57,
                                    FOLLOW_57_in_ruleTryClause13575);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getTryClauseAccess()
                                        .getColonKeyword_0_0_1());

                            }

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6086:4:
                    // ( (lv_cond_2_0= rulePatternExpression ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6087:1:
                    // (lv_cond_2_0= rulePatternExpression )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6087:1:
                        // (lv_cond_2_0= rulePatternExpression )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6088:3:
                        // lv_cond_2_0= rulePatternExpression
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getTryClauseAccess()
                                        .getCondPatternExpressionParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_rulePatternExpression_in_ruleTryClause13599);
                            lv_cond_2_0 = rulePatternExpression();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getTryClauseRule());
                                }
                                set(current, "cond", lv_cond_2_0,
                                        "PatternExpression");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6104:2:
                    // (otherlv_3= 'when' ( (lv_guard_4_0= ruleGuard ) ) )?
                    int alt92 = 2;
                    final int LA92_0 = input.LA(1);

                    if (LA92_0 == 49) {
                        alt92 = 1;
                    }
                    switch (alt92) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6104:4:
                    // otherlv_3= 'when' ( (lv_guard_4_0= ruleGuard ) )
                    {
                        otherlv_3 = (Token) match(input, 49,
                                FOLLOW_49_in_ruleTryClause13612);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_3, grammarAccess
                                    .getTryClauseAccess().getWhenKeyword_2_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6108:1:
                        // ( (lv_guard_4_0= ruleGuard ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6109:1:
                        // (lv_guard_4_0= ruleGuard )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6109:1:
                            // (lv_guard_4_0= ruleGuard )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6110:3:
                            // lv_guard_4_0= ruleGuard
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTryClauseAccess()
                                            .getGuardGuardParserRuleCall_2_1_0());

                                }
                                pushFollow(FOLLOW_ruleGuard_in_ruleTryClause13633);
                                lv_guard_4_0 = ruleGuard();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTryClauseRule());
                                    }
                                    set(current, "guard", lv_guard_4_0, "Guard");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    otherlv_5 = (Token) match(input, 50,
                            FOLLOW_50_in_ruleTryClause13647);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_5, grammarAccess
                                .getTryClauseAccess()
                                .getHyphenMinusGreaterThanSignKeyword_3());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6130:1:
                    // ( (lv_body_6_0= ruleExpressions ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6131:1:
                    // (lv_body_6_0= ruleExpressions )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6131:1:
                        // (lv_body_6_0= ruleExpressions )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6132:3:
                        // lv_body_6_0= ruleExpressions
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getTryClauseAccess()
                                        .getBodyExpressionsParserRuleCall_4_0());

                            }
                            pushFollow(FOLLOW_ruleExpressions_in_ruleTryClause13668);
                            lv_body_6_0 = ruleExpressions();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getTryClauseRule());
                                }
                                set(current, "body", lv_body_6_0, "Expressions");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTryClause"

    // $ANTLR start "entryRuleListOrComprehension"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6156:1:
    // entryRuleListOrComprehension returns [EObject current=null] :
    // iv_ruleListOrComprehension= ruleListOrComprehension EOF ;
    public final EObject entryRuleListOrComprehension()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleListOrComprehension = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6157:2:
            // (iv_ruleListOrComprehension= ruleListOrComprehension EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6158:2:
            // iv_ruleListOrComprehension= ruleListOrComprehension EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getListOrComprehensionRule());
                }
                pushFollow(FOLLOW_ruleListOrComprehension_in_entryRuleListOrComprehension13704);
                iv_ruleListOrComprehension = ruleListOrComprehension();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleListOrComprehension;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleListOrComprehension13714);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleListOrComprehension"

    // $ANTLR start "ruleListOrComprehension"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6165:1:
    // ruleListOrComprehension returns [EObject current=null] : (otherlv_0= '['
    // ( () | ( ( (lv_elements_2_0= ruleExpression ) ) (otherlv_3= ',' (
    // (lv_elements_4_0= ruleExpression ) ) )* ( (otherlv_5= '|' ( (lv_tail_6_0=
    // ruleExpression ) ) ) | ( () otherlv_8= '||' ( (lv_generators_9_0=
    // ruleLCExpr ) ) (otherlv_10= ',' ( (lv_generators_11_0= ruleLCExpr ) ) )*
    // ) )? ) ) otherlv_12= ']' ) ;
    public final EObject ruleListOrComprehension() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        Token otherlv_8 = null;
        Token otherlv_10 = null;
        Token otherlv_12 = null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        EObject lv_tail_6_0 = null;

        EObject lv_generators_9_0 = null;

        EObject lv_generators_11_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6168:28:
            // ( (otherlv_0= '[' ( () | ( ( (lv_elements_2_0= ruleExpression ) )
            // (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )* (
            // (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression ) ) ) | ( ()
            // otherlv_8= '||' ( (lv_generators_9_0= ruleLCExpr ) ) (otherlv_10=
            // ',' ( (lv_generators_11_0= ruleLCExpr ) ) )* ) )? ) ) otherlv_12=
            // ']' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6169:1:
            // (otherlv_0= '[' ( () | ( ( (lv_elements_2_0= ruleExpression ) )
            // (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )* (
            // (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression ) ) ) | ( ()
            // otherlv_8= '||' ( (lv_generators_9_0= ruleLCExpr ) ) (otherlv_10=
            // ',' ( (lv_generators_11_0= ruleLCExpr ) ) )* ) )? ) ) otherlv_12=
            // ']' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6169:1:
                // (otherlv_0= '[' ( () | ( ( (lv_elements_2_0= ruleExpression )
                // ) (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )* (
                // (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression ) ) ) | ( ()
                // otherlv_8= '||' ( (lv_generators_9_0= ruleLCExpr ) )
                // (otherlv_10= ',' ( (lv_generators_11_0= ruleLCExpr ) ) )* )
                // )? ) ) otherlv_12= ']' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6169:3:
                // otherlv_0= '[' ( () | ( ( (lv_elements_2_0= ruleExpression )
                // ) (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )* (
                // (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression ) ) ) | ( ()
                // otherlv_8= '||' ( (lv_generators_9_0= ruleLCExpr ) )
                // (otherlv_10= ',' ( (lv_generators_11_0= ruleLCExpr ) ) )* )
                // )? ) ) otherlv_12= ']'
                {
                    otherlv_0 = (Token) match(input, 40,
                            FOLLOW_40_in_ruleListOrComprehension13751);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getListOrComprehensionAccess()
                                .getLeftSquareBracketKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6173:1:
                    // ( () | ( ( (lv_elements_2_0= ruleExpression ) )
                    // (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )*
                    // ( (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression ) ) ) |
                    // ( () otherlv_8= '||' ( (lv_generators_9_0= ruleLCExpr ) )
                    // (otherlv_10= ',' ( (lv_generators_11_0= ruleLCExpr ) ) )*
                    // ) )? ) )
                    int alt96 = 2;
                    final int LA96_0 = input.LA(1);

                    if (LA96_0 == 41) {
                        alt96 = 1;
                    } else if (LA96_0 >= RULE_STRING
                            && LA96_0 <= RULE_BASED_INT || LA96_0 >= 19
                            && LA96_0 <= 21 || LA96_0 >= 24 && LA96_0 <= 35
                            || LA96_0 >= 39 && LA96_0 <= 40 || LA96_0 >= 42
                            && LA96_0 <= 45 || LA96_0 >= 47 && LA96_0 <= 48
                            || LA96_0 >= 51 && LA96_0 <= 53 || LA96_0 == 56
                            || LA96_0 == 58 || LA96_0 >= 60 && LA96_0 <= 64
                            || LA96_0 == 66 || LA96_0 == 68 || LA96_0 == 70
                            || LA96_0 == 73 || LA96_0 == 77 || LA96_0 >= 89
                            && LA96_0 <= 90 || LA96_0 == 102) {
                        alt96 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 96, 0, input);

                        throw nvae;
                    }
                    switch (alt96) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6173:2:
                    // ()
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6173:2:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6174:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getListOrComprehensionAccess()
                                        .getErlListAction_1_0(), current);

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6180:6:
                    // ( ( (lv_elements_2_0= ruleExpression ) ) (otherlv_3= ','
                    // ( (lv_elements_4_0= ruleExpression ) ) )* ( (otherlv_5=
                    // '|' ( (lv_tail_6_0= ruleExpression ) ) ) | ( ()
                    // otherlv_8= '||' ( (lv_generators_9_0= ruleLCExpr ) )
                    // (otherlv_10= ',' ( (lv_generators_11_0= ruleLCExpr ) ) )*
                    // ) )? )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6180:6:
                        // ( ( (lv_elements_2_0= ruleExpression ) ) (otherlv_3=
                        // ',' ( (lv_elements_4_0= ruleExpression ) ) )* (
                        // (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression ) ) )
                        // | ( () otherlv_8= '||' ( (lv_generators_9_0=
                        // ruleLCExpr ) ) (otherlv_10= ',' (
                        // (lv_generators_11_0= ruleLCExpr ) ) )* ) )? )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6180:7:
                        // ( (lv_elements_2_0= ruleExpression ) ) (otherlv_3=
                        // ',' ( (lv_elements_4_0= ruleExpression ) ) )* (
                        // (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression ) ) )
                        // | ( () otherlv_8= '||' ( (lv_generators_9_0=
                        // ruleLCExpr ) ) (otherlv_10= ',' (
                        // (lv_generators_11_0= ruleLCExpr ) ) )* ) )?
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6180:7:
                            // ( (lv_elements_2_0= ruleExpression ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6181:1:
                            // (lv_elements_2_0= ruleExpression )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6181:1:
                                // (lv_elements_2_0= ruleExpression )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6182:3:
                                // lv_elements_2_0= ruleExpression
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getListOrComprehensionAccess()
                                                .getElementsExpressionParserRuleCall_1_1_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpression_in_ruleListOrComprehension13789);
                                    lv_elements_2_0 = ruleExpression();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getListOrComprehensionRule());
                                        }
                                        add(current, "elements",
                                                lv_elements_2_0, "Expression");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6198:2:
                            // (otherlv_3= ',' ( (lv_elements_4_0=
                            // ruleExpression ) ) )*
                            loop93:
                            do {
                                int alt93 = 2;
                                final int LA93_0 = input.LA(1);

                                if (LA93_0 == 22) {
                                    alt93 = 1;
                                }

                                switch (alt93) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6198:4:
                                // otherlv_3= ',' ( (lv_elements_4_0=
                                // ruleExpression ) )
                                {
                                    otherlv_3 = (Token) match(input, 22,
                                            FOLLOW_22_in_ruleListOrComprehension13802);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_3, grammarAccess
                                                .getListOrComprehensionAccess()
                                                .getCommaKeyword_1_1_1_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6202:1:
                                    // ( (lv_elements_4_0= ruleExpression ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6203:1:
                                    // (lv_elements_4_0= ruleExpression )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6203:1:
                                        // (lv_elements_4_0= ruleExpression )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6204:3:
                                        // lv_elements_4_0= ruleExpression
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getListOrComprehensionAccess()
                                                        .getElementsExpressionParserRuleCall_1_1_1_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleExpression_in_ruleListOrComprehension13823);
                                            lv_elements_4_0 = ruleExpression();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getListOrComprehensionRule());
                                                }
                                                add(current, "elements",
                                                        lv_elements_4_0,
                                                        "Expression");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop93;
                                }
                            } while (true);

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6220:4:
                            // ( (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression
                            // ) ) ) | ( () otherlv_8= '||' (
                            // (lv_generators_9_0= ruleLCExpr ) ) (otherlv_10=
                            // ',' ( (lv_generators_11_0= ruleLCExpr ) ) )* ) )?
                            int alt95 = 3;
                            final int LA95_0 = input.LA(1);

                            if (LA95_0 == 71) {
                                alt95 = 1;
                            } else if (LA95_0 == 72) {
                                alt95 = 2;
                            }
                            switch (alt95) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6220:5:
                            // (otherlv_5= '|' ( (lv_tail_6_0= ruleExpression )
                            // ) )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6220:5:
                                // (otherlv_5= '|' ( (lv_tail_6_0=
                                // ruleExpression ) ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6220:7:
                                // otherlv_5= '|' ( (lv_tail_6_0= ruleExpression
                                // ) )
                                {
                                    otherlv_5 = (Token) match(input, 71,
                                            FOLLOW_71_in_ruleListOrComprehension13839);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(
                                                otherlv_5,
                                                grammarAccess
                                                        .getListOrComprehensionAccess()
                                                        .getVerticalLineKeyword_1_1_2_0_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6224:1:
                                    // ( (lv_tail_6_0= ruleExpression ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6225:1:
                                    // (lv_tail_6_0= ruleExpression )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6225:1:
                                        // (lv_tail_6_0= ruleExpression )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6226:3:
                                        // lv_tail_6_0= ruleExpression
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getListOrComprehensionAccess()
                                                        .getTailExpressionParserRuleCall_1_1_2_0_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleExpression_in_ruleListOrComprehension13860);
                                            lv_tail_6_0 = ruleExpression();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getListOrComprehensionRule());
                                                }
                                                set(current, "tail",
                                                        lv_tail_6_0,
                                                        "Expression");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }

                            }
                                break;
                            case 2:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6243:6:
                            // ( () otherlv_8= '||' ( (lv_generators_9_0=
                            // ruleLCExpr ) ) (otherlv_10= ',' (
                            // (lv_generators_11_0= ruleLCExpr ) ) )* )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6243:6:
                                // ( () otherlv_8= '||' ( (lv_generators_9_0=
                                // ruleLCExpr ) ) (otherlv_10= ',' (
                                // (lv_generators_11_0= ruleLCExpr ) ) )* )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6243:7:
                                // () otherlv_8= '||' ( (lv_generators_9_0=
                                // ruleLCExpr ) ) (otherlv_10= ',' (
                                // (lv_generators_11_0= ruleLCExpr ) ) )*
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6243:7:
                                    // ()
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6244:5:
                                    {
                                        if (state.backtracking == 0) {

                                            current = forceCreateModelElementAndSet(
                                                    grammarAccess
                                                            .getListOrComprehensionAccess()
                                                            .getListComprehensionRootAction_1_1_2_1_0(),
                                                    current);

                                        }

                                    }

                                    otherlv_8 = (Token) match(input, 72,
                                            FOLLOW_72_in_ruleListOrComprehension13889);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(
                                                otherlv_8,
                                                grammarAccess
                                                        .getListOrComprehensionAccess()
                                                        .getVerticalLineVerticalLineKeyword_1_1_2_1_1());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6253:1:
                                    // ( (lv_generators_9_0= ruleLCExpr ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6254:1:
                                    // (lv_generators_9_0= ruleLCExpr )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6254:1:
                                        // (lv_generators_9_0= ruleLCExpr )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6255:3:
                                        // lv_generators_9_0= ruleLCExpr
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getListOrComprehensionAccess()
                                                        .getGeneratorsLCExprParserRuleCall_1_1_2_1_2_0());

                                            }
                                            pushFollow(FOLLOW_ruleLCExpr_in_ruleListOrComprehension13910);
                                            lv_generators_9_0 = ruleLCExpr();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getListOrComprehensionRule());
                                                }
                                                add(current, "generators",
                                                        lv_generators_9_0,
                                                        "LCExpr");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6271:2:
                                    // (otherlv_10= ',' ( (lv_generators_11_0=
                                    // ruleLCExpr ) ) )*
                                    loop94:
                                    do {
                                        int alt94 = 2;
                                        final int LA94_0 = input.LA(1);

                                        if (LA94_0 == 22) {
                                            alt94 = 1;
                                        }

                                        switch (alt94) {
                                        case 1:
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6271:4:
                                        // otherlv_10= ',' (
                                        // (lv_generators_11_0= ruleLCExpr ) )
                                        {
                                            otherlv_10 = (Token) match(input,
                                                    22,
                                                    FOLLOW_22_in_ruleListOrComprehension13923);
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                newLeafNode(
                                                        otherlv_10,
                                                        grammarAccess
                                                                .getListOrComprehensionAccess()
                                                                .getCommaKeyword_1_1_2_1_3_0());

                                            }
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6275:1:
                                            // ( (lv_generators_11_0= ruleLCExpr
                                            // ) )
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6276:1:
                                            // (lv_generators_11_0= ruleLCExpr )
                                            {
                                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6276:1:
                                                // (lv_generators_11_0=
                                                // ruleLCExpr )
                                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6277:3:
                                                // lv_generators_11_0=
                                                // ruleLCExpr
                                                {
                                                    if (state.backtracking == 0) {

                                                        newCompositeNode(grammarAccess
                                                                .getListOrComprehensionAccess()
                                                                .getGeneratorsLCExprParserRuleCall_1_1_2_1_3_1_0());

                                                    }
                                                    pushFollow(FOLLOW_ruleLCExpr_in_ruleListOrComprehension13944);
                                                    lv_generators_11_0 = ruleLCExpr();

                                                    state._fsp--;
                                                    if (state.failed) {
                                                        return current;
                                                    }
                                                    if (state.backtracking == 0) {

                                                        if (current == null) {
                                                            current = createModelElementForParent(grammarAccess
                                                                    .getListOrComprehensionRule());
                                                        }
                                                        add(current,
                                                                "generators",
                                                                lv_generators_11_0,
                                                                "LCExpr");
                                                        afterParserOrEnumRuleCall();

                                                    }

                                                }

                                            }

                                        }
                                            break;

                                        default:
                                            break loop94;
                                        }
                                    } while (true);

                                }

                            }
                                break;

                            }

                        }

                    }
                        break;

                    }

                    otherlv_12 = (Token) match(input, 41,
                            FOLLOW_41_in_ruleListOrComprehension13963);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_12, grammarAccess
                                .getListOrComprehensionAccess()
                                .getRightSquareBracketKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleListOrComprehension"

    // $ANTLR start "entryRuleTuple"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6305:1:
    // entryRuleTuple returns [EObject current=null] : iv_ruleTuple= ruleTuple
    // EOF ;
    public final EObject entryRuleTuple() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTuple = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6306:2:
            // (iv_ruleTuple= ruleTuple EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6307:2:
            // iv_ruleTuple= ruleTuple EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTupleRule());
                }
                pushFollow(FOLLOW_ruleTuple_in_entryRuleTuple13999);
                iv_ruleTuple = ruleTuple();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTuple;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTuple14009);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTuple"

    // $ANTLR start "ruleTuple"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6314:1:
    // ruleTuple returns [EObject current=null] : (otherlv_0= '{' ( () | ( (
    // (lv_elements_2_0= ruleExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0=
    // ruleExpression ) ) )* ) ) otherlv_5= '}' ) ;
    public final EObject ruleTuple() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6317:28:
            // ( (otherlv_0= '{' ( () | ( ( (lv_elements_2_0= ruleExpression ) )
            // (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )* ) )
            // otherlv_5= '}' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6318:1:
            // (otherlv_0= '{' ( () | ( ( (lv_elements_2_0= ruleExpression ) )
            // (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )* ) )
            // otherlv_5= '}' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6318:1:
                // (otherlv_0= '{' ( () | ( ( (lv_elements_2_0= ruleExpression )
                // ) (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )* )
                // ) otherlv_5= '}' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6318:3:
                // otherlv_0= '{' ( () | ( ( (lv_elements_2_0= ruleExpression )
                // ) (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )* )
                // ) otherlv_5= '}'
                {
                    otherlv_0 = (Token) match(input, 35,
                            FOLLOW_35_in_ruleTuple14046);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess.getTupleAccess()
                                .getLeftCurlyBracketKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6322:1:
                    // ( () | ( ( (lv_elements_2_0= ruleExpression ) )
                    // (otherlv_3= ',' ( (lv_elements_4_0= ruleExpression ) ) )*
                    // ) )
                    int alt98 = 2;
                    final int LA98_0 = input.LA(1);

                    if (LA98_0 == 36) {
                        alt98 = 1;
                    } else if (LA98_0 >= RULE_STRING
                            && LA98_0 <= RULE_BASED_INT || LA98_0 >= 19
                            && LA98_0 <= 21 || LA98_0 >= 24 && LA98_0 <= 35
                            || LA98_0 >= 39 && LA98_0 <= 40 || LA98_0 >= 42
                            && LA98_0 <= 45 || LA98_0 >= 47 && LA98_0 <= 48
                            || LA98_0 >= 51 && LA98_0 <= 53 || LA98_0 == 56
                            || LA98_0 == 58 || LA98_0 >= 60 && LA98_0 <= 64
                            || LA98_0 == 66 || LA98_0 == 68 || LA98_0 == 70
                            || LA98_0 == 73 || LA98_0 == 77 || LA98_0 >= 89
                            && LA98_0 <= 90 || LA98_0 == 102) {
                        alt98 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 98, 0, input);

                        throw nvae;
                    }
                    switch (alt98) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6322:2:
                    // ()
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6322:2:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6323:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getTupleAccess()
                                        .getErlTupleAction_1_0(), current);

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6329:6:
                    // ( ( (lv_elements_2_0= ruleExpression ) ) (otherlv_3= ','
                    // ( (lv_elements_4_0= ruleExpression ) ) )* )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6329:6:
                        // ( ( (lv_elements_2_0= ruleExpression ) ) (otherlv_3=
                        // ',' ( (lv_elements_4_0= ruleExpression ) ) )* )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6329:7:
                        // ( (lv_elements_2_0= ruleExpression ) ) (otherlv_3=
                        // ',' ( (lv_elements_4_0= ruleExpression ) ) )*
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6329:7:
                            // ( (lv_elements_2_0= ruleExpression ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6330:1:
                            // (lv_elements_2_0= ruleExpression )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6330:1:
                                // (lv_elements_2_0= ruleExpression )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6331:3:
                                // lv_elements_2_0= ruleExpression
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTupleAccess()
                                                .getElementsExpressionParserRuleCall_1_1_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleExpression_in_ruleTuple14084);
                                    lv_elements_2_0 = ruleExpression();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTupleRule());
                                        }
                                        add(current, "elements",
                                                lv_elements_2_0, "Expression");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6347:2:
                            // (otherlv_3= ',' ( (lv_elements_4_0=
                            // ruleExpression ) ) )*
                            loop97:
                            do {
                                int alt97 = 2;
                                final int LA97_0 = input.LA(1);

                                if (LA97_0 == 22) {
                                    alt97 = 1;
                                }

                                switch (alt97) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6347:4:
                                // otherlv_3= ',' ( (lv_elements_4_0=
                                // ruleExpression ) )
                                {
                                    otherlv_3 = (Token) match(input, 22,
                                            FOLLOW_22_in_ruleTuple14097);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_3, grammarAccess
                                                .getTupleAccess()
                                                .getCommaKeyword_1_1_1_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6351:1:
                                    // ( (lv_elements_4_0= ruleExpression ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6352:1:
                                    // (lv_elements_4_0= ruleExpression )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6352:1:
                                        // (lv_elements_4_0= ruleExpression )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6353:3:
                                        // lv_elements_4_0= ruleExpression
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getTupleAccess()
                                                        .getElementsExpressionParserRuleCall_1_1_1_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleExpression_in_ruleTuple14118);
                                            lv_elements_4_0 = ruleExpression();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getTupleRule());
                                                }
                                                add(current, "elements",
                                                        lv_elements_4_0,
                                                        "Expression");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop97;
                                }
                            } while (true);

                        }

                    }
                        break;

                    }

                    otherlv_5 = (Token) match(input, 36,
                            FOLLOW_36_in_ruleTuple14134);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_5, grammarAccess.getTupleAccess()
                                .getRightCurlyBracketKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTuple"

    // $ANTLR start "entryRuleBinaryOrComprehension"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6381:1:
    // entryRuleBinaryOrComprehension returns [EObject current=null] :
    // iv_ruleBinaryOrComprehension= ruleBinaryOrComprehension EOF ;
    public final EObject entryRuleBinaryOrComprehension()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinaryOrComprehension = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6382:2:
            // (iv_ruleBinaryOrComprehension= ruleBinaryOrComprehension EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6383:2:
            // iv_ruleBinaryOrComprehension= ruleBinaryOrComprehension EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess
                            .getBinaryOrComprehensionRule());
                }
                pushFollow(FOLLOW_ruleBinaryOrComprehension_in_entryRuleBinaryOrComprehension14170);
                iv_ruleBinaryOrComprehension = ruleBinaryOrComprehension();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleBinaryOrComprehension;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleBinaryOrComprehension14180);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleBinaryOrComprehension"

    // $ANTLR start "ruleBinaryOrComprehension"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6390:1:
    // ruleBinaryOrComprehension returns [EObject current=null] : (otherlv_0=
    // '<<' ( () | ( ( (lv_elements_2_0= ruleBinaryItem ) ) (otherlv_3= ',' (
    // (lv_elements_4_0= ruleBinaryItem ) ) )* ( () otherlv_6= '||' (
    // (lv_generators_7_0= ruleLCExpr ) ) (otherlv_8= ',' ( (lv_generators_9_0=
    // ruleLCExpr ) ) )* )? ) ) otherlv_10= '>>' ) ;
    public final EObject ruleBinaryOrComprehension()
            throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_3 = null;
        Token otherlv_6 = null;
        Token otherlv_8 = null;
        Token otherlv_10 = null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        EObject lv_generators_7_0 = null;

        EObject lv_generators_9_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6393:28:
            // ( (otherlv_0= '<<' ( () | ( ( (lv_elements_2_0= ruleBinaryItem )
            // ) (otherlv_3= ',' ( (lv_elements_4_0= ruleBinaryItem ) ) )* ( ()
            // otherlv_6= '||' ( (lv_generators_7_0= ruleLCExpr ) ) (otherlv_8=
            // ',' ( (lv_generators_9_0= ruleLCExpr ) ) )* )? ) ) otherlv_10=
            // '>>' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6394:1:
            // (otherlv_0= '<<' ( () | ( ( (lv_elements_2_0= ruleBinaryItem ) )
            // (otherlv_3= ',' ( (lv_elements_4_0= ruleBinaryItem ) ) )* ( ()
            // otherlv_6= '||' ( (lv_generators_7_0= ruleLCExpr ) ) (otherlv_8=
            // ',' ( (lv_generators_9_0= ruleLCExpr ) ) )* )? ) ) otherlv_10=
            // '>>' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6394:1:
                // (otherlv_0= '<<' ( () | ( ( (lv_elements_2_0= ruleBinaryItem
                // ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleBinaryItem ) ) )*
                // ( () otherlv_6= '||' ( (lv_generators_7_0= ruleLCExpr ) )
                // (otherlv_8= ',' ( (lv_generators_9_0= ruleLCExpr ) ) )* )? )
                // ) otherlv_10= '>>' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6394:3:
                // otherlv_0= '<<' ( () | ( ( (lv_elements_2_0= ruleBinaryItem )
                // ) (otherlv_3= ',' ( (lv_elements_4_0= ruleBinaryItem ) ) )* (
                // () otherlv_6= '||' ( (lv_generators_7_0= ruleLCExpr ) )
                // (otherlv_8= ',' ( (lv_generators_9_0= ruleLCExpr ) ) )* )? )
                // ) otherlv_10= '>>'
                {
                    otherlv_0 = (Token) match(input, 73,
                            FOLLOW_73_in_ruleBinaryOrComprehension14217);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getBinaryOrComprehensionAccess()
                                .getLessThanSignLessThanSignKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6398:1:
                    // ( () | ( ( (lv_elements_2_0= ruleBinaryItem ) )
                    // (otherlv_3= ',' ( (lv_elements_4_0= ruleBinaryItem ) ) )*
                    // ( () otherlv_6= '||' ( (lv_generators_7_0= ruleLCExpr ) )
                    // (otherlv_8= ',' ( (lv_generators_9_0= ruleLCExpr ) ) )*
                    // )? ) )
                    int alt102 = 2;
                    final int LA102_0 = input.LA(1);

                    if (LA102_0 == 74) {
                        alt102 = 1;
                    } else if (LA102_0 >= RULE_STRING
                            && LA102_0 <= RULE_BASED_INT || LA102_0 >= 19
                            && LA102_0 <= 21 || LA102_0 >= 24 && LA102_0 <= 35
                            || LA102_0 >= 39 && LA102_0 <= 40 || LA102_0 >= 42
                            && LA102_0 <= 45 || LA102_0 >= 47 && LA102_0 <= 48
                            || LA102_0 >= 51 && LA102_0 <= 52 || LA102_0 == 56
                            || LA102_0 == 58 || LA102_0 >= 60 && LA102_0 <= 64
                            || LA102_0 == 66 || LA102_0 == 68 || LA102_0 == 70
                            || LA102_0 == 73 || LA102_0 == 77 || LA102_0 >= 89
                            && LA102_0 <= 90 || LA102_0 == 102) {
                        alt102 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 102, 0, input);

                        throw nvae;
                    }
                    switch (alt102) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6398:2:
                    // ()
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6398:2:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6399:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getBinaryOrComprehensionAccess()
                                        .getErlBinaryAction_1_0(), current);

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6405:6:
                    // ( ( (lv_elements_2_0= ruleBinaryItem ) ) (otherlv_3= ','
                    // ( (lv_elements_4_0= ruleBinaryItem ) ) )* ( () otherlv_6=
                    // '||' ( (lv_generators_7_0= ruleLCExpr ) ) (otherlv_8= ','
                    // ( (lv_generators_9_0= ruleLCExpr ) ) )* )? )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6405:6:
                        // ( ( (lv_elements_2_0= ruleBinaryItem ) ) (otherlv_3=
                        // ',' ( (lv_elements_4_0= ruleBinaryItem ) ) )* ( ()
                        // otherlv_6= '||' ( (lv_generators_7_0= ruleLCExpr ) )
                        // (otherlv_8= ',' ( (lv_generators_9_0= ruleLCExpr ) )
                        // )* )? )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6405:7:
                        // ( (lv_elements_2_0= ruleBinaryItem ) ) (otherlv_3=
                        // ',' ( (lv_elements_4_0= ruleBinaryItem ) ) )* ( ()
                        // otherlv_6= '||' ( (lv_generators_7_0= ruleLCExpr ) )
                        // (otherlv_8= ',' ( (lv_generators_9_0= ruleLCExpr ) )
                        // )* )?
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6405:7:
                            // ( (lv_elements_2_0= ruleBinaryItem ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6406:1:
                            // (lv_elements_2_0= ruleBinaryItem )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6406:1:
                                // (lv_elements_2_0= ruleBinaryItem )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6407:3:
                                // lv_elements_2_0= ruleBinaryItem
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getBinaryOrComprehensionAccess()
                                                .getElementsBinaryItemParserRuleCall_1_1_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleBinaryItem_in_ruleBinaryOrComprehension14255);
                                    lv_elements_2_0 = ruleBinaryItem();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getBinaryOrComprehensionRule());
                                        }
                                        add(current, "elements",
                                                lv_elements_2_0, "BinaryItem");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6423:2:
                            // (otherlv_3= ',' ( (lv_elements_4_0=
                            // ruleBinaryItem ) ) )*
                            loop99:
                            do {
                                int alt99 = 2;
                                final int LA99_0 = input.LA(1);

                                if (LA99_0 == 22) {
                                    alt99 = 1;
                                }

                                switch (alt99) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6423:4:
                                // otherlv_3= ',' ( (lv_elements_4_0=
                                // ruleBinaryItem ) )
                                {
                                    otherlv_3 = (Token) match(input, 22,
                                            FOLLOW_22_in_ruleBinaryOrComprehension14268);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(
                                                otherlv_3,
                                                grammarAccess
                                                        .getBinaryOrComprehensionAccess()
                                                        .getCommaKeyword_1_1_1_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6427:1:
                                    // ( (lv_elements_4_0= ruleBinaryItem ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6428:1:
                                    // (lv_elements_4_0= ruleBinaryItem )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6428:1:
                                        // (lv_elements_4_0= ruleBinaryItem )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6429:3:
                                        // lv_elements_4_0= ruleBinaryItem
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getBinaryOrComprehensionAccess()
                                                        .getElementsBinaryItemParserRuleCall_1_1_1_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleBinaryItem_in_ruleBinaryOrComprehension14289);
                                            lv_elements_4_0 = ruleBinaryItem();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getBinaryOrComprehensionRule());
                                                }
                                                add(current, "elements",
                                                        lv_elements_4_0,
                                                        "BinaryItem");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop99;
                                }
                            } while (true);

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6445:4:
                            // ( () otherlv_6= '||' ( (lv_generators_7_0=
                            // ruleLCExpr ) ) (otherlv_8= ',' (
                            // (lv_generators_9_0= ruleLCExpr ) ) )* )?
                            int alt101 = 2;
                            final int LA101_0 = input.LA(1);

                            if (LA101_0 == 72) {
                                alt101 = 1;
                            }
                            switch (alt101) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6445:5:
                            // () otherlv_6= '||' ( (lv_generators_7_0=
                            // ruleLCExpr ) ) (otherlv_8= ',' (
                            // (lv_generators_9_0= ruleLCExpr ) ) )*
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6445:5:
                                // ()
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6446:5:
                                {
                                    if (state.backtracking == 0) {

                                        current = forceCreateModelElementAndSet(
                                                grammarAccess
                                                        .getBinaryOrComprehensionAccess()
                                                        .getBinaryComprehensionRootAction_1_1_2_0(),
                                                current);

                                    }

                                }

                                otherlv_6 = (Token) match(input, 72,
                                        FOLLOW_72_in_ruleBinaryOrComprehension14313);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(
                                            otherlv_6,
                                            grammarAccess
                                                    .getBinaryOrComprehensionAccess()
                                                    .getVerticalLineVerticalLineKeyword_1_1_2_1());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6455:1:
                                // ( (lv_generators_7_0= ruleLCExpr ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6456:1:
                                // (lv_generators_7_0= ruleLCExpr )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6456:1:
                                    // (lv_generators_7_0= ruleLCExpr )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6457:3:
                                    // lv_generators_7_0= ruleLCExpr
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getBinaryOrComprehensionAccess()
                                                    .getGeneratorsLCExprParserRuleCall_1_1_2_2_0());

                                        }
                                        pushFollow(FOLLOW_ruleLCExpr_in_ruleBinaryOrComprehension14334);
                                        lv_generators_7_0 = ruleLCExpr();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getBinaryOrComprehensionRule());
                                            }
                                            add(current, "generators",
                                                    lv_generators_7_0, "LCExpr");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6473:2:
                                // (otherlv_8= ',' ( (lv_generators_9_0=
                                // ruleLCExpr ) ) )*
                                loop100:
                                do {
                                    int alt100 = 2;
                                    final int LA100_0 = input.LA(1);

                                    if (LA100_0 == 22) {
                                        alt100 = 1;
                                    }

                                    switch (alt100) {
                                    case 1:
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6473:4:
                                    // otherlv_8= ',' ( (lv_generators_9_0=
                                    // ruleLCExpr ) )
                                    {
                                        otherlv_8 = (Token) match(input, 22,
                                                FOLLOW_22_in_ruleBinaryOrComprehension14347);
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            newLeafNode(
                                                    otherlv_8,
                                                    grammarAccess
                                                            .getBinaryOrComprehensionAccess()
                                                            .getCommaKeyword_1_1_2_3_0());

                                        }
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6477:1:
                                        // ( (lv_generators_9_0= ruleLCExpr ) )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6478:1:
                                        // (lv_generators_9_0= ruleLCExpr )
                                        {
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6478:1:
                                            // (lv_generators_9_0= ruleLCExpr )
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6479:3:
                                            // lv_generators_9_0= ruleLCExpr
                                            {
                                                if (state.backtracking == 0) {

                                                    newCompositeNode(grammarAccess
                                                            .getBinaryOrComprehensionAccess()
                                                            .getGeneratorsLCExprParserRuleCall_1_1_2_3_1_0());

                                                }
                                                pushFollow(FOLLOW_ruleLCExpr_in_ruleBinaryOrComprehension14368);
                                                lv_generators_9_0 = ruleLCExpr();

                                                state._fsp--;
                                                if (state.failed) {
                                                    return current;
                                                }
                                                if (state.backtracking == 0) {

                                                    if (current == null) {
                                                        current = createModelElementForParent(grammarAccess
                                                                .getBinaryOrComprehensionRule());
                                                    }
                                                    add(current, "generators",
                                                            lv_generators_9_0,
                                                            "LCExpr");
                                                    afterParserOrEnumRuleCall();

                                                }

                                            }

                                        }

                                    }
                                        break;

                                    default:
                                        break loop100;
                                    }
                                } while (true);

                            }
                                break;

                            }

                        }

                    }
                        break;

                    }

                    otherlv_10 = (Token) match(input, 74,
                            FOLLOW_74_in_ruleBinaryOrComprehension14386);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_10, grammarAccess
                                .getBinaryOrComprehensionAccess()
                                .getGreaterThanSignGreaterThanSignKeyword_2());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleBinaryOrComprehension"

    // $ANTLR start "entryRuleBinaryItem"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6507:1:
    // entryRuleBinaryItem returns [EObject current=null] : iv_ruleBinaryItem=
    // ruleBinaryItem EOF ;
    public final EObject entryRuleBinaryItem() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinaryItem = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6508:2:
            // (iv_ruleBinaryItem= ruleBinaryItem EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6509:2:
            // iv_ruleBinaryItem= ruleBinaryItem EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getBinaryItemRule());
                }
                pushFollow(FOLLOW_ruleBinaryItem_in_entryRuleBinaryItem14422);
                iv_ruleBinaryItem = ruleBinaryItem();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleBinaryItem;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleBinaryItem14432);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleBinaryItem"

    // $ANTLR start "ruleBinaryItem"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6516:1:
    // ruleBinaryItem returns [EObject current=null] : ( ( (lv_expr_0_0=
    // ruleUnaryExprMax ) ) ( ( ( ':' )=>otherlv_1= ':' ) ( (lv_size_2_0=
    // ruleExprMax ) ) )? ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_types_4_0=
    // ruleBitType ) ) (otherlv_5= '-' ( (lv_type_6_0= ruleBitType ) ) )* )? ) ;
    public final EObject ruleBinaryItem() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        EObject lv_expr_0_0 = null;

        EObject lv_size_2_0 = null;

        EObject lv_types_4_0 = null;

        EObject lv_type_6_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6519:28:
            // ( ( ( (lv_expr_0_0= ruleUnaryExprMax ) ) ( ( ( ':' )=>otherlv_1=
            // ':' ) ( (lv_size_2_0= ruleExprMax ) ) )? ( ( ( '/' )=>otherlv_3=
            // '/' ) ( (lv_types_4_0= ruleBitType ) ) (otherlv_5= '-' (
            // (lv_type_6_0= ruleBitType ) ) )* )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6520:1:
            // ( ( (lv_expr_0_0= ruleUnaryExprMax ) ) ( ( ( ':' )=>otherlv_1=
            // ':' ) ( (lv_size_2_0= ruleExprMax ) ) )? ( ( ( '/' )=>otherlv_3=
            // '/' ) ( (lv_types_4_0= ruleBitType ) ) (otherlv_5= '-' (
            // (lv_type_6_0= ruleBitType ) ) )* )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6520:1:
                // ( ( (lv_expr_0_0= ruleUnaryExprMax ) ) ( ( ( ':'
                // )=>otherlv_1= ':' ) ( (lv_size_2_0= ruleExprMax ) ) )? ( ( (
                // '/' )=>otherlv_3= '/' ) ( (lv_types_4_0= ruleBitType ) )
                // (otherlv_5= '-' ( (lv_type_6_0= ruleBitType ) ) )* )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6520:2:
                // ( (lv_expr_0_0= ruleUnaryExprMax ) ) ( ( ( ':' )=>otherlv_1=
                // ':' ) ( (lv_size_2_0= ruleExprMax ) ) )? ( ( ( '/'
                // )=>otherlv_3= '/' ) ( (lv_types_4_0= ruleBitType ) )
                // (otherlv_5= '-' ( (lv_type_6_0= ruleBitType ) ) )* )?
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6520:2:
                    // ( (lv_expr_0_0= ruleUnaryExprMax ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6521:1:
                    // (lv_expr_0_0= ruleUnaryExprMax )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6521:1:
                        // (lv_expr_0_0= ruleUnaryExprMax )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6522:3:
                        // lv_expr_0_0= ruleUnaryExprMax
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getBinaryItemAccess()
                                        .getExprUnaryExprMaxParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleUnaryExprMax_in_ruleBinaryItem14478);
                            lv_expr_0_0 = ruleUnaryExprMax();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getBinaryItemRule());
                                }
                                set(current, "expr", lv_expr_0_0,
                                        "UnaryExprMax");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6538:2:
                    // ( ( ( ':' )=>otherlv_1= ':' ) ( (lv_size_2_0= ruleExprMax
                    // ) ) )?
                    int alt103 = 2;
                    final int LA103_0 = input.LA(1);

                    if (LA103_0 == 57 && synpred36_InternalErlang()) {
                        alt103 = 1;
                    }
                    switch (alt103) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6538:3:
                    // ( ( ':' )=>otherlv_1= ':' ) ( (lv_size_2_0= ruleExprMax )
                    // )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6538:3:
                        // ( ( ':' )=>otherlv_1= ':' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6538:4:
                        // ( ':' )=>otherlv_1= ':'
                        {
                            otherlv_1 = (Token) match(input, 57,
                                    FOLLOW_57_in_ruleBinaryItem14499);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getBinaryItemAccess()
                                        .getColonKeyword_1_0());

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6543:2:
                        // ( (lv_size_2_0= ruleExprMax ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6544:1:
                        // (lv_size_2_0= ruleExprMax )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6544:1:
                            // (lv_size_2_0= ruleExprMax )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6545:3:
                            // lv_size_2_0= ruleExprMax
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getBinaryItemAccess()
                                            .getSizeExprMaxParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleExprMax_in_ruleBinaryItem14521);
                                lv_size_2_0 = ruleExprMax();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getBinaryItemRule());
                                    }
                                    set(current, "size", lv_size_2_0, "ExprMax");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6561:4:
                    // ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_types_4_0=
                    // ruleBitType ) ) (otherlv_5= '-' ( (lv_type_6_0=
                    // ruleBitType ) ) )* )?
                    int alt105 = 2;
                    final int LA105_0 = input.LA(1);

                    if (LA105_0 == 69 && synpred37_InternalErlang()) {
                        alt105 = 1;
                    }
                    switch (alt105) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6561:5:
                    // ( ( '/' )=>otherlv_3= '/' ) ( (lv_types_4_0= ruleBitType
                    // ) ) (otherlv_5= '-' ( (lv_type_6_0= ruleBitType ) ) )*
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6561:5:
                        // ( ( '/' )=>otherlv_3= '/' )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6561:6:
                        // ( '/' )=>otherlv_3= '/'
                        {
                            otherlv_3 = (Token) match(input, 69,
                                    FOLLOW_69_in_ruleBinaryItem14544);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_3, grammarAccess
                                        .getBinaryItemAccess()
                                        .getSolidusKeyword_2_0());

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6566:2:
                        // ( (lv_types_4_0= ruleBitType ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6567:1:
                        // (lv_types_4_0= ruleBitType )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6567:1:
                            // (lv_types_4_0= ruleBitType )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6568:3:
                            // lv_types_4_0= ruleBitType
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getBinaryItemAccess()
                                            .getTypesBitTypeParserRuleCall_2_1_0());

                                }
                                pushFollow(FOLLOW_ruleBitType_in_ruleBinaryItem14566);
                                lv_types_4_0 = ruleBitType();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getBinaryItemRule());
                                    }
                                    add(current, "types", lv_types_4_0,
                                            "BitType");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6584:2:
                        // (otherlv_5= '-' ( (lv_type_6_0= ruleBitType ) ) )*
                        loop104:
                        do {
                            int alt104 = 2;
                            final int LA104_0 = input.LA(1);

                            if (LA104_0 == 19) {
                                alt104 = 1;
                            }

                            switch (alt104) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6584:4:
                            // otherlv_5= '-' ( (lv_type_6_0= ruleBitType ) )
                            {
                                otherlv_5 = (Token) match(input, 19,
                                        FOLLOW_19_in_ruleBinaryItem14579);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_5, grammarAccess
                                            .getBinaryItemAccess()
                                            .getHyphenMinusKeyword_2_2_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6588:1:
                                // ( (lv_type_6_0= ruleBitType ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6589:1:
                                // (lv_type_6_0= ruleBitType )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6589:1:
                                    // (lv_type_6_0= ruleBitType )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6590:3:
                                    // lv_type_6_0= ruleBitType
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getBinaryItemAccess()
                                                    .getTypeBitTypeParserRuleCall_2_2_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleBitType_in_ruleBinaryItem14600);
                                        lv_type_6_0 = ruleBitType();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getBinaryItemRule());
                                            }
                                            add(current, "type", lv_type_6_0,
                                                    "BitType");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                break loop104;
                            }
                        } while (true);

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleBinaryItem"

    // $ANTLR start "entryRuleBitType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6614:1:
    // entryRuleBitType returns [EObject current=null] : iv_ruleBitType=
    // ruleBitType EOF ;
    public final EObject entryRuleBitType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitType = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6615:2:
            // (iv_ruleBitType= ruleBitType EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6616:2:
            // iv_ruleBitType= ruleBitType EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getBitTypeRule());
                }
                pushFollow(FOLLOW_ruleBitType_in_entryRuleBitType14640);
                iv_ruleBitType = ruleBitType();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleBitType;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleBitType14650);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleBitType"

    // $ANTLR start "ruleBitType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6623:1:
    // ruleBitType returns [EObject current=null] : ( ( ( ruleNAMEMACRO ) )
    // (otherlv_1= ':' ( (lv_size_2_0= ruleIntVarMacro ) ) )? ) ;
    public final EObject ruleBitType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_size_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6626:28:
            // ( ( ( ( ruleNAMEMACRO ) ) (otherlv_1= ':' ( (lv_size_2_0=
            // ruleIntVarMacro ) ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6627:1:
            // ( ( ( ruleNAMEMACRO ) ) (otherlv_1= ':' ( (lv_size_2_0=
            // ruleIntVarMacro ) ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6627:1:
                // ( ( ( ruleNAMEMACRO ) ) (otherlv_1= ':' ( (lv_size_2_0=
                // ruleIntVarMacro ) ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6627:2:
                // ( ( ruleNAMEMACRO ) ) (otherlv_1= ':' ( (lv_size_2_0=
                // ruleIntVarMacro ) ) )?
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6627:2:
                    // ( ( ruleNAMEMACRO ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6628:1:
                    // ( ruleNAMEMACRO )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6628:1:
                        // ( ruleNAMEMACRO )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6629:3:
                        // ruleNAMEMACRO
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getBitTypeRule());
                                }

                            }
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getBitTypeAccess()
                                        .getTypeNameAtomRefTargetCrossReference_0_0());

                            }
                            pushFollow(FOLLOW_ruleNAMEMACRO_in_ruleBitType14698);
                            ruleNAMEMACRO();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6642:2:
                    // (otherlv_1= ':' ( (lv_size_2_0= ruleIntVarMacro ) ) )?
                    int alt106 = 2;
                    final int LA106_0 = input.LA(1);

                    if (LA106_0 == 57) {
                        alt106 = 1;
                    }
                    switch (alt106) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6642:4:
                    // otherlv_1= ':' ( (lv_size_2_0= ruleIntVarMacro ) )
                    {
                        otherlv_1 = (Token) match(input, 57,
                                FOLLOW_57_in_ruleBitType14711);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getBitTypeAccess().getColonKeyword_1_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6646:1:
                        // ( (lv_size_2_0= ruleIntVarMacro ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6647:1:
                        // (lv_size_2_0= ruleIntVarMacro )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6647:1:
                            // (lv_size_2_0= ruleIntVarMacro )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6648:3:
                            // lv_size_2_0= ruleIntVarMacro
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getBitTypeAccess()
                                            .getSizeIntVarMacroParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleIntVarMacro_in_ruleBitType14732);
                                lv_size_2_0 = ruleIntVarMacro();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getBitTypeRule());
                                    }
                                    set(current, "size", lv_size_2_0,
                                            "IntVarMacro");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleBitType"

    // $ANTLR start "entryRuleUnaryExprMax"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6672:1:
    // entryRuleUnaryExprMax returns [EObject current=null] :
    // iv_ruleUnaryExprMax= ruleUnaryExprMax EOF ;
    public final EObject entryRuleUnaryExprMax() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExprMax = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6673:2:
            // (iv_ruleUnaryExprMax= ruleUnaryExprMax EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6674:2:
            // iv_ruleUnaryExprMax= ruleUnaryExprMax EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getUnaryExprMaxRule());
                }
                pushFollow(FOLLOW_ruleUnaryExprMax_in_entryRuleUnaryExprMax14770);
                iv_ruleUnaryExprMax = ruleUnaryExprMax();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleUnaryExprMax;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleUnaryExprMax14780);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleUnaryExprMax"

    // $ANTLR start "ruleUnaryExprMax"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6681:1:
    // ruleUnaryExprMax returns [EObject current=null] : ( ( () ( (lv_op_1_0=
    // rulePREFIXOP ) ) ( (lv_operand_2_0= ruleExprMax ) ) ) | this_ExprMax_3=
    // ruleExprMax ) ;
    public final EObject ruleUnaryExprMax() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_op_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_ExprMax_3 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6684:28:
            // ( ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
            // ruleExprMax ) ) ) | this_ExprMax_3= ruleExprMax ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6685:1:
            // ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
            // ruleExprMax ) ) ) | this_ExprMax_3= ruleExprMax )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6685:1:
                // ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                // ruleExprMax ) ) ) | this_ExprMax_3= ruleExprMax )
                int alt107 = 2;
                final int LA107_0 = input.LA(1);

                if (LA107_0 == 19 || LA107_0 == 77 || LA107_0 >= 89
                        && LA107_0 <= 90) {
                    alt107 = 1;
                } else if (LA107_0 >= RULE_STRING && LA107_0 <= RULE_BASED_INT
                        || LA107_0 >= 20 && LA107_0 <= 21 || LA107_0 >= 24
                        && LA107_0 <= 35 || LA107_0 >= 39 && LA107_0 <= 40
                        || LA107_0 >= 42 && LA107_0 <= 45 || LA107_0 >= 47
                        && LA107_0 <= 48 || LA107_0 >= 51 && LA107_0 <= 52
                        || LA107_0 == 56 || LA107_0 == 58 || LA107_0 >= 60
                        && LA107_0 <= 64 || LA107_0 == 66 || LA107_0 == 68
                        || LA107_0 == 70 || LA107_0 == 73 || LA107_0 == 102) {
                    alt107 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 107, 0, input);

                    throw nvae;
                }
                switch (alt107) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6685:2:
                // ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                // ruleExprMax ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6685:2:
                    // ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                    // ruleExprMax ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6685:3:
                    // () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                    // ruleExprMax ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6685:3:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6686:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getUnaryExprMaxAccess()
                                        .getUnaryExprAction_0_0(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6691:2:
                        // ( (lv_op_1_0= rulePREFIXOP ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6692:1:
                        // (lv_op_1_0= rulePREFIXOP )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6692:1:
                            // (lv_op_1_0= rulePREFIXOP )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6693:3:
                            // lv_op_1_0= rulePREFIXOP
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getUnaryExprMaxAccess()
                                            .getOpPREFIXOPParserRuleCall_0_1_0());

                                }
                                pushFollow(FOLLOW_rulePREFIXOP_in_ruleUnaryExprMax14836);
                                lv_op_1_0 = rulePREFIXOP();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getUnaryExprMaxRule());
                                    }
                                    set(current, "op", lv_op_1_0, "PREFIXOP");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6709:2:
                        // ( (lv_operand_2_0= ruleExprMax ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6710:1:
                        // (lv_operand_2_0= ruleExprMax )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6710:1:
                            // (lv_operand_2_0= ruleExprMax )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6711:3:
                            // lv_operand_2_0= ruleExprMax
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getUnaryExprMaxAccess()
                                            .getOperandExprMaxParserRuleCall_0_2_0());

                                }
                                pushFollow(FOLLOW_ruleExprMax_in_ruleUnaryExprMax14857);
                                lv_operand_2_0 = ruleExprMax();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getUnaryExprMaxRule());
                                    }
                                    set(current, "operand", lv_operand_2_0,
                                            "ExprMax");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6729:5:
                // this_ExprMax_3= ruleExprMax
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getUnaryExprMaxAccess()
                                .getExprMaxParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleExprMax_in_ruleUnaryExprMax14886);
                    this_ExprMax_3 = ruleExprMax();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_ExprMax_3;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleUnaryExprMax"

    // $ANTLR start "entryRuleLCExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6745:1:
    // entryRuleLCExpr returns [EObject current=null] : iv_ruleLCExpr=
    // ruleLCExpr EOF ;
    public final EObject entryRuleLCExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLCExpr = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6746:2:
            // (iv_ruleLCExpr= ruleLCExpr EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6747:2:
            // iv_ruleLCExpr= ruleLCExpr EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getLCExprRule());
                }
                pushFollow(FOLLOW_ruleLCExpr_in_entryRuleLCExpr14921);
                iv_ruleLCExpr = ruleLCExpr();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleLCExpr;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleLCExpr14931);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleLCExpr"

    // $ANTLR start "ruleLCExpr"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6754:1:
    // ruleLCExpr returns [EObject current=null] : ( ( (lv_o1_0_0=
    // ruleExpression ) ) ( ( ( (lv_op_1_1= '<-' | lv_op_1_2= '<=' ) ) ) (
    // (lv_o2_2_0= ruleExpression ) ) )? ) ;
    public final EObject ruleLCExpr() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_1 = null;
        Token lv_op_1_2 = null;
        EObject lv_o1_0_0 = null;

        EObject lv_o2_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6757:28:
            // ( ( ( (lv_o1_0_0= ruleExpression ) ) ( ( ( (lv_op_1_1= '<-' |
            // lv_op_1_2= '<=' ) ) ) ( (lv_o2_2_0= ruleExpression ) ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6758:1:
            // ( ( (lv_o1_0_0= ruleExpression ) ) ( ( ( (lv_op_1_1= '<-' |
            // lv_op_1_2= '<=' ) ) ) ( (lv_o2_2_0= ruleExpression ) ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6758:1:
                // ( ( (lv_o1_0_0= ruleExpression ) ) ( ( ( (lv_op_1_1= '<-' |
                // lv_op_1_2= '<=' ) ) ) ( (lv_o2_2_0= ruleExpression ) ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6758:2:
                // ( (lv_o1_0_0= ruleExpression ) ) ( ( ( (lv_op_1_1= '<-' |
                // lv_op_1_2= '<=' ) ) ) ( (lv_o2_2_0= ruleExpression ) ) )?
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6758:2:
                    // ( (lv_o1_0_0= ruleExpression ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6759:1:
                    // (lv_o1_0_0= ruleExpression )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6759:1:
                        // (lv_o1_0_0= ruleExpression )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6760:3:
                        // lv_o1_0_0= ruleExpression
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getLCExprAccess()
                                        .getO1ExpressionParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleExpression_in_ruleLCExpr14977);
                            lv_o1_0_0 = ruleExpression();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getLCExprRule());
                                }
                                set(current, "o1", lv_o1_0_0, "Expression");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6776:2:
                    // ( ( ( (lv_op_1_1= '<-' | lv_op_1_2= '<=' ) ) ) (
                    // (lv_o2_2_0= ruleExpression ) ) )?
                    int alt109 = 2;
                    final int LA109_0 = input.LA(1);

                    if (LA109_0 >= 75 && LA109_0 <= 76) {
                        alt109 = 1;
                    }
                    switch (alt109) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6776:3:
                    // ( ( (lv_op_1_1= '<-' | lv_op_1_2= '<=' ) ) ) (
                    // (lv_o2_2_0= ruleExpression ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6776:3:
                        // ( ( (lv_op_1_1= '<-' | lv_op_1_2= '<=' ) ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6777:1:
                        // ( (lv_op_1_1= '<-' | lv_op_1_2= '<=' ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6777:1:
                            // ( (lv_op_1_1= '<-' | lv_op_1_2= '<=' ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6778:1:
                            // (lv_op_1_1= '<-' | lv_op_1_2= '<=' )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6778:1:
                                // (lv_op_1_1= '<-' | lv_op_1_2= '<=' )
                                int alt108 = 2;
                                final int LA108_0 = input.LA(1);

                                if (LA108_0 == 75) {
                                    alt108 = 1;
                                } else if (LA108_0 == 76) {
                                    alt108 = 2;
                                } else {
                                    if (state.backtracking > 0) {
                                        state.failed = true;
                                        return current;
                                    }
                                    final NoViableAltException nvae = new NoViableAltException(
                                            "", 108, 0, input);

                                    throw nvae;
                                }
                                switch (alt108) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6779:3:
                                // lv_op_1_1= '<-'
                                {
                                    lv_op_1_1 = (Token) match(input, 75,
                                            FOLLOW_75_in_ruleLCExpr14998);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(
                                                lv_op_1_1,
                                                grammarAccess
                                                        .getLCExprAccess()
                                                        .getOpLessThanSignHyphenMinusKeyword_1_0_0_0());

                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElement(grammarAccess
                                                    .getLCExprRule());
                                        }
                                        setWithLastConsumed(current, "op",
                                                lv_op_1_1, null);

                                    }

                                }
                                    break;
                                case 2:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6791:8:
                                // lv_op_1_2= '<='
                                {
                                    lv_op_1_2 = (Token) match(input, 76,
                                            FOLLOW_76_in_ruleLCExpr15027);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(
                                                lv_op_1_2,
                                                grammarAccess
                                                        .getLCExprAccess()
                                                        .getOpLessThanSignEqualsSignKeyword_1_0_0_1());

                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElement(grammarAccess
                                                    .getLCExprRule());
                                        }
                                        setWithLastConsumed(current, "op",
                                                lv_op_1_2, null);

                                    }

                                }
                                    break;

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6806:2:
                        // ( (lv_o2_2_0= ruleExpression ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6807:1:
                        // (lv_o2_2_0= ruleExpression )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6807:1:
                            // (lv_o2_2_0= ruleExpression )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6808:3:
                            // lv_o2_2_0= ruleExpression
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getLCExprAccess()
                                            .getO2ExpressionParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleExpression_in_ruleLCExpr15064);
                                lv_o2_2_0 = ruleExpression();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getLCExprRule());
                                    }
                                    set(current, "o2", lv_o2_2_0, "Expression");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleLCExpr"

    // $ANTLR start "entryRuleADDOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6832:1:
    // entryRuleADDOP returns [String current=null] : iv_ruleADDOP= ruleADDOP
    // EOF ;
    public final String entryRuleADDOP() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleADDOP = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6833:2:
            // (iv_ruleADDOP= ruleADDOP EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6834:2:
            // iv_ruleADDOP= ruleADDOP EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getADDOPRule());
                }
                pushFollow(FOLLOW_ruleADDOP_in_entryRuleADDOP15103);
                iv_ruleADDOP = ruleADDOP();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleADDOP.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleADDOP15114);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleADDOP"

    // $ANTLR start "ruleADDOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6841:1:
    // ruleADDOP returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= 'bor' | kw= 'bxor' |
    // kw= 'bsl' | kw= 'bsr' | kw= 'or' | kw= 'xor' ) ;
    public final AntlrDatatypeRuleToken ruleADDOP() throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6844:28:
            // ( (kw= '+' | kw= '-' | kw= 'bor' | kw= 'bxor' | kw= 'bsl' | kw=
            // 'bsr' | kw= 'or' | kw= 'xor' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6845:1:
            // (kw= '+' | kw= '-' | kw= 'bor' | kw= 'bxor' | kw= 'bsl' | kw=
            // 'bsr' | kw= 'or' | kw= 'xor' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6845:1:
                // (kw= '+' | kw= '-' | kw= 'bor' | kw= 'bxor' | kw= 'bsl' | kw=
                // 'bsr' | kw= 'or' | kw= 'xor' )
                int alt110 = 8;
                switch (input.LA(1)) {
                case 77: {
                    alt110 = 1;
                }
                    break;
                case 19: {
                    alt110 = 2;
                }
                    break;
                case 78: {
                    alt110 = 3;
                }
                    break;
                case 79: {
                    alt110 = 4;
                }
                    break;
                case 80: {
                    alt110 = 5;
                }
                    break;
                case 81: {
                    alt110 = 6;
                }
                    break;
                case 82: {
                    alt110 = 7;
                }
                    break;
                case 83: {
                    alt110 = 8;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 110, 0, input);

                    throw nvae;
                }

                switch (alt110) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6846:2:
                // kw= '+'
                {
                    kw = (Token) match(input, 77, FOLLOW_77_in_ruleADDOP15152);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getADDOPAccess()
                                .getPlusSignKeyword_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6853:2:
                // kw= '-'
                {
                    kw = (Token) match(input, 19, FOLLOW_19_in_ruleADDOP15171);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getADDOPAccess()
                                .getHyphenMinusKeyword_1());

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6860:2:
                // kw= 'bor'
                {
                    kw = (Token) match(input, 78, FOLLOW_78_in_ruleADDOP15190);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getADDOPAccess()
                                .getBorKeyword_2());

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6867:2:
                // kw= 'bxor'
                {
                    kw = (Token) match(input, 79, FOLLOW_79_in_ruleADDOP15209);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getADDOPAccess()
                                .getBxorKeyword_3());

                    }

                }
                break;
                case 5:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6874:2:
                // kw= 'bsl'
                {
                    kw = (Token) match(input, 80, FOLLOW_80_in_ruleADDOP15228);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getADDOPAccess()
                                .getBslKeyword_4());

                    }

                }
                break;
                case 6:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6881:2:
                // kw= 'bsr'
                {
                    kw = (Token) match(input, 81, FOLLOW_81_in_ruleADDOP15247);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getADDOPAccess()
                                .getBsrKeyword_5());

                    }

                }
                break;
                case 7:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6888:2:
                // kw= 'or'
                {
                    kw = (Token) match(input, 82, FOLLOW_82_in_ruleADDOP15266);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getADDOPAccess()
                                .getOrKeyword_6());

                    }

                }
                break;
                case 8:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6895:2:
                // kw= 'xor'
                {
                    kw = (Token) match(input, 83, FOLLOW_83_in_ruleADDOP15285);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getADDOPAccess()
                                .getXorKeyword_7());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleADDOP"

    // $ANTLR start "entryRuleMULTOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6908:1:
    // entryRuleMULTOP returns [String current=null] : iv_ruleMULTOP= ruleMULTOP
    // EOF ;
    public final String entryRuleMULTOP() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMULTOP = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6909:2:
            // (iv_ruleMULTOP= ruleMULTOP EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6910:2:
            // iv_ruleMULTOP= ruleMULTOP EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getMULTOPRule());
                }
                pushFollow(FOLLOW_ruleMULTOP_in_entryRuleMULTOP15326);
                iv_ruleMULTOP = ruleMULTOP();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleMULTOP.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleMULTOP15337);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleMULTOP"

    // $ANTLR start "ruleMULTOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6917:1:
    // ruleMULTOP returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= 'div' | kw= 'rem' |
    // kw= 'band' | kw= 'and' ) ;
    public final AntlrDatatypeRuleToken ruleMULTOP()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6920:28:
            // ( (kw= '*' | kw= '/' | kw= 'div' | kw= 'rem' | kw= 'band' | kw=
            // 'and' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6921:1:
            // (kw= '*' | kw= '/' | kw= 'div' | kw= 'rem' | kw= 'band' | kw=
            // 'and' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6921:1:
                // (kw= '*' | kw= '/' | kw= 'div' | kw= 'rem' | kw= 'band' | kw=
                // 'and' )
                int alt111 = 6;
                switch (input.LA(1)) {
                case 84: {
                    alt111 = 1;
                }
                    break;
                case 69: {
                    alt111 = 2;
                }
                    break;
                case 85: {
                    alt111 = 3;
                }
                    break;
                case 86: {
                    alt111 = 4;
                }
                    break;
                case 87: {
                    alt111 = 5;
                }
                    break;
                case 88: {
                    alt111 = 6;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 111, 0, input);

                    throw nvae;
                }

                switch (alt111) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6922:2:
                // kw= '*'
                {
                    kw = (Token) match(input, 84, FOLLOW_84_in_ruleMULTOP15375);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getMULTOPAccess()
                                .getAsteriskKeyword_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6929:2:
                // kw= '/'
                {
                    kw = (Token) match(input, 69, FOLLOW_69_in_ruleMULTOP15394);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getMULTOPAccess()
                                .getSolidusKeyword_1());

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6936:2:
                // kw= 'div'
                {
                    kw = (Token) match(input, 85, FOLLOW_85_in_ruleMULTOP15413);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getMULTOPAccess()
                                .getDivKeyword_2());

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6943:2:
                // kw= 'rem'
                {
                    kw = (Token) match(input, 86, FOLLOW_86_in_ruleMULTOP15432);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getMULTOPAccess()
                                .getRemKeyword_3());

                    }

                }
                break;
                case 5:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6950:2:
                // kw= 'band'
                {
                    kw = (Token) match(input, 87, FOLLOW_87_in_ruleMULTOP15451);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getMULTOPAccess()
                                .getBandKeyword_4());

                    }

                }
                break;
                case 6:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6957:2:
                // kw= 'and'
                {
                    kw = (Token) match(input, 88, FOLLOW_88_in_ruleMULTOP15470);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getMULTOPAccess()
                                .getAndKeyword_5());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleMULTOP"

    // $ANTLR start "entryRulePREFIXOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6970:1:
    // entryRulePREFIXOP returns [String current=null] : iv_rulePREFIXOP=
    // rulePREFIXOP EOF ;
    public final String entryRulePREFIXOP() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePREFIXOP = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6971:2:
            // (iv_rulePREFIXOP= rulePREFIXOP EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6972:2:
            // iv_rulePREFIXOP= rulePREFIXOP EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getPREFIXOPRule());
                }
                pushFollow(FOLLOW_rulePREFIXOP_in_entryRulePREFIXOP15511);
                iv_rulePREFIXOP = rulePREFIXOP();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_rulePREFIXOP.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRulePREFIXOP15522);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRulePREFIXOP"

    // $ANTLR start "rulePREFIXOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6979:1:
    // rulePREFIXOP returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= 'bnot' | kw= 'not' )
    // ;
    public final AntlrDatatypeRuleToken rulePREFIXOP()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6982:28:
            // ( (kw= '+' | kw= '-' | kw= 'bnot' | kw= 'not' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6983:1:
            // (kw= '+' | kw= '-' | kw= 'bnot' | kw= 'not' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6983:1:
                // (kw= '+' | kw= '-' | kw= 'bnot' | kw= 'not' )
                int alt112 = 4;
                switch (input.LA(1)) {
                case 77: {
                    alt112 = 1;
                }
                    break;
                case 19: {
                    alt112 = 2;
                }
                    break;
                case 89: {
                    alt112 = 3;
                }
                    break;
                case 90: {
                    alt112 = 4;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 112, 0, input);

                    throw nvae;
                }

                switch (alt112) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6984:2:
                // kw= '+'
                {
                    kw = (Token) match(input, 77,
                            FOLLOW_77_in_rulePREFIXOP15560);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getPREFIXOPAccess()
                                .getPlusSignKeyword_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6991:2:
                // kw= '-'
                {
                    kw = (Token) match(input, 19,
                            FOLLOW_19_in_rulePREFIXOP15579);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getPREFIXOPAccess()
                                .getHyphenMinusKeyword_1());

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6998:2:
                // kw= 'bnot'
                {
                    kw = (Token) match(input, 89,
                            FOLLOW_89_in_rulePREFIXOP15598);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getPREFIXOPAccess()
                                .getBnotKeyword_2());

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7005:2:
                // kw= 'not'
                {
                    kw = (Token) match(input, 90,
                            FOLLOW_90_in_rulePREFIXOP15617);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getPREFIXOPAccess()
                                .getNotKeyword_3());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "rulePREFIXOP"

    // $ANTLR start "entryRuleLISTOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7018:1:
    // entryRuleLISTOP returns [String current=null] : iv_ruleLISTOP= ruleLISTOP
    // EOF ;
    public final String entryRuleLISTOP() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLISTOP = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7019:2:
            // (iv_ruleLISTOP= ruleLISTOP EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7020:2:
            // iv_ruleLISTOP= ruleLISTOP EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getLISTOPRule());
                }
                pushFollow(FOLLOW_ruleLISTOP_in_entryRuleLISTOP15658);
                iv_ruleLISTOP = ruleLISTOP();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleLISTOP.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleLISTOP15669);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleLISTOP"

    // $ANTLR start "ruleLISTOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7027:1:
    // ruleLISTOP returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleLISTOP()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7030:28:
            // ( (kw= '++' | kw= '--' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7031:1:
            // (kw= '++' | kw= '--' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7031:1:
                // (kw= '++' | kw= '--' )
                int alt113 = 2;
                final int LA113_0 = input.LA(1);

                if (LA113_0 == 91) {
                    alt113 = 1;
                } else if (LA113_0 == 92) {
                    alt113 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 113, 0, input);

                    throw nvae;
                }
                switch (alt113) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7032:2:
                // kw= '++'
                {
                    kw = (Token) match(input, 91, FOLLOW_91_in_ruleLISTOP15707);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getLISTOPAccess()
                                .getPlusSignPlusSignKeyword_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7039:2:
                // kw= '--'
                {
                    kw = (Token) match(input, 92, FOLLOW_92_in_ruleLISTOP15726);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getLISTOPAccess()
                                .getHyphenMinusHyphenMinusKeyword_1());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleLISTOP"

    // $ANTLR start "entryRuleCOMPOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7052:1:
    // entryRuleCOMPOP returns [String current=null] : iv_ruleCOMPOP= ruleCOMPOP
    // EOF ;
    public final String entryRuleCOMPOP() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCOMPOP = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7053:2:
            // (iv_ruleCOMPOP= ruleCOMPOP EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7054:2:
            // iv_ruleCOMPOP= ruleCOMPOP EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getCOMPOPRule());
                }
                pushFollow(FOLLOW_ruleCOMPOP_in_entryRuleCOMPOP15767);
                iv_ruleCOMPOP = ruleCOMPOP();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleCOMPOP.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleCOMPOP15778);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleCOMPOP"

    // $ANTLR start "ruleCOMPOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7061:1:
    // ruleCOMPOP returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (kw= '==' | kw= '/=' | kw= '=<' | kw= '<' |
    // kw= '>=' | kw= '>' | kw= '=:=' | kw= '=/=' ) ;
    public final AntlrDatatypeRuleToken ruleCOMPOP()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7064:28:
            // ( (kw= '==' | kw= '/=' | kw= '=<' | kw= '<' | kw= '>=' | kw= '>'
            // | kw= '=:=' | kw= '=/=' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7065:1:
            // (kw= '==' | kw= '/=' | kw= '=<' | kw= '<' | kw= '>=' | kw= '>' |
            // kw= '=:=' | kw= '=/=' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7065:1:
                // (kw= '==' | kw= '/=' | kw= '=<' | kw= '<' | kw= '>=' | kw=
                // '>' | kw= '=:=' | kw= '=/=' )
                int alt114 = 8;
                switch (input.LA(1)) {
                case 93: {
                    alt114 = 1;
                }
                    break;
                case 94: {
                    alt114 = 2;
                }
                    break;
                case 95: {
                    alt114 = 3;
                }
                    break;
                case 96: {
                    alt114 = 4;
                }
                    break;
                case 97: {
                    alt114 = 5;
                }
                    break;
                case 98: {
                    alt114 = 6;
                }
                    break;
                case 99: {
                    alt114 = 7;
                }
                    break;
                case 100: {
                    alt114 = 8;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 114, 0, input);

                    throw nvae;
                }

                switch (alt114) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7066:2:
                // kw= '=='
                {
                    kw = (Token) match(input, 93, FOLLOW_93_in_ruleCOMPOP15816);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getCOMPOPAccess()
                                .getEqualsSignEqualsSignKeyword_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7073:2:
                // kw= '/='
                {
                    kw = (Token) match(input, 94, FOLLOW_94_in_ruleCOMPOP15835);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getCOMPOPAccess()
                                .getSolidusEqualsSignKeyword_1());

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7080:2:
                // kw= '=<'
                {
                    kw = (Token) match(input, 95, FOLLOW_95_in_ruleCOMPOP15854);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getCOMPOPAccess()
                                .getEqualsSignLessThanSignKeyword_2());

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7087:2:
                // kw= '<'
                {
                    kw = (Token) match(input, 96, FOLLOW_96_in_ruleCOMPOP15873);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getCOMPOPAccess()
                                .getLessThanSignKeyword_3());

                    }

                }
                break;
                case 5:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7094:2:
                // kw= '>='
                {
                    kw = (Token) match(input, 97, FOLLOW_97_in_ruleCOMPOP15892);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getCOMPOPAccess()
                                .getGreaterThanSignEqualsSignKeyword_4());

                    }

                }
                break;
                case 6:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7101:2:
                // kw= '>'
                {
                    kw = (Token) match(input, 98, FOLLOW_98_in_ruleCOMPOP15911);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getCOMPOPAccess()
                                .getGreaterThanSignKeyword_5());

                    }

                }
                break;
                case 7:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7108:2:
                // kw= '=:='
                {
                    kw = (Token) match(input, 99, FOLLOW_99_in_ruleCOMPOP15930);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getCOMPOPAccess()
                                .getEqualsSignColonEqualsSignKeyword_6());

                    }

                }
                break;
                case 8:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7115:2:
                // kw= '=/='
                {
                    kw = (Token) match(input, 100,
                            FOLLOW_100_in_ruleCOMPOP15949);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getCOMPOPAccess()
                                .getEqualsSignSolidusEqualsSignKeyword_7());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleCOMPOP"

    // $ANTLR start "entryRuleSENDOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7128:1:
    // entryRuleSENDOP returns [String current=null] : iv_ruleSENDOP= ruleSENDOP
    // EOF ;
    public final String entryRuleSENDOP() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSENDOP = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7129:2:
            // (iv_ruleSENDOP= ruleSENDOP EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7130:2:
            // iv_ruleSENDOP= ruleSENDOP EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getSENDOPRule());
                }
                pushFollow(FOLLOW_ruleSENDOP_in_entryRuleSENDOP15990);
                iv_ruleSENDOP = ruleSENDOP();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleSENDOP.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleSENDOP16001);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleSENDOP"

    // $ANTLR start "ruleSENDOP"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7137:1:
    // ruleSENDOP returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : kw= '!' ;
    public final AntlrDatatypeRuleToken ruleSENDOP()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7140:28:
            // (kw= '!' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7142:2:
            // kw= '!'
            {
                kw = (Token) match(input, 101, FOLLOW_101_in_ruleSENDOP16038);
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {

                    current.merge(kw);
                    newLeafNode(kw, grammarAccess.getSENDOPAccess()
                            .getExclamationMarkKeyword());

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleSENDOP"

    // $ANTLR start "entryRuleModuleVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7155:1:
    // entryRuleModuleVarMacro returns [EObject current=null] :
    // iv_ruleModuleVarMacro= ruleModuleVarMacro EOF ;
    public final EObject entryRuleModuleVarMacro() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleVarMacro = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7156:2:
            // (iv_ruleModuleVarMacro= ruleModuleVarMacro EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7157:2:
            // iv_ruleModuleVarMacro= ruleModuleVarMacro EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getModuleVarMacroRule());
                }
                pushFollow(FOLLOW_ruleModuleVarMacro_in_entryRuleModuleVarMacro16077);
                iv_ruleModuleVarMacro = ruleModuleVarMacro();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleModuleVarMacro;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleModuleVarMacro16087);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleModuleVarMacro"

    // $ANTLR start "ruleModuleVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7164:1:
    // ruleModuleVarMacro returns [EObject current=null] : (this_ModuleRef_0=
    // ruleModuleRef | this_VariableLiteral_1= ruleVariableLiteral |
    // this_MacroLiteral_2= ruleMacroLiteral ) ;
    public final EObject ruleModuleVarMacro() throws RecognitionException {
        EObject current = null;

        EObject this_ModuleRef_0 = null;

        EObject this_VariableLiteral_1 = null;

        EObject this_MacroLiteral_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7167:28:
            // ( (this_ModuleRef_0= ruleModuleRef | this_VariableLiteral_1=
            // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7168:1:
            // (this_ModuleRef_0= ruleModuleRef | this_VariableLiteral_1=
            // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7168:1:
                // (this_ModuleRef_0= ruleModuleRef | this_VariableLiteral_1=
                // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral )
                int alt115 = 3;
                switch (input.LA(1)) {
                case RULE_ATOM:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 52: {
                    alt115 = 1;
                }
                    break;
                case RULE_VARIABLE: {
                    alt115 = 2;
                }
                    break;
                case 51:
                case 102: {
                    alt115 = 3;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 115, 0, input);

                    throw nvae;
                }

                switch (alt115) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7169:5:
                // this_ModuleRef_0= ruleModuleRef
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getModuleVarMacroAccess()
                                .getModuleRefParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleModuleRef_in_ruleModuleVarMacro16134);
                    this_ModuleRef_0 = ruleModuleRef();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_ModuleRef_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7179:5:
                // this_VariableLiteral_1= ruleVariableLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getModuleVarMacroAccess()
                                .getVariableLiteralParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleVariableLiteral_in_ruleModuleVarMacro16161);
                    this_VariableLiteral_1 = ruleVariableLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_VariableLiteral_1;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7189:5:
                // this_MacroLiteral_2= ruleMacroLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getModuleVarMacroAccess()
                                .getMacroLiteralParserRuleCall_2());

                    }
                    pushFollow(FOLLOW_ruleMacroLiteral_in_ruleModuleVarMacro16188);
                    this_MacroLiteral_2 = ruleMacroLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_MacroLiteral_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleModuleVarMacro"

    // $ANTLR start "entryRuleFunctionVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7205:1:
    // entryRuleFunctionVarMacro returns [EObject current=null] :
    // iv_ruleFunctionVarMacro= ruleFunctionVarMacro EOF ;
    public final EObject entryRuleFunctionVarMacro()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionVarMacro = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7206:2:
            // (iv_ruleFunctionVarMacro= ruleFunctionVarMacro EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7207:2:
            // iv_ruleFunctionVarMacro= ruleFunctionVarMacro EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFunctionVarMacroRule());
                }
                pushFollow(FOLLOW_ruleFunctionVarMacro_in_entryRuleFunctionVarMacro16223);
                iv_ruleFunctionVarMacro = ruleFunctionVarMacro();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFunctionVarMacro;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFunctionVarMacro16233);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFunctionVarMacro"

    // $ANTLR start "ruleFunctionVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7214:1:
    // ruleFunctionVarMacro returns [EObject current=null] :
    // (this_FunctionRef_0= ruleFunctionRef | this_VariableLiteral_1=
    // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral ) ;
    public final EObject ruleFunctionVarMacro() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionRef_0 = null;

        EObject this_VariableLiteral_1 = null;

        EObject this_MacroLiteral_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7217:28:
            // ( (this_FunctionRef_0= ruleFunctionRef | this_VariableLiteral_1=
            // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7218:1:
            // (this_FunctionRef_0= ruleFunctionRef | this_VariableLiteral_1=
            // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7218:1:
                // (this_FunctionRef_0= ruleFunctionRef |
                // this_VariableLiteral_1= ruleVariableLiteral |
                // this_MacroLiteral_2= ruleMacroLiteral )
                int alt116 = 3;
                switch (input.LA(1)) {
                case RULE_ATOM:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 52: {
                    alt116 = 1;
                }
                    break;
                case RULE_VARIABLE: {
                    alt116 = 2;
                }
                    break;
                case 51:
                case 102: {
                    alt116 = 3;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 116, 0, input);

                    throw nvae;
                }

                switch (alt116) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7219:5:
                // this_FunctionRef_0= ruleFunctionRef
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getFunctionVarMacroAccess()
                                .getFunctionRefParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleFunctionRef_in_ruleFunctionVarMacro16280);
                    this_FunctionRef_0 = ruleFunctionRef();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_FunctionRef_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7229:5:
                // this_VariableLiteral_1= ruleVariableLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getFunctionVarMacroAccess()
                                .getVariableLiteralParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleVariableLiteral_in_ruleFunctionVarMacro16307);
                    this_VariableLiteral_1 = ruleVariableLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_VariableLiteral_1;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7239:5:
                // this_MacroLiteral_2= ruleMacroLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getFunctionVarMacroAccess()
                                .getMacroLiteralParserRuleCall_2());

                    }
                    pushFollow(FOLLOW_ruleMacroLiteral_in_ruleFunctionVarMacro16334);
                    this_MacroLiteral_2 = ruleMacroLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_MacroLiteral_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFunctionVarMacro"

    // $ANTLR start "entryRuleRecordVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7255:1:
    // entryRuleRecordVarMacro returns [EObject current=null] :
    // iv_ruleRecordVarMacro= ruleRecordVarMacro EOF ;
    public final EObject entryRuleRecordVarMacro() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordVarMacro = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7256:2:
            // (iv_ruleRecordVarMacro= ruleRecordVarMacro EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7257:2:
            // iv_ruleRecordVarMacro= ruleRecordVarMacro EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordVarMacroRule());
                }
                pushFollow(FOLLOW_ruleRecordVarMacro_in_entryRuleRecordVarMacro16369);
                iv_ruleRecordVarMacro = ruleRecordVarMacro();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordVarMacro;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleRecordVarMacro16379);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordVarMacro"

    // $ANTLR start "ruleRecordVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7264:1:
    // ruleRecordVarMacro returns [EObject current=null] : (this_RecordRef_0=
    // ruleRecordRef | this_VariableLiteral_1= ruleVariableLiteral |
    // this_MacroLiteral_2= ruleMacroLiteral ) ;
    public final EObject ruleRecordVarMacro() throws RecognitionException {
        EObject current = null;

        EObject this_RecordRef_0 = null;

        EObject this_VariableLiteral_1 = null;

        EObject this_MacroLiteral_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7267:28:
            // ( (this_RecordRef_0= ruleRecordRef | this_VariableLiteral_1=
            // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7268:1:
            // (this_RecordRef_0= ruleRecordRef | this_VariableLiteral_1=
            // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7268:1:
                // (this_RecordRef_0= ruleRecordRef | this_VariableLiteral_1=
                // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral )
                int alt117 = 3;
                switch (input.LA(1)) {
                case RULE_ATOM:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 52: {
                    alt117 = 1;
                }
                    break;
                case RULE_VARIABLE: {
                    alt117 = 2;
                }
                    break;
                case 51:
                case 102: {
                    alt117 = 3;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 117, 0, input);

                    throw nvae;
                }

                switch (alt117) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7269:5:
                // this_RecordRef_0= ruleRecordRef
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getRecordVarMacroAccess()
                                .getRecordRefParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleRecordRef_in_ruleRecordVarMacro16426);
                    this_RecordRef_0 = ruleRecordRef();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_RecordRef_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7279:5:
                // this_VariableLiteral_1= ruleVariableLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getRecordVarMacroAccess()
                                .getVariableLiteralParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleVariableLiteral_in_ruleRecordVarMacro16453);
                    this_VariableLiteral_1 = ruleVariableLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_VariableLiteral_1;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7289:5:
                // this_MacroLiteral_2= ruleMacroLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getRecordVarMacroAccess()
                                .getMacroLiteralParserRuleCall_2());

                    }
                    pushFollow(FOLLOW_ruleMacroLiteral_in_ruleRecordVarMacro16480);
                    this_MacroLiteral_2 = ruleMacroLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_MacroLiteral_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordVarMacro"

    // $ANTLR start "entryRuleRecordFieldVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7305:1:
    // entryRuleRecordFieldVarMacro returns [EObject current=null] :
    // iv_ruleRecordFieldVarMacro= ruleRecordFieldVarMacro EOF ;
    public final EObject entryRuleRecordFieldVarMacro()
            throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecordFieldVarMacro = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7306:2:
            // (iv_ruleRecordFieldVarMacro= ruleRecordFieldVarMacro EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7307:2:
            // iv_ruleRecordFieldVarMacro= ruleRecordFieldVarMacro EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getRecordFieldVarMacroRule());
                }
                pushFollow(FOLLOW_ruleRecordFieldVarMacro_in_entryRuleRecordFieldVarMacro16515);
                iv_ruleRecordFieldVarMacro = ruleRecordFieldVarMacro();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleRecordFieldVarMacro;
                }
                match(input, EOF,
                        FOLLOW_EOF_in_entryRuleRecordFieldVarMacro16525);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleRecordFieldVarMacro"

    // $ANTLR start "ruleRecordFieldVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7314:1:
    // ruleRecordFieldVarMacro returns [EObject current=null] :
    // (this_RecordFieldRef_0= ruleRecordFieldRef | this_VariableLiteral_1=
    // ruleVariableLiteral | this_MacroLiteral_2= ruleMacroLiteral ) ;
    public final EObject ruleRecordFieldVarMacro() throws RecognitionException {
        EObject current = null;

        EObject this_RecordFieldRef_0 = null;

        EObject this_VariableLiteral_1 = null;

        EObject this_MacroLiteral_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7317:28:
            // ( (this_RecordFieldRef_0= ruleRecordFieldRef |
            // this_VariableLiteral_1= ruleVariableLiteral |
            // this_MacroLiteral_2= ruleMacroLiteral ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7318:1:
            // (this_RecordFieldRef_0= ruleRecordFieldRef |
            // this_VariableLiteral_1= ruleVariableLiteral |
            // this_MacroLiteral_2= ruleMacroLiteral )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7318:1:
                // (this_RecordFieldRef_0= ruleRecordFieldRef |
                // this_VariableLiteral_1= ruleVariableLiteral |
                // this_MacroLiteral_2= ruleMacroLiteral )
                int alt118 = 3;
                switch (input.LA(1)) {
                case RULE_ATOM:
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 52: {
                    alt118 = 1;
                }
                    break;
                case RULE_VARIABLE: {
                    alt118 = 2;
                }
                    break;
                case 51:
                case 102: {
                    alt118 = 3;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 118, 0, input);

                    throw nvae;
                }

                switch (alt118) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7319:5:
                // this_RecordFieldRef_0= ruleRecordFieldRef
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getRecordFieldVarMacroAccess()
                                .getRecordFieldRefParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleRecordFieldRef_in_ruleRecordFieldVarMacro16572);
                    this_RecordFieldRef_0 = ruleRecordFieldRef();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_RecordFieldRef_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7329:5:
                // this_VariableLiteral_1= ruleVariableLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getRecordFieldVarMacroAccess()
                                .getVariableLiteralParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleVariableLiteral_in_ruleRecordFieldVarMacro16599);
                    this_VariableLiteral_1 = ruleVariableLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_VariableLiteral_1;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7339:5:
                // this_MacroLiteral_2= ruleMacroLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess
                                .getRecordFieldVarMacroAccess()
                                .getMacroLiteralParserRuleCall_2());

                    }
                    pushFollow(FOLLOW_ruleMacroLiteral_in_ruleRecordFieldVarMacro16626);
                    this_MacroLiteral_2 = ruleMacroLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_MacroLiteral_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleRecordFieldVarMacro"

    // $ANTLR start "entryRuleIntVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7357:1:
    // entryRuleIntVarMacro returns [EObject current=null] : iv_ruleIntVarMacro=
    // ruleIntVarMacro EOF ;
    public final EObject entryRuleIntVarMacro() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntVarMacro = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7358:2:
            // (iv_ruleIntVarMacro= ruleIntVarMacro EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7359:2:
            // iv_ruleIntVarMacro= ruleIntVarMacro EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getIntVarMacroRule());
                }
                pushFollow(FOLLOW_ruleIntVarMacro_in_entryRuleIntVarMacro16663);
                iv_ruleIntVarMacro = ruleIntVarMacro();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleIntVarMacro;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleIntVarMacro16673);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleIntVarMacro"

    // $ANTLR start "ruleIntVarMacro"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7366:1:
    // ruleIntVarMacro returns [EObject current=null] : (this_IntegerLiteral_0=
    // ruleIntegerLiteral | this_VariableLiteral_1= ruleVariableLiteral |
    // this_MacroLiteral_2= ruleMacroLiteral ) ;
    public final EObject ruleIntVarMacro() throws RecognitionException {
        EObject current = null;

        EObject this_IntegerLiteral_0 = null;

        EObject this_VariableLiteral_1 = null;

        EObject this_MacroLiteral_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7369:28:
            // ( (this_IntegerLiteral_0= ruleIntegerLiteral |
            // this_VariableLiteral_1= ruleVariableLiteral |
            // this_MacroLiteral_2= ruleMacroLiteral ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7370:1:
            // (this_IntegerLiteral_0= ruleIntegerLiteral |
            // this_VariableLiteral_1= ruleVariableLiteral |
            // this_MacroLiteral_2= ruleMacroLiteral )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7370:1:
                // (this_IntegerLiteral_0= ruleIntegerLiteral |
                // this_VariableLiteral_1= ruleVariableLiteral |
                // this_MacroLiteral_2= ruleMacroLiteral )
                int alt119 = 3;
                switch (input.LA(1)) {
                case RULE_INT:
                case RULE_BASED_INT: {
                    alt119 = 1;
                }
                    break;
                case RULE_VARIABLE: {
                    alt119 = 2;
                }
                    break;
                case 51:
                case 102: {
                    alt119 = 3;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 119, 0, input);

                    throw nvae;
                }

                switch (alt119) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7371:5:
                // this_IntegerLiteral_0= ruleIntegerLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getIntVarMacroAccess()
                                .getIntegerLiteralParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleIntegerLiteral_in_ruleIntVarMacro16720);
                    this_IntegerLiteral_0 = ruleIntegerLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_IntegerLiteral_0;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7381:5:
                // this_VariableLiteral_1= ruleVariableLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getIntVarMacroAccess()
                                .getVariableLiteralParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleVariableLiteral_in_ruleIntVarMacro16747);
                    this_VariableLiteral_1 = ruleVariableLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_VariableLiteral_1;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7391:5:
                // this_MacroLiteral_2= ruleMacroLiteral
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getIntVarMacroAccess()
                                .getMacroLiteralParserRuleCall_2());

                    }
                    pushFollow(FOLLOW_ruleMacroLiteral_in_ruleIntVarMacro16774);
                    this_MacroLiteral_2 = ruleMacroLiteral();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_MacroLiteral_2;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleIntVarMacro"

    // $ANTLR start "entryRuleNAME"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7407:1:
    // entryRuleNAME returns [String current=null] : iv_ruleNAME= ruleNAME EOF ;
    public final String entryRuleNAME() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNAME = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7408:2:
            // (iv_ruleNAME= ruleNAME EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7409:2:
            // iv_ruleNAME= ruleNAME EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getNAMERule());
                }
                pushFollow(FOLLOW_ruleNAME_in_entryRuleNAME16810);
                iv_ruleNAME = ruleNAME();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleNAME.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleNAME16821);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleNAME"

    // $ANTLR start "ruleNAME"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7416:1:
    // ruleNAME returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW )
    // ;
    public final AntlrDatatypeRuleToken ruleNAME() throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ATOM_0 = null;
        AntlrDatatypeRuleToken this_KW_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7419:28:
            // ( (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7420:1:
            // (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7420:1:
                // (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW )
                int alt120 = 2;
                final int LA120_0 = input.LA(1);

                if (LA120_0 == RULE_ATOM) {
                    alt120 = 1;
                } else if (LA120_0 == 20 || LA120_0 >= 24 && LA120_0 <= 34
                        || LA120_0 == 39 || LA120_0 >= 42 && LA120_0 <= 45
                        || LA120_0 >= 47 && LA120_0 <= 48 || LA120_0 == 52) {
                    alt120 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 120, 0, input);

                    throw nvae;
                }
                switch (alt120) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7420:6:
                // this_ATOM_0= RULE_ATOM
                {
                    this_ATOM_0 = (Token) match(input, RULE_ATOM,
                            FOLLOW_RULE_ATOM_in_ruleNAME16861);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_ATOM_0);

                    }
                    if (state.backtracking == 0) {

                        newLeafNode(this_ATOM_0, grammarAccess.getNAMEAccess()
                                .getATOMTerminalRuleCall_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7429:5:
                // this_KW_1= ruleKW
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getNAMEAccess()
                                .getKWParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleKW_in_ruleNAME16894);
                    this_KW_1 = ruleKW();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_KW_1);

                    }
                    if (state.backtracking == 0) {

                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleNAME"

    // $ANTLR start "entryRuleNAMEVAR"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7447:1:
    // entryRuleNAMEVAR returns [String current=null] : iv_ruleNAMEVAR=
    // ruleNAMEVAR EOF ;
    public final String entryRuleNAMEVAR() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNAMEVAR = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7448:2:
            // (iv_ruleNAMEVAR= ruleNAMEVAR EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7449:2:
            // iv_ruleNAMEVAR= ruleNAMEVAR EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getNAMEVARRule());
                }
                pushFollow(FOLLOW_ruleNAMEVAR_in_entryRuleNAMEVAR16940);
                iv_ruleNAMEVAR = ruleNAMEVAR();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleNAMEVAR.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleNAMEVAR16951);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleNAMEVAR"

    // $ANTLR start "ruleNAMEVAR"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7456:1:
    // ruleNAMEVAR returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW |
    // this_VARIABLE_2= RULE_VARIABLE ) ;
    public final AntlrDatatypeRuleToken ruleNAMEVAR()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ATOM_0 = null;
        Token this_VARIABLE_2 = null;
        AntlrDatatypeRuleToken this_KW_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7459:28:
            // ( (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW | this_VARIABLE_2=
            // RULE_VARIABLE ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7460:1:
            // (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW | this_VARIABLE_2=
            // RULE_VARIABLE )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7460:1:
                // (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW |
                // this_VARIABLE_2= RULE_VARIABLE )
                int alt121 = 3;
                switch (input.LA(1)) {
                case RULE_ATOM: {
                    alt121 = 1;
                }
                    break;
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 52: {
                    alt121 = 2;
                }
                    break;
                case RULE_VARIABLE: {
                    alt121 = 3;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 121, 0, input);

                    throw nvae;
                }

                switch (alt121) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7460:6:
                // this_ATOM_0= RULE_ATOM
                {
                    this_ATOM_0 = (Token) match(input, RULE_ATOM,
                            FOLLOW_RULE_ATOM_in_ruleNAMEVAR16991);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_ATOM_0);

                    }
                    if (state.backtracking == 0) {

                        newLeafNode(this_ATOM_0, grammarAccess
                                .getNAMEVARAccess().getATOMTerminalRuleCall_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7469:5:
                // this_KW_1= ruleKW
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getNAMEVARAccess()
                                .getKWParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleKW_in_ruleNAMEVAR17024);
                    this_KW_1 = ruleKW();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_KW_1);

                    }
                    if (state.backtracking == 0) {

                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7480:10:
                // this_VARIABLE_2= RULE_VARIABLE
                {
                    this_VARIABLE_2 = (Token) match(input, RULE_VARIABLE,
                            FOLLOW_RULE_VARIABLE_in_ruleNAMEVAR17050);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_VARIABLE_2);

                    }
                    if (state.backtracking == 0) {

                        newLeafNode(this_VARIABLE_2, grammarAccess
                                .getNAMEVARAccess()
                                .getVARIABLETerminalRuleCall_2());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleNAMEVAR"

    // $ANTLR start "entryRuleMACRO"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7495:1:
    // entryRuleMACRO returns [String current=null] : iv_ruleMACRO= ruleMACRO
    // EOF ;
    public final String entryRuleMACRO() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMACRO = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7496:2:
            // (iv_ruleMACRO= ruleMACRO EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7497:2:
            // iv_ruleMACRO= ruleMACRO EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getMACRORule());
                }
                pushFollow(FOLLOW_ruleMACRO_in_entryRuleMACRO17096);
                iv_ruleMACRO = ruleMACRO();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleMACRO.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleMACRO17107);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleMACRO"

    // $ANTLR start "ruleMACRO"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7504:1:
    // ruleMACRO returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : ( (kw= '?' | kw= '??' ) (this_ATOM_2=
    // RULE_ATOM | this_KW1_3= ruleKW1 | this_VARIABLE_4= RULE_VARIABLE ) ) ;
    public final AntlrDatatypeRuleToken ruleMACRO() throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;
        Token this_ATOM_2 = null;
        Token this_VARIABLE_4 = null;
        AntlrDatatypeRuleToken this_KW1_3 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7507:28:
            // ( ( (kw= '?' | kw= '??' ) (this_ATOM_2= RULE_ATOM | this_KW1_3=
            // ruleKW1 | this_VARIABLE_4= RULE_VARIABLE ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7508:1:
            // ( (kw= '?' | kw= '??' ) (this_ATOM_2= RULE_ATOM | this_KW1_3=
            // ruleKW1 | this_VARIABLE_4= RULE_VARIABLE ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7508:1:
                // ( (kw= '?' | kw= '??' ) (this_ATOM_2= RULE_ATOM | this_KW1_3=
                // ruleKW1 | this_VARIABLE_4= RULE_VARIABLE ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7508:2:
                // (kw= '?' | kw= '??' ) (this_ATOM_2= RULE_ATOM | this_KW1_3=
                // ruleKW1 | this_VARIABLE_4= RULE_VARIABLE )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7508:2:
                    // (kw= '?' | kw= '??' )
                    int alt122 = 2;
                    final int LA122_0 = input.LA(1);

                    if (LA122_0 == 51) {
                        alt122 = 1;
                    } else if (LA122_0 == 102) {
                        alt122 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 122, 0, input);

                        throw nvae;
                    }
                    switch (alt122) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7509:2:
                    // kw= '?'
                    {
                        kw = (Token) match(input, 51,
                                FOLLOW_51_in_ruleMACRO17146);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current.merge(kw);
                            newLeafNode(kw, grammarAccess.getMACROAccess()
                                    .getQuestionMarkKeyword_0_0());

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7516:2:
                    // kw= '??'
                    {
                        kw = (Token) match(input, 102,
                                FOLLOW_102_in_ruleMACRO17165);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current.merge(kw);
                            newLeafNode(kw, grammarAccess.getMACROAccess()
                                    .getQuestionMarkQuestionMarkKeyword_0_1());

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7521:2:
                    // (this_ATOM_2= RULE_ATOM | this_KW1_3= ruleKW1 |
                    // this_VARIABLE_4= RULE_VARIABLE )
                    int alt123 = 3;
                    switch (input.LA(1)) {
                    case RULE_ATOM: {
                        alt123 = 1;
                    }
                        break;
                    case 20:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 39:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 47:
                    case 48: {
                        alt123 = 2;
                    }
                        break;
                    case RULE_VARIABLE: {
                        alt123 = 3;
                    }
                        break;
                    default:
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 123, 0, input);

                        throw nvae;
                    }

                    switch (alt123) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7521:7:
                    // this_ATOM_2= RULE_ATOM
                    {
                        this_ATOM_2 = (Token) match(input, RULE_ATOM,
                                FOLLOW_RULE_ATOM_in_ruleMACRO17182);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current.merge(this_ATOM_2);

                        }
                        if (state.backtracking == 0) {

                            newLeafNode(this_ATOM_2, grammarAccess
                                    .getMACROAccess()
                                    .getATOMTerminalRuleCall_1_0());

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7530:5:
                    // this_KW1_3= ruleKW1
                    {
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess.getMACROAccess()
                                    .getKW1ParserRuleCall_1_1());

                        }
                        pushFollow(FOLLOW_ruleKW1_in_ruleMACRO17215);
                        this_KW1_3 = ruleKW1();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current.merge(this_KW1_3);

                        }
                        if (state.backtracking == 0) {

                            afterParserOrEnumRuleCall();

                        }

                    }
                        break;
                    case 3:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7541:10:
                    // this_VARIABLE_4= RULE_VARIABLE
                    {
                        this_VARIABLE_4 = (Token) match(input, RULE_VARIABLE,
                                FOLLOW_RULE_VARIABLE_in_ruleMACRO17241);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current.merge(this_VARIABLE_4);

                        }
                        if (state.backtracking == 0) {

                            newLeafNode(this_VARIABLE_4, grammarAccess
                                    .getMACROAccess()
                                    .getVARIABLETerminalRuleCall_1_2());

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleMACRO"

    // $ANTLR start "entryRuleNAMEMACRO"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7558:1:
    // entryRuleNAMEMACRO returns [String current=null] : iv_ruleNAMEMACRO=
    // ruleNAMEMACRO EOF ;
    public final String entryRuleNAMEMACRO() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNAMEMACRO = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7559:2:
            // (iv_ruleNAMEMACRO= ruleNAMEMACRO EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7560:2:
            // iv_ruleNAMEMACRO= ruleNAMEMACRO EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getNAMEMACRORule());
                }
                pushFollow(FOLLOW_ruleNAMEMACRO_in_entryRuleNAMEMACRO17290);
                iv_ruleNAMEMACRO = ruleNAMEMACRO();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleNAMEMACRO.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleNAMEMACRO17301);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleNAMEMACRO"

    // $ANTLR start "ruleNAMEMACRO"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7567:1:
    // ruleNAMEMACRO returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW |
    // this_MACRO_2= ruleMACRO ) ;
    public final AntlrDatatypeRuleToken ruleNAMEMACRO()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ATOM_0 = null;
        AntlrDatatypeRuleToken this_KW_1 = null;

        AntlrDatatypeRuleToken this_MACRO_2 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7570:28:
            // ( (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW | this_MACRO_2=
            // ruleMACRO ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7571:1:
            // (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW | this_MACRO_2=
            // ruleMACRO )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7571:1:
                // (this_ATOM_0= RULE_ATOM | this_KW_1= ruleKW | this_MACRO_2=
                // ruleMACRO )
                int alt124 = 3;
                switch (input.LA(1)) {
                case RULE_ATOM: {
                    alt124 = 1;
                }
                    break;
                case 20:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 39:
                case 42:
                case 43:
                case 44:
                case 45:
                case 47:
                case 48:
                case 52: {
                    alt124 = 2;
                }
                    break;
                case 51:
                case 102: {
                    alt124 = 3;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 124, 0, input);

                    throw nvae;
                }

                switch (alt124) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7571:6:
                // this_ATOM_0= RULE_ATOM
                {
                    this_ATOM_0 = (Token) match(input, RULE_ATOM,
                            FOLLOW_RULE_ATOM_in_ruleNAMEMACRO17341);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_ATOM_0);

                    }
                    if (state.backtracking == 0) {

                        newLeafNode(this_ATOM_0, grammarAccess
                                .getNAMEMACROAccess()
                                .getATOMTerminalRuleCall_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7580:5:
                // this_KW_1= ruleKW
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getNAMEMACROAccess()
                                .getKWParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleKW_in_ruleNAMEMACRO17374);
                    this_KW_1 = ruleKW();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_KW_1);

                    }
                    if (state.backtracking == 0) {

                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7592:5:
                // this_MACRO_2= ruleMACRO
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getNAMEMACROAccess()
                                .getMACROParserRuleCall_2());

                    }
                    pushFollow(FOLLOW_ruleMACRO_in_ruleNAMEMACRO17407);
                    this_MACRO_2 = ruleMACRO();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_MACRO_2);

                    }
                    if (state.backtracking == 0) {

                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleNAMEMACRO"

    // $ANTLR start "entryRuleKW"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7610:1:
    // entryRuleKW returns [String current=null] : iv_ruleKW= ruleKW EOF ;
    public final String entryRuleKW() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleKW = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7611:2:
            // (iv_ruleKW= ruleKW EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7612:2:
            // iv_ruleKW= ruleKW EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getKWRule());
                }
                pushFollow(FOLLOW_ruleKW_in_entryRuleKW17453);
                iv_ruleKW = ruleKW();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleKW.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleKW17464);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleKW"

    // $ANTLR start "ruleKW"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7619:1:
    // ruleKW returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (this_KW1_0= ruleKW1 | kw= 'line' ) ;
    public final AntlrDatatypeRuleToken ruleKW() throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;
        AntlrDatatypeRuleToken this_KW1_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7622:28:
            // ( (this_KW1_0= ruleKW1 | kw= 'line' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7623:1:
            // (this_KW1_0= ruleKW1 | kw= 'line' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7623:1:
                // (this_KW1_0= ruleKW1 | kw= 'line' )
                int alt125 = 2;
                final int LA125_0 = input.LA(1);

                if (LA125_0 == 20 || LA125_0 >= 24 && LA125_0 <= 34
                        || LA125_0 == 39 || LA125_0 >= 42 && LA125_0 <= 45
                        || LA125_0 >= 47 && LA125_0 <= 48) {
                    alt125 = 1;
                } else if (LA125_0 == 52) {
                    alt125 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 125, 0, input);

                    throw nvae;
                }
                switch (alt125) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7624:5:
                // this_KW1_0= ruleKW1
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getKWAccess()
                                .getKW1ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleKW1_in_ruleKW17511);
                    this_KW1_0 = ruleKW1();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_KW1_0);

                    }
                    if (state.backtracking == 0) {

                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7636:2:
                // kw= 'line'
                {
                    kw = (Token) match(input, 52, FOLLOW_52_in_ruleKW17535);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKWAccess()
                                .getLineKeyword_1());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleKW"

    // $ANTLR start "entryRuleKW1"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7649:1:
    // entryRuleKW1 returns [String current=null] : iv_ruleKW1= ruleKW1 EOF ;
    public final String entryRuleKW1() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleKW1 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7650:2:
            // (iv_ruleKW1= ruleKW1 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7651:2:
            // iv_ruleKW1= ruleKW1 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getKW1Rule());
                }
                pushFollow(FOLLOW_ruleKW1_in_entryRuleKW117576);
                iv_ruleKW1 = ruleKW1();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleKW1.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleKW117587);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleKW1"

    // $ANTLR start "ruleKW1"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7658:1:
    // ruleKW1 returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (kw= 'spec' | kw= 'endif' | kw= 'ifdef' | kw=
    // 'ifndef' | kw= 'type' | kw= 'opaque' | kw= 'record' | kw= 'undef' | kw=
    // 'module' | kw= 'include' | kw= 'include_lib' | kw= 'define' | kw= 'file'
    // | kw= 'callback' | kw= 'else' | kw= 'export' | kw= 'import' | kw=
    // 'compile' | kw= 'encoding' ) ;
    public final AntlrDatatypeRuleToken ruleKW1() throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7661:28:
            // ( (kw= 'spec' | kw= 'endif' | kw= 'ifdef' | kw= 'ifndef' | kw=
            // 'type' | kw= 'opaque' | kw= 'record' | kw= 'undef' | kw= 'module'
            // | kw= 'include' | kw= 'include_lib' | kw= 'define' | kw= 'file' |
            // kw= 'callback' | kw= 'else' | kw= 'export' | kw= 'import' | kw=
            // 'compile' | kw= 'encoding' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7662:1:
            // (kw= 'spec' | kw= 'endif' | kw= 'ifdef' | kw= 'ifndef' | kw=
            // 'type' | kw= 'opaque' | kw= 'record' | kw= 'undef' | kw= 'module'
            // | kw= 'include' | kw= 'include_lib' | kw= 'define' | kw= 'file' |
            // kw= 'callback' | kw= 'else' | kw= 'export' | kw= 'import' | kw=
            // 'compile' | kw= 'encoding' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7662:1:
                // (kw= 'spec' | kw= 'endif' | kw= 'ifdef' | kw= 'ifndef' | kw=
                // 'type' | kw= 'opaque' | kw= 'record' | kw= 'undef' | kw=
                // 'module' | kw= 'include' | kw= 'include_lib' | kw= 'define' |
                // kw= 'file' | kw= 'callback' | kw= 'else' | kw= 'export' | kw=
                // 'import' | kw= 'compile' | kw= 'encoding' )
                int alt126 = 19;
                switch (input.LA(1)) {
                case 44: {
                    alt126 = 1;
                }
                    break;
                case 28: {
                    alt126 = 2;
                }
                    break;
                case 25: {
                    alt126 = 3;
                }
                    break;
                case 26: {
                    alt126 = 4;
                }
                    break;
                case 47: {
                    alt126 = 5;
                }
                    break;
                case 48: {
                    alt126 = 6;
                }
                    break;
                case 34: {
                    alt126 = 7;
                }
                    break;
                case 24: {
                    alt126 = 8;
                }
                    break;
                case 32: {
                    alt126 = 9;
                }
                    break;
                case 29: {
                    alt126 = 10;
                }
                    break;
                case 30: {
                    alt126 = 11;
                }
                    break;
                case 20: {
                    alt126 = 12;
                }
                    break;
                case 31: {
                    alt126 = 13;
                }
                    break;
                case 45: {
                    alt126 = 14;
                }
                    break;
                case 27: {
                    alt126 = 15;
                }
                    break;
                case 39: {
                    alt126 = 16;
                }
                    break;
                case 42: {
                    alt126 = 17;
                }
                    break;
                case 43: {
                    alt126 = 18;
                }
                    break;
                case 33: {
                    alt126 = 19;
                }
                    break;
                default:
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 126, 0, input);

                    throw nvae;
                }

                switch (alt126) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7663:2:
                // kw= 'spec'
                {
                    kw = (Token) match(input, 44, FOLLOW_44_in_ruleKW117625);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getSpecKeyword_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7670:2:
                // kw= 'endif'
                {
                    kw = (Token) match(input, 28, FOLLOW_28_in_ruleKW117644);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getEndifKeyword_1());

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7677:2:
                // kw= 'ifdef'
                {
                    kw = (Token) match(input, 25, FOLLOW_25_in_ruleKW117663);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getIfdefKeyword_2());

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7684:2:
                // kw= 'ifndef'
                {
                    kw = (Token) match(input, 26, FOLLOW_26_in_ruleKW117682);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getIfndefKeyword_3());

                    }

                }
                break;
                case 5:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7691:2:
                // kw= 'type'
                {
                    kw = (Token) match(input, 47, FOLLOW_47_in_ruleKW117701);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getTypeKeyword_4());

                    }

                }
                break;
                case 6:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7698:2:
                // kw= 'opaque'
                {
                    kw = (Token) match(input, 48, FOLLOW_48_in_ruleKW117720);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getOpaqueKeyword_5());

                    }

                }
                break;
                case 7:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7705:2:
                // kw= 'record'
                {
                    kw = (Token) match(input, 34, FOLLOW_34_in_ruleKW117739);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getRecordKeyword_6());

                    }

                }
                break;
                case 8:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7712:2:
                // kw= 'undef'
                {
                    kw = (Token) match(input, 24, FOLLOW_24_in_ruleKW117758);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getUndefKeyword_7());

                    }

                }
                break;
                case 9:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7719:2:
                // kw= 'module'
                {
                    kw = (Token) match(input, 32, FOLLOW_32_in_ruleKW117777);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getModuleKeyword_8());

                    }

                }
                break;
                case 10:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7726:2:
                // kw= 'include'
                {
                    kw = (Token) match(input, 29, FOLLOW_29_in_ruleKW117796);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getIncludeKeyword_9());

                    }

                }
                break;
                case 11:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7733:2:
                // kw= 'include_lib'
                {
                    kw = (Token) match(input, 30, FOLLOW_30_in_ruleKW117815);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getInclude_libKeyword_10());

                    }

                }
                break;
                case 12:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7740:2:
                // kw= 'define'
                {
                    kw = (Token) match(input, 20, FOLLOW_20_in_ruleKW117834);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getDefineKeyword_11());

                    }

                }
                break;
                case 13:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7747:2:
                // kw= 'file'
                {
                    kw = (Token) match(input, 31, FOLLOW_31_in_ruleKW117853);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getFileKeyword_12());

                    }

                }
                break;
                case 14:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7754:2:
                // kw= 'callback'
                {
                    kw = (Token) match(input, 45, FOLLOW_45_in_ruleKW117872);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getCallbackKeyword_13());

                    }

                }
                break;
                case 15:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7761:2:
                // kw= 'else'
                {
                    kw = (Token) match(input, 27, FOLLOW_27_in_ruleKW117891);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getElseKeyword_14());

                    }

                }
                break;
                case 16:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7768:2:
                // kw= 'export'
                {
                    kw = (Token) match(input, 39, FOLLOW_39_in_ruleKW117910);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getExportKeyword_15());

                    }

                }
                break;
                case 17:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7775:2:
                // kw= 'import'
                {
                    kw = (Token) match(input, 42, FOLLOW_42_in_ruleKW117929);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getImportKeyword_16());

                    }

                }
                break;
                case 18:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7782:2:
                // kw= 'compile'
                {
                    kw = (Token) match(input, 43, FOLLOW_43_in_ruleKW117948);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getCompileKeyword_17());

                    }

                }
                break;
                case 19:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7789:2:
                // kw= 'encoding'
                {
                    kw = (Token) match(input, 33, FOLLOW_33_in_ruleKW117967);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getKW1Access()
                                .getEncodingKeyword_18());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleKW1"

    // $ANTLR start "entryRuleINTEGER"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7804:1:
    // entryRuleINTEGER returns [String current=null] : iv_ruleINTEGER=
    // ruleINTEGER EOF ;
    public final String entryRuleINTEGER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTEGER = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7805:2:
            // (iv_ruleINTEGER= ruleINTEGER EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7806:2:
            // iv_ruleINTEGER= ruleINTEGER EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getINTEGERRule());
                }
                pushFollow(FOLLOW_ruleINTEGER_in_entryRuleINTEGER18010);
                iv_ruleINTEGER = ruleINTEGER();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleINTEGER.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleINTEGER18021);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleINTEGER"

    // $ANTLR start "ruleINTEGER"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7813:1:
    // ruleINTEGER returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | this_BASED_INT_1=
    // RULE_BASED_INT ) ;
    public final AntlrDatatypeRuleToken ruleINTEGER()
            throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0 = null;
        Token this_BASED_INT_1 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7816:28:
            // ( (this_INT_0= RULE_INT | this_BASED_INT_1= RULE_BASED_INT ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7817:1:
            // (this_INT_0= RULE_INT | this_BASED_INT_1= RULE_BASED_INT )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7817:1:
                // (this_INT_0= RULE_INT | this_BASED_INT_1= RULE_BASED_INT )
                int alt127 = 2;
                final int LA127_0 = input.LA(1);

                if (LA127_0 == RULE_INT) {
                    alt127 = 1;
                } else if (LA127_0 == RULE_BASED_INT) {
                    alt127 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 127, 0, input);

                    throw nvae;
                }
                switch (alt127) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7817:6:
                // this_INT_0= RULE_INT
                {
                    this_INT_0 = (Token) match(input, RULE_INT,
                            FOLLOW_RULE_INT_in_ruleINTEGER18061);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_INT_0);

                    }
                    if (state.backtracking == 0) {

                        newLeafNode(this_INT_0, grammarAccess
                                .getINTEGERAccess().getINTTerminalRuleCall_0());

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7825:10:
                // this_BASED_INT_1= RULE_BASED_INT
                {
                    this_BASED_INT_1 = (Token) match(input, RULE_BASED_INT,
                            FOLLOW_RULE_BASED_INT_in_ruleINTEGER18087);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_BASED_INT_1);

                    }
                    if (state.backtracking == 0) {

                        newLeafNode(this_BASED_INT_1, grammarAccess
                                .getINTEGERAccess()
                                .getBASED_INTTerminalRuleCall_1());

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleINTEGER"

    // $ANTLR start "entryRuleFLOAT"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7840:1:
    // entryRuleFLOAT returns [String current=null] : iv_ruleFLOAT= ruleFLOAT
    // EOF ;
    public final String entryRuleFLOAT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFLOAT = null;

        final HiddenTokens myHiddenTokenState = ((XtextTokenStream) input)
                .setHiddenTokens();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7844:2:
            // (iv_ruleFLOAT= ruleFLOAT EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7845:2:
            // iv_ruleFLOAT= ruleFLOAT EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFLOATRule());
                }
                pushFollow(FOLLOW_ruleFLOAT_in_entryRuleFLOAT18139);
                iv_ruleFLOAT = ruleFLOAT();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFLOAT.getText();
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFLOAT18150);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {

            myHiddenTokenState.restore();

        }
        return current;
    }

    // $ANTLR end "entryRuleFLOAT"

    // $ANTLR start "ruleFLOAT"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7855:1:
    // ruleFLOAT returns [AntlrDatatypeRuleToken current=new
    // AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT kw= '.'
    // (this_EXT_INT_2= RULE_EXT_INT | this_INT_3= RULE_INT ) ) ;
    public final AntlrDatatypeRuleToken ruleFLOAT() throws RecognitionException {
        final AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0 = null;
        Token kw = null;
        Token this_EXT_INT_2 = null;
        Token this_INT_3 = null;

        enterRule();
        final HiddenTokens myHiddenTokenState = ((XtextTokenStream) input)
                .setHiddenTokens();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7859:28:
            // ( (this_INT_0= RULE_INT kw= '.' (this_EXT_INT_2= RULE_EXT_INT |
            // this_INT_3= RULE_INT ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7860:1:
            // (this_INT_0= RULE_INT kw= '.' (this_EXT_INT_2= RULE_EXT_INT |
            // this_INT_3= RULE_INT ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7860:1:
                // (this_INT_0= RULE_INT kw= '.' (this_EXT_INT_2= RULE_EXT_INT |
                // this_INT_3= RULE_INT ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7860:6:
                // this_INT_0= RULE_INT kw= '.' (this_EXT_INT_2= RULE_EXT_INT |
                // this_INT_3= RULE_INT )
                {
                    this_INT_0 = (Token) match(input, RULE_INT,
                            FOLLOW_RULE_INT_in_ruleFLOAT18194);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(this_INT_0);

                    }
                    if (state.backtracking == 0) {

                        newLeafNode(this_INT_0, grammarAccess.getFLOATAccess()
                                .getINTTerminalRuleCall_0());

                    }
                    kw = (Token) match(input, 18, FOLLOW_18_in_ruleFLOAT18212);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current.merge(kw);
                        newLeafNode(kw, grammarAccess.getFLOATAccess()
                                .getFullStopKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7873:1:
                    // (this_EXT_INT_2= RULE_EXT_INT | this_INT_3= RULE_INT )
                    int alt128 = 2;
                    final int LA128_0 = input.LA(1);

                    if (LA128_0 == RULE_EXT_INT) {
                        alt128 = 1;
                    } else if (LA128_0 == RULE_INT) {
                        alt128 = 2;
                    } else {
                        if (state.backtracking > 0) {
                            state.failed = true;
                            return current;
                        }
                        final NoViableAltException nvae = new NoViableAltException(
                                "", 128, 0, input);

                        throw nvae;
                    }
                    switch (alt128) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7873:6:
                    // this_EXT_INT_2= RULE_EXT_INT
                    {
                        this_EXT_INT_2 = (Token) match(input, RULE_EXT_INT,
                                FOLLOW_RULE_EXT_INT_in_ruleFLOAT18228);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current.merge(this_EXT_INT_2);

                        }
                        if (state.backtracking == 0) {

                            newLeafNode(this_EXT_INT_2, grammarAccess
                                    .getFLOATAccess()
                                    .getEXT_INTTerminalRuleCall_2_0());

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7881:10:
                    // this_INT_3= RULE_INT
                    {
                        this_INT_3 = (Token) match(input, RULE_INT,
                                FOLLOW_RULE_INT_in_ruleFLOAT18254);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current.merge(this_INT_3);

                        }
                        if (state.backtracking == 0) {

                            newLeafNode(this_INT_3, grammarAccess
                                    .getFLOATAccess()
                                    .getINTTerminalRuleCall_2_1());

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {

            myHiddenTokenState.restore();

        }
        return current;
    }

    // $ANTLR end "ruleFLOAT"

    // $ANTLR start "entryRuleSpecFun"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7899:1:
    // entryRuleSpecFun returns [EObject current=null] : iv_ruleSpecFun=
    // ruleSpecFun EOF ;
    public final EObject entryRuleSpecFun() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecFun = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7900:2:
            // (iv_ruleSpecFun= ruleSpecFun EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7901:2:
            // iv_ruleSpecFun= ruleSpecFun EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getSpecFunRule());
                }
                pushFollow(FOLLOW_ruleSpecFun_in_entryRuleSpecFun18304);
                iv_ruleSpecFun = ruleSpecFun();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleSpecFun;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleSpecFun18314);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleSpecFun"

    // $ANTLR start "ruleSpecFun"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7908:1:
    // ruleSpecFun returns [EObject current=null] : ( ( ( (lv_module_0_0=
    // ruleModuleVarMacro ) ) otherlv_1= ':' )? ( (lv_function_2_0=
    // ruleFunctionVarMacro ) ) (otherlv_3= '/' ( (lv_arity_4_0= ruleIntVarMacro
    // ) ) otherlv_5= '::' )? ) ;
    public final EObject ruleSpecFun() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        EObject lv_module_0_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_arity_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7911:28:
            // ( ( ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':' )?
            // ( (lv_function_2_0= ruleFunctionVarMacro ) ) (otherlv_3= '/' (
            // (lv_arity_4_0= ruleIntVarMacro ) ) otherlv_5= '::' )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7912:1:
            // ( ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':' )? (
            // (lv_function_2_0= ruleFunctionVarMacro ) ) (otherlv_3= '/' (
            // (lv_arity_4_0= ruleIntVarMacro ) ) otherlv_5= '::' )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7912:1:
                // ( ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':'
                // )? ( (lv_function_2_0= ruleFunctionVarMacro ) ) (otherlv_3=
                // '/' ( (lv_arity_4_0= ruleIntVarMacro ) ) otherlv_5= '::' )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7912:2:
                // ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':' )?
                // ( (lv_function_2_0= ruleFunctionVarMacro ) ) (otherlv_3= '/'
                // ( (lv_arity_4_0= ruleIntVarMacro ) ) otherlv_5= '::' )?
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7912:2:
                    // ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':'
                    // )?
                    int alt129 = 2;
                    alt129 = dfa129.predict(input);
                    switch (alt129) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7912:3:
                    // ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':'
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7912:3:
                        // ( (lv_module_0_0= ruleModuleVarMacro ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7913:1:
                        // (lv_module_0_0= ruleModuleVarMacro )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7913:1:
                            // (lv_module_0_0= ruleModuleVarMacro )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7914:3:
                            // lv_module_0_0= ruleModuleVarMacro
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getSpecFunAccess()
                                            .getModuleModuleVarMacroParserRuleCall_0_0_0());

                                }
                                pushFollow(FOLLOW_ruleModuleVarMacro_in_ruleSpecFun18361);
                                lv_module_0_0 = ruleModuleVarMacro();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getSpecFunRule());
                                    }
                                    set(current, "module", lv_module_0_0,
                                            "ModuleVarMacro");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        otherlv_1 = (Token) match(input, 57,
                                FOLLOW_57_in_ruleSpecFun18373);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getSpecFunAccess().getColonKeyword_0_1());

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7934:3:
                    // ( (lv_function_2_0= ruleFunctionVarMacro ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7935:1:
                    // (lv_function_2_0= ruleFunctionVarMacro )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7935:1:
                        // (lv_function_2_0= ruleFunctionVarMacro )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7936:3:
                        // lv_function_2_0= ruleFunctionVarMacro
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getSpecFunAccess()
                                        .getFunctionFunctionVarMacroParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleFunctionVarMacro_in_ruleSpecFun18396);
                            lv_function_2_0 = ruleFunctionVarMacro();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getSpecFunRule());
                                }
                                set(current, "function", lv_function_2_0,
                                        "FunctionVarMacro");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7952:2:
                    // (otherlv_3= '/' ( (lv_arity_4_0= ruleIntVarMacro ) )
                    // otherlv_5= '::' )?
                    int alt130 = 2;
                    final int LA130_0 = input.LA(1);

                    if (LA130_0 == 69) {
                        alt130 = 1;
                    }
                    switch (alt130) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7952:4:
                    // otherlv_3= '/' ( (lv_arity_4_0= ruleIntVarMacro ) )
                    // otherlv_5= '::'
                    {
                        otherlv_3 = (Token) match(input, 69,
                                FOLLOW_69_in_ruleSpecFun18409);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_3, grammarAccess
                                    .getSpecFunAccess().getSolidusKeyword_2_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7956:1:
                        // ( (lv_arity_4_0= ruleIntVarMacro ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7957:1:
                        // (lv_arity_4_0= ruleIntVarMacro )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7957:1:
                            // (lv_arity_4_0= ruleIntVarMacro )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7958:3:
                            // lv_arity_4_0= ruleIntVarMacro
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getSpecFunAccess()
                                            .getArityIntVarMacroParserRuleCall_2_1_0());

                                }
                                pushFollow(FOLLOW_ruleIntVarMacro_in_ruleSpecFun18430);
                                lv_arity_4_0 = ruleIntVarMacro();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getSpecFunRule());
                                    }
                                    set(current, "arity", lv_arity_4_0,
                                            "IntVarMacro");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        otherlv_5 = (Token) match(input, 38,
                                FOLLOW_38_in_ruleSpecFun18442);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_5, grammarAccess
                                    .getSpecFunAccess()
                                    .getColonColonKeyword_2_2());

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleSpecFun"

    // $ANTLR start "entryRuleTypeSig"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7986:1:
    // entryRuleTypeSig returns [EObject current=null] : iv_ruleTypeSig=
    // ruleTypeSig EOF ;
    public final EObject entryRuleTypeSig() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeSig = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7987:2:
            // (iv_ruleTypeSig= ruleTypeSig EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7988:2:
            // iv_ruleTypeSig= ruleTypeSig EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTypeSigRule());
                }
                pushFollow(FOLLOW_ruleTypeSig_in_entryRuleTypeSig18480);
                iv_ruleTypeSig = ruleTypeSig();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTypeSig;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTypeSig18490);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTypeSig"

    // $ANTLR start "ruleTypeSig"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7995:1:
    // ruleTypeSig returns [EObject current=null] : ( ( (lv_decl_0_0=
    // ruleFunType ) ) (otherlv_1= 'when' ( (lv_guards_2_0= ruleTypeGuards ) )
    // )? ) ;
    public final EObject ruleTypeSig() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_decl_0_0 = null;

        EObject lv_guards_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7998:28:
            // ( ( ( (lv_decl_0_0= ruleFunType ) ) (otherlv_1= 'when' (
            // (lv_guards_2_0= ruleTypeGuards ) ) )? ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7999:1:
            // ( ( (lv_decl_0_0= ruleFunType ) ) (otherlv_1= 'when' (
            // (lv_guards_2_0= ruleTypeGuards ) ) )? )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7999:1:
                // ( ( (lv_decl_0_0= ruleFunType ) ) (otherlv_1= 'when' (
                // (lv_guards_2_0= ruleTypeGuards ) ) )? )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7999:2:
                // ( (lv_decl_0_0= ruleFunType ) ) (otherlv_1= 'when' (
                // (lv_guards_2_0= ruleTypeGuards ) ) )?
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:7999:2:
                    // ( (lv_decl_0_0= ruleFunType ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8000:1:
                    // (lv_decl_0_0= ruleFunType )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8000:1:
                        // (lv_decl_0_0= ruleFunType )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8001:3:
                        // lv_decl_0_0= ruleFunType
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getTypeSigAccess()
                                        .getDeclFunTypeParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleFunType_in_ruleTypeSig18536);
                            lv_decl_0_0 = ruleFunType();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getTypeSigRule());
                                }
                                set(current, "decl", lv_decl_0_0, "FunType");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8017:2:
                    // (otherlv_1= 'when' ( (lv_guards_2_0= ruleTypeGuards ) )
                    // )?
                    int alt131 = 2;
                    final int LA131_0 = input.LA(1);

                    if (LA131_0 == 49) {
                        alt131 = 1;
                    }
                    switch (alt131) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8017:4:
                    // otherlv_1= 'when' ( (lv_guards_2_0= ruleTypeGuards ) )
                    {
                        otherlv_1 = (Token) match(input, 49,
                                FOLLOW_49_in_ruleTypeSig18549);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getTypeSigAccess().getWhenKeyword_1_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8021:1:
                        // ( (lv_guards_2_0= ruleTypeGuards ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8022:1:
                        // (lv_guards_2_0= ruleTypeGuards )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8022:1:
                            // (lv_guards_2_0= ruleTypeGuards )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8023:3:
                            // lv_guards_2_0= ruleTypeGuards
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTypeSigAccess()
                                            .getGuardsTypeGuardsParserRuleCall_1_1_0());

                                }
                                pushFollow(FOLLOW_ruleTypeGuards_in_ruleTypeSig18570);
                                lv_guards_2_0 = ruleTypeGuards();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTypeSigRule());
                                    }
                                    set(current, "guards", lv_guards_2_0,
                                            "TypeGuards");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTypeSig"

    // $ANTLR start "entryRuleFunType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8047:1:
    // entryRuleFunType returns [EObject current=null] : iv_ruleFunType=
    // ruleFunType EOF ;
    public final EObject entryRuleFunType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunType = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8048:2:
            // (iv_ruleFunType= ruleFunType EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8049:2:
            // iv_ruleFunType= ruleFunType EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFunTypeRule());
                }
                pushFollow(FOLLOW_ruleFunType_in_entryRuleFunType18608);
                iv_ruleFunType = ruleFunType();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFunType;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFunType18618);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFunType"

    // $ANTLR start "ruleFunType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8056:1:
    // ruleFunType returns [EObject current=null] : (otherlv_0= '(' ( (
    // (lv_args_1_0= ruleTopType ) ) (otherlv_2= ',' ( (lv_args_3_0= ruleTopType
    // ) ) )* )? otherlv_4= ')' otherlv_5= '->' ( (lv_return_6_0= ruleTopType )
    // ) ) ;
    public final EObject ruleFunType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        Token otherlv_5 = null;
        EObject lv_args_1_0 = null;

        EObject lv_args_3_0 = null;

        EObject lv_return_6_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8059:28:
            // ( (otherlv_0= '(' ( ( (lv_args_1_0= ruleTopType ) ) (otherlv_2=
            // ',' ( (lv_args_3_0= ruleTopType ) ) )* )? otherlv_4= ')'
            // otherlv_5= '->' ( (lv_return_6_0= ruleTopType ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8060:1:
            // (otherlv_0= '(' ( ( (lv_args_1_0= ruleTopType ) ) (otherlv_2= ','
            // ( (lv_args_3_0= ruleTopType ) ) )* )? otherlv_4= ')' otherlv_5=
            // '->' ( (lv_return_6_0= ruleTopType ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8060:1:
                // (otherlv_0= '(' ( ( (lv_args_1_0= ruleTopType ) ) (otherlv_2=
                // ',' ( (lv_args_3_0= ruleTopType ) ) )* )? otherlv_4= ')'
                // otherlv_5= '->' ( (lv_return_6_0= ruleTopType ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8060:3:
                // otherlv_0= '(' ( ( (lv_args_1_0= ruleTopType ) ) (otherlv_2=
                // ',' ( (lv_args_3_0= ruleTopType ) ) )* )? otherlv_4= ')'
                // otherlv_5= '->' ( (lv_return_6_0= ruleTopType ) )
                {
                    otherlv_0 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleFunType18655);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess.getFunTypeAccess()
                                .getLeftParenthesisKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8064:1:
                    // ( ( (lv_args_1_0= ruleTopType ) ) (otherlv_2= ',' (
                    // (lv_args_3_0= ruleTopType ) ) )* )?
                    int alt133 = 2;
                    final int LA133_0 = input.LA(1);

                    if (LA133_0 == RULE_ATOM || LA133_0 >= RULE_VARIABLE
                            && LA133_0 <= RULE_BASED_INT || LA133_0 >= 19
                            && LA133_0 <= 21 || LA133_0 >= 24 && LA133_0 <= 35
                            || LA133_0 >= 39 && LA133_0 <= 40 || LA133_0 >= 42
                            && LA133_0 <= 45 || LA133_0 >= 47 && LA133_0 <= 48
                            || LA133_0 >= 51 && LA133_0 <= 52 || LA133_0 == 56
                            || LA133_0 == 68 || LA133_0 == 73 || LA133_0 == 77
                            || LA133_0 >= 89 && LA133_0 <= 90 || LA133_0 == 102) {
                        alt133 = 1;
                    }
                    switch (alt133) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8064:2:
                    // ( (lv_args_1_0= ruleTopType ) ) (otherlv_2= ',' (
                    // (lv_args_3_0= ruleTopType ) ) )*
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8064:2:
                        // ( (lv_args_1_0= ruleTopType ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8065:1:
                        // (lv_args_1_0= ruleTopType )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8065:1:
                            // (lv_args_1_0= ruleTopType )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8066:3:
                            // lv_args_1_0= ruleTopType
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getFunTypeAccess()
                                            .getArgsTopTypeParserRuleCall_1_0_0());

                                }
                                pushFollow(FOLLOW_ruleTopType_in_ruleFunType18677);
                                lv_args_1_0 = ruleTopType();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getFunTypeRule());
                                    }
                                    add(current, "args", lv_args_1_0, "TopType");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8082:2:
                        // (otherlv_2= ',' ( (lv_args_3_0= ruleTopType ) ) )*
                        loop132:
                        do {
                            int alt132 = 2;
                            final int LA132_0 = input.LA(1);

                            if (LA132_0 == 22) {
                                alt132 = 1;
                            }

                            switch (alt132) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8082:4:
                            // otherlv_2= ',' ( (lv_args_3_0= ruleTopType ) )
                            {
                                otherlv_2 = (Token) match(input, 22,
                                        FOLLOW_22_in_ruleFunType18690);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_2, grammarAccess
                                            .getFunTypeAccess()
                                            .getCommaKeyword_1_1_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8086:1:
                                // ( (lv_args_3_0= ruleTopType ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8087:1:
                                // (lv_args_3_0= ruleTopType )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8087:1:
                                    // (lv_args_3_0= ruleTopType )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8088:3:
                                    // lv_args_3_0= ruleTopType
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getFunTypeAccess()
                                                    .getArgsTopTypeParserRuleCall_1_1_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleTopType_in_ruleFunType18711);
                                        lv_args_3_0 = ruleTopType();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getFunTypeRule());
                                            }
                                            add(current, "args", lv_args_3_0,
                                                    "TopType");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                break loop132;
                            }
                        } while (true);

                    }
                        break;

                    }

                    otherlv_4 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleFunType18727);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_4, grammarAccess.getFunTypeAccess()
                                .getRightParenthesisKeyword_2());

                    }
                    otherlv_5 = (Token) match(input, 50,
                            FOLLOW_50_in_ruleFunType18739);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_5, grammarAccess.getFunTypeAccess()
                                .getHyphenMinusGreaterThanSignKeyword_3());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8112:1:
                    // ( (lv_return_6_0= ruleTopType ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8113:1:
                    // (lv_return_6_0= ruleTopType )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8113:1:
                        // (lv_return_6_0= ruleTopType )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8114:3:
                        // lv_return_6_0= ruleTopType
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunTypeAccess()
                                        .getReturnTopTypeParserRuleCall_4_0());

                            }
                            pushFollow(FOLLOW_ruleTopType_in_ruleFunType18760);
                            lv_return_6_0 = ruleTopType();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFunTypeRule());
                                }
                                set(current, "return", lv_return_6_0, "TopType");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFunType"

    // $ANTLR start "entryRuleTypeGuards"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8138:1:
    // entryRuleTypeGuards returns [EObject current=null] : iv_ruleTypeGuards=
    // ruleTypeGuards EOF ;
    public final EObject entryRuleTypeGuards() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeGuards = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8139:2:
            // (iv_ruleTypeGuards= ruleTypeGuards EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8140:2:
            // iv_ruleTypeGuards= ruleTypeGuards EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTypeGuardsRule());
                }
                pushFollow(FOLLOW_ruleTypeGuards_in_entryRuleTypeGuards18796);
                iv_ruleTypeGuards = ruleTypeGuards();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTypeGuards;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTypeGuards18806);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTypeGuards"

    // $ANTLR start "ruleTypeGuards"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8147:1:
    // ruleTypeGuards returns [EObject current=null] : ( ( (lv_items_0_0=
    // ruleTypeGuard ) ) (otherlv_1= ',' ( (lv_items_2_0= ruleTypeGuard ) ) )* )
    // ;
    public final EObject ruleTypeGuards() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_items_0_0 = null;

        EObject lv_items_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8150:28:
            // ( ( ( (lv_items_0_0= ruleTypeGuard ) ) (otherlv_1= ',' (
            // (lv_items_2_0= ruleTypeGuard ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8151:1:
            // ( ( (lv_items_0_0= ruleTypeGuard ) ) (otherlv_1= ',' (
            // (lv_items_2_0= ruleTypeGuard ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8151:1:
                // ( ( (lv_items_0_0= ruleTypeGuard ) ) (otherlv_1= ',' (
                // (lv_items_2_0= ruleTypeGuard ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8151:2:
                // ( (lv_items_0_0= ruleTypeGuard ) ) (otherlv_1= ',' (
                // (lv_items_2_0= ruleTypeGuard ) ) )*
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8151:2:
                    // ( (lv_items_0_0= ruleTypeGuard ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8152:1:
                    // (lv_items_0_0= ruleTypeGuard )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8152:1:
                        // (lv_items_0_0= ruleTypeGuard )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8153:3:
                        // lv_items_0_0= ruleTypeGuard
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getTypeGuardsAccess()
                                        .getItemsTypeGuardParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleTypeGuard_in_ruleTypeGuards18852);
                            lv_items_0_0 = ruleTypeGuard();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getTypeGuardsRule());
                                }
                                add(current, "items", lv_items_0_0, "TypeGuard");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8169:2:
                    // (otherlv_1= ',' ( (lv_items_2_0= ruleTypeGuard ) ) )*
                    loop134:
                    do {
                        int alt134 = 2;
                        final int LA134_0 = input.LA(1);

                        if (LA134_0 == 22) {
                            alt134 = 1;
                        }

                        switch (alt134) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8169:4:
                        // otherlv_1= ',' ( (lv_items_2_0= ruleTypeGuard ) )
                        {
                            otherlv_1 = (Token) match(input, 22,
                                    FOLLOW_22_in_ruleTypeGuards18865);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_1, grammarAccess
                                        .getTypeGuardsAccess()
                                        .getCommaKeyword_1_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8173:1:
                            // ( (lv_items_2_0= ruleTypeGuard ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8174:1:
                            // (lv_items_2_0= ruleTypeGuard )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8174:1:
                                // (lv_items_2_0= ruleTypeGuard )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8175:3:
                                // lv_items_2_0= ruleTypeGuard
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeGuardsAccess()
                                                .getItemsTypeGuardParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleTypeGuard_in_ruleTypeGuards18886);
                                    lv_items_2_0 = ruleTypeGuard();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeGuardsRule());
                                        }
                                        add(current, "items", lv_items_2_0,
                                                "TypeGuard");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop134;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTypeGuards"

    // $ANTLR start "entryRuleTypeGuard"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8199:1:
    // entryRuleTypeGuard returns [EObject current=null] : iv_ruleTypeGuard=
    // ruleTypeGuard EOF ;
    public final EObject entryRuleTypeGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeGuard = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8200:2:
            // (iv_ruleTypeGuard= ruleTypeGuard EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8201:2:
            // iv_ruleTypeGuard= ruleTypeGuard EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTypeGuardRule());
                }
                pushFollow(FOLLOW_ruleTypeGuard_in_entryRuleTypeGuard18924);
                iv_ruleTypeGuard = ruleTypeGuard();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTypeGuard;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTypeGuard18934);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTypeGuard"

    // $ANTLR start "ruleTypeGuard"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8208:1:
    // ruleTypeGuard returns [EObject current=null] : ( ( ( (lv_typeName_0_0=
    // ruleTypeRef ) ) otherlv_1= '(' ( (lv_types_2_0= ruleTopType ) )
    // (otherlv_3= ',' ( (lv_types_4_0= ruleTopType ) ) )* otherlv_5= ')' ) | (
    // ( (lv_typeName_6_0= ruleVariableLiteral ) ) otherlv_7= '::' (
    // (lv_type_8_0= ruleTopType ) ) ) ) ;
    public final EObject ruleTypeGuard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_3 = null;
        Token otherlv_5 = null;
        Token otherlv_7 = null;
        EObject lv_typeName_0_0 = null;

        EObject lv_types_2_0 = null;

        EObject lv_types_4_0 = null;

        EObject lv_typeName_6_0 = null;

        EObject lv_type_8_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8211:28:
            // ( ( ( ( (lv_typeName_0_0= ruleTypeRef ) ) otherlv_1= '(' (
            // (lv_types_2_0= ruleTopType ) ) (otherlv_3= ',' ( (lv_types_4_0=
            // ruleTopType ) ) )* otherlv_5= ')' ) | ( ( (lv_typeName_6_0=
            // ruleVariableLiteral ) ) otherlv_7= '::' ( (lv_type_8_0=
            // ruleTopType ) ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8212:1:
            // ( ( ( (lv_typeName_0_0= ruleTypeRef ) ) otherlv_1= '(' (
            // (lv_types_2_0= ruleTopType ) ) (otherlv_3= ',' ( (lv_types_4_0=
            // ruleTopType ) ) )* otherlv_5= ')' ) | ( ( (lv_typeName_6_0=
            // ruleVariableLiteral ) ) otherlv_7= '::' ( (lv_type_8_0=
            // ruleTopType ) ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8212:1:
                // ( ( ( (lv_typeName_0_0= ruleTypeRef ) ) otherlv_1= '(' (
                // (lv_types_2_0= ruleTopType ) ) (otherlv_3= ',' (
                // (lv_types_4_0= ruleTopType ) ) )* otherlv_5= ')' ) | ( (
                // (lv_typeName_6_0= ruleVariableLiteral ) ) otherlv_7= '::' (
                // (lv_type_8_0= ruleTopType ) ) ) )
                int alt136 = 2;
                final int LA136_0 = input.LA(1);

                if (LA136_0 == RULE_ATOM || LA136_0 == 20 || LA136_0 >= 24
                        && LA136_0 <= 34 || LA136_0 == 39 || LA136_0 >= 42
                        && LA136_0 <= 45 || LA136_0 >= 47 && LA136_0 <= 48
                        || LA136_0 == 52) {
                    alt136 = 1;
                } else if (LA136_0 == RULE_VARIABLE) {
                    alt136 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 136, 0, input);

                    throw nvae;
                }
                switch (alt136) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8212:2:
                // ( ( (lv_typeName_0_0= ruleTypeRef ) ) otherlv_1= '(' (
                // (lv_types_2_0= ruleTopType ) ) (otherlv_3= ',' (
                // (lv_types_4_0= ruleTopType ) ) )* otherlv_5= ')' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8212:2:
                    // ( ( (lv_typeName_0_0= ruleTypeRef ) ) otherlv_1= '(' (
                    // (lv_types_2_0= ruleTopType ) ) (otherlv_3= ',' (
                    // (lv_types_4_0= ruleTopType ) ) )* otherlv_5= ')' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8212:3:
                    // ( (lv_typeName_0_0= ruleTypeRef ) ) otherlv_1= '(' (
                    // (lv_types_2_0= ruleTopType ) ) (otherlv_3= ',' (
                    // (lv_types_4_0= ruleTopType ) ) )* otherlv_5= ')'
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8212:3:
                        // ( (lv_typeName_0_0= ruleTypeRef ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8213:1:
                        // (lv_typeName_0_0= ruleTypeRef )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8213:1:
                            // (lv_typeName_0_0= ruleTypeRef )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8214:3:
                            // lv_typeName_0_0= ruleTypeRef
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTypeGuardAccess()
                                            .getTypeNameTypeRefParserRuleCall_0_0_0());

                                }
                                pushFollow(FOLLOW_ruleTypeRef_in_ruleTypeGuard18981);
                                lv_typeName_0_0 = ruleTypeRef();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTypeGuardRule());
                                    }
                                    set(current, "typeName", lv_typeName_0_0,
                                            "TypeRef");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        otherlv_1 = (Token) match(input, 21,
                                FOLLOW_21_in_ruleTypeGuard18993);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getTypeGuardAccess()
                                    .getLeftParenthesisKeyword_0_1());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8234:1:
                        // ( (lv_types_2_0= ruleTopType ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8235:1:
                        // (lv_types_2_0= ruleTopType )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8235:1:
                            // (lv_types_2_0= ruleTopType )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8236:3:
                            // lv_types_2_0= ruleTopType
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTypeGuardAccess()
                                            .getTypesTopTypeParserRuleCall_0_2_0());

                                }
                                pushFollow(FOLLOW_ruleTopType_in_ruleTypeGuard19014);
                                lv_types_2_0 = ruleTopType();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTypeGuardRule());
                                    }
                                    add(current, "types", lv_types_2_0,
                                            "TopType");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8252:2:
                        // (otherlv_3= ',' ( (lv_types_4_0= ruleTopType ) ) )*
                        loop135:
                        do {
                            int alt135 = 2;
                            final int LA135_0 = input.LA(1);

                            if (LA135_0 == 22) {
                                alt135 = 1;
                            }

                            switch (alt135) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8252:4:
                            // otherlv_3= ',' ( (lv_types_4_0= ruleTopType ) )
                            {
                                otherlv_3 = (Token) match(input, 22,
                                        FOLLOW_22_in_ruleTypeGuard19027);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_3, grammarAccess
                                            .getTypeGuardAccess()
                                            .getCommaKeyword_0_3_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8256:1:
                                // ( (lv_types_4_0= ruleTopType ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8257:1:
                                // (lv_types_4_0= ruleTopType )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8257:1:
                                    // (lv_types_4_0= ruleTopType )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8258:3:
                                    // lv_types_4_0= ruleTopType
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getTypeGuardAccess()
                                                    .getTypesTopTypeParserRuleCall_0_3_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleTopType_in_ruleTypeGuard19048);
                                        lv_types_4_0 = ruleTopType();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getTypeGuardRule());
                                            }
                                            add(current, "types", lv_types_4_0,
                                                    "TopType");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            default:
                                break loop135;
                            }
                        } while (true);

                        otherlv_5 = (Token) match(input, 23,
                                FOLLOW_23_in_ruleTypeGuard19062);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_5, grammarAccess
                                    .getTypeGuardAccess()
                                    .getRightParenthesisKeyword_0_4());

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8279:6:
                // ( ( (lv_typeName_6_0= ruleVariableLiteral ) ) otherlv_7= '::'
                // ( (lv_type_8_0= ruleTopType ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8279:6:
                    // ( ( (lv_typeName_6_0= ruleVariableLiteral ) ) otherlv_7=
                    // '::' ( (lv_type_8_0= ruleTopType ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8279:7:
                    // ( (lv_typeName_6_0= ruleVariableLiteral ) ) otherlv_7=
                    // '::' ( (lv_type_8_0= ruleTopType ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8279:7:
                        // ( (lv_typeName_6_0= ruleVariableLiteral ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8280:1:
                        // (lv_typeName_6_0= ruleVariableLiteral )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8280:1:
                            // (lv_typeName_6_0= ruleVariableLiteral )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8281:3:
                            // lv_typeName_6_0= ruleVariableLiteral
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTypeGuardAccess()
                                            .getTypeNameVariableLiteralParserRuleCall_1_0_0());

                                }
                                pushFollow(FOLLOW_ruleVariableLiteral_in_ruleTypeGuard19091);
                                lv_typeName_6_0 = ruleVariableLiteral();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTypeGuardRule());
                                    }
                                    set(current, "typeName", lv_typeName_6_0,
                                            "VariableLiteral");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        otherlv_7 = (Token) match(input, 38,
                                FOLLOW_38_in_ruleTypeGuard19103);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_7, grammarAccess
                                    .getTypeGuardAccess()
                                    .getColonColonKeyword_1_1());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8301:1:
                        // ( (lv_type_8_0= ruleTopType ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8302:1:
                        // (lv_type_8_0= ruleTopType )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8302:1:
                            // (lv_type_8_0= ruleTopType )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8303:3:
                            // lv_type_8_0= ruleTopType
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTypeGuardAccess()
                                            .getTypeTopTypeParserRuleCall_1_2_0());

                                }
                                pushFollow(FOLLOW_ruleTopType_in_ruleTypeGuard19124);
                                lv_type_8_0 = ruleTopType();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTypeGuardRule());
                                    }
                                    set(current, "type", lv_type_8_0, "TopType");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTypeGuard"

    // $ANTLR start "entryRuleTopType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8327:1:
    // entryRuleTopType returns [EObject current=null] : iv_ruleTopType=
    // ruleTopType EOF ;
    public final EObject entryRuleTopType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopType = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8328:2:
            // (iv_ruleTopType= ruleTopType EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8329:2:
            // iv_ruleTopType= ruleTopType EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTopTypeRule());
                }
                pushFollow(FOLLOW_ruleTopType_in_entryRuleTopType19161);
                iv_ruleTopType = ruleTopType();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleTopType;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleTopType19171);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleTopType"

    // $ANTLR start "ruleTopType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8336:1:
    // ruleTopType returns [EObject current=null] : ( ( ( (lv_var_0_0=
    // RULE_VARIABLE ) ) otherlv_1= '::' )? ( (lv_type_2_0= ruleType100 ) ) ) ;
    public final EObject ruleTopType() throws RecognitionException {
        EObject current = null;

        Token lv_var_0_0 = null;
        Token otherlv_1 = null;
        EObject lv_type_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8339:28:
            // ( ( ( ( (lv_var_0_0= RULE_VARIABLE ) ) otherlv_1= '::' )? (
            // (lv_type_2_0= ruleType100 ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8340:1:
            // ( ( ( (lv_var_0_0= RULE_VARIABLE ) ) otherlv_1= '::' )? (
            // (lv_type_2_0= ruleType100 ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8340:1:
                // ( ( ( (lv_var_0_0= RULE_VARIABLE ) ) otherlv_1= '::' )? (
                // (lv_type_2_0= ruleType100 ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8340:2:
                // ( ( (lv_var_0_0= RULE_VARIABLE ) ) otherlv_1= '::' )? (
                // (lv_type_2_0= ruleType100 ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8340:2:
                    // ( ( (lv_var_0_0= RULE_VARIABLE ) ) otherlv_1= '::' )?
                    int alt137 = 2;
                    final int LA137_0 = input.LA(1);

                    if (LA137_0 == RULE_VARIABLE) {
                        final int LA137_1 = input.LA(2);

                        if (LA137_1 == 38) {
                            alt137 = 1;
                        }
                    }
                    switch (alt137) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8340:3:
                    // ( (lv_var_0_0= RULE_VARIABLE ) ) otherlv_1= '::'
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8340:3:
                        // ( (lv_var_0_0= RULE_VARIABLE ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8341:1:
                        // (lv_var_0_0= RULE_VARIABLE )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8341:1:
                            // (lv_var_0_0= RULE_VARIABLE )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8342:3:
                            // lv_var_0_0= RULE_VARIABLE
                            {
                                lv_var_0_0 = (Token) match(input,
                                        RULE_VARIABLE,
                                        FOLLOW_RULE_VARIABLE_in_ruleTopType19214);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(
                                            lv_var_0_0,
                                            grammarAccess
                                                    .getTopTypeAccess()
                                                    .getVarVARIABLETerminalRuleCall_0_0_0());

                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElement(grammarAccess
                                                .getTopTypeRule());
                                    }
                                    setWithLastConsumed(current, "var",
                                            lv_var_0_0, "VARIABLE");

                                }

                            }

                        }

                        otherlv_1 = (Token) match(input, 38,
                                FOLLOW_38_in_ruleTopType19231);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_1, grammarAccess
                                    .getTopTypeAccess()
                                    .getColonColonKeyword_0_1());

                        }

                    }
                        break;

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8362:3:
                    // ( (lv_type_2_0= ruleType100 ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8363:1:
                    // (lv_type_2_0= ruleType100 )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8363:1:
                        // (lv_type_2_0= ruleType100 )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8364:3:
                        // lv_type_2_0= ruleType100
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getTopTypeAccess()
                                        .getTypeType100ParserRuleCall_1_0());

                            }
                            pushFollow(FOLLOW_ruleType100_in_ruleTopType19254);
                            lv_type_2_0 = ruleType100();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getTopTypeRule());
                                }
                                set(current, "type", lv_type_2_0, "Type100");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleTopType"

    // $ANTLR start "entryRuleType100"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8388:1:
    // entryRuleType100 returns [EObject current=null] : iv_ruleType100=
    // ruleType100 EOF ;
    public final EObject entryRuleType100() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType100 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8389:2:
            // (iv_ruleType100= ruleType100 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8390:2:
            // iv_ruleType100= ruleType100 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getType100Rule());
                }
                pushFollow(FOLLOW_ruleType100_in_entryRuleType10019290);
                iv_ruleType100 = ruleType100();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleType100;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleType10019300);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleType100"

    // $ANTLR start "ruleType100"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8397:1:
    // ruleType100 returns [EObject current=null] : (this_Type200_0= ruleType200
    // ( ( ( ( () ( ( '|' ) ) ) )=> ( () ( (lv_op_2_0= '|' ) ) ) ) (
    // (lv_rightOperand_3_0= ruleType200 ) ) )* ) ;
    public final EObject ruleType100() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0 = null;
        EObject this_Type200_0 = null;

        EObject lv_rightOperand_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8400:28:
            // ( (this_Type200_0= ruleType200 ( ( ( ( () ( ( '|' ) ) ) )=> ( ()
            // ( (lv_op_2_0= '|' ) ) ) ) ( (lv_rightOperand_3_0= ruleType200 ) )
            // )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8401:1:
            // (this_Type200_0= ruleType200 ( ( ( ( () ( ( '|' ) ) ) )=> ( () (
            // (lv_op_2_0= '|' ) ) ) ) ( (lv_rightOperand_3_0= ruleType200 ) )
            // )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8401:1:
                // (this_Type200_0= ruleType200 ( ( ( ( () ( ( '|' ) ) ) )=> (
                // () ( (lv_op_2_0= '|' ) ) ) ) ( (lv_rightOperand_3_0=
                // ruleType200 ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8402:5:
                // this_Type200_0= ruleType200 ( ( ( ( () ( ( '|' ) ) ) )=> ( ()
                // ( (lv_op_2_0= '|' ) ) ) ) ( (lv_rightOperand_3_0= ruleType200
                // ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getType100Access()
                                .getType200ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleType200_in_ruleType10019347);
                    this_Type200_0 = ruleType200();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Type200_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:1:
                    // ( ( ( ( () ( ( '|' ) ) ) )=> ( () ( (lv_op_2_0= '|' ) ) )
                    // ) ( (lv_rightOperand_3_0= ruleType200 ) ) )*
                    loop138:
                    do {
                        int alt138 = 2;
                        final int LA138_0 = input.LA(1);

                        if (LA138_0 == 71 && synpred38_InternalErlang()) {
                            alt138 = 1;
                        }

                        switch (alt138) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:2:
                        // ( ( ( () ( ( '|' ) ) ) )=> ( () ( (lv_op_2_0= '|' ) )
                        // ) ) ( (lv_rightOperand_3_0= ruleType200 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:2:
                            // ( ( ( () ( ( '|' ) ) ) )=> ( () ( (lv_op_2_0= '|'
                            // ) ) ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:3:
                            // ( ( () ( ( '|' ) ) ) )=> ( () ( (lv_op_2_0= '|' )
                            // ) )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8417:6:
                                // ( () ( (lv_op_2_0= '|' ) ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8417:7:
                                // () ( (lv_op_2_0= '|' ) )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8417:7:
                                    // ()
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8418:5:
                                    {
                                        if (state.backtracking == 0) {

                                            current = forceCreateModelElementAndSet(
                                                    grammarAccess
                                                            .getType100Access()
                                                            .getTopTypeLeftOperandAction_1_0_0_0(),
                                                    current);

                                        }

                                    }

                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8423:2:
                                    // ( (lv_op_2_0= '|' ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8424:1:
                                    // (lv_op_2_0= '|' )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8424:1:
                                        // (lv_op_2_0= '|' )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8425:3:
                                        // lv_op_2_0= '|'
                                        {
                                            lv_op_2_0 = (Token) match(input,
                                                    71,
                                                    FOLLOW_71_in_ruleType10019398);
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                newLeafNode(
                                                        lv_op_2_0,
                                                        grammarAccess
                                                                .getType100Access()
                                                                .getOpVerticalLineKeyword_1_0_0_1_0());

                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElement(grammarAccess
                                                            .getType100Rule());
                                                }
                                                setWithLastConsumed(current,
                                                        "op", lv_op_2_0, "|");

                                            }

                                        }

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8438:4:
                            // ( (lv_rightOperand_3_0= ruleType200 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8439:1:
                            // (lv_rightOperand_3_0= ruleType200 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8439:1:
                                // (lv_rightOperand_3_0= ruleType200 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8440:3:
                                // lv_rightOperand_3_0= ruleType200
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getType100Access()
                                                .getRightOperandType200ParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleType200_in_ruleType10019434);
                                    lv_rightOperand_3_0 = ruleType200();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getType100Rule());
                                        }
                                        set(current, "rightOperand",
                                                lv_rightOperand_3_0, "Type200");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop138;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleType100"

    // $ANTLR start "entryRuleType200"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8464:1:
    // entryRuleType200 returns [EObject current=null] : iv_ruleType200=
    // ruleType200 EOF ;
    public final EObject entryRuleType200() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType200 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8465:2:
            // (iv_ruleType200= ruleType200 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8466:2:
            // iv_ruleType200= ruleType200 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getType200Rule());
                }
                pushFollow(FOLLOW_ruleType200_in_entryRuleType20019472);
                iv_ruleType200 = ruleType200();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleType200;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleType20019482);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleType200"

    // $ANTLR start "ruleType200"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8473:1:
    // ruleType200 returns [EObject current=null] : (this_Type300_0= ruleType300
    // ( ( ( ( () ( ( '..' ) ) ) )=> ( () ( (lv_op_2_0= '..' ) ) ) ) (
    // (lv_rightOperand_3_0= ruleType300 ) ) )* ) ;
    public final EObject ruleType200() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0 = null;
        EObject this_Type300_0 = null;

        EObject lv_rightOperand_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8476:28:
            // ( (this_Type300_0= ruleType300 ( ( ( ( () ( ( '..' ) ) ) )=> ( ()
            // ( (lv_op_2_0= '..' ) ) ) ) ( (lv_rightOperand_3_0= ruleType300 )
            // ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8477:1:
            // (this_Type300_0= ruleType300 ( ( ( ( () ( ( '..' ) ) ) )=> ( () (
            // (lv_op_2_0= '..' ) ) ) ) ( (lv_rightOperand_3_0= ruleType300 ) )
            // )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8477:1:
                // (this_Type300_0= ruleType300 ( ( ( ( () ( ( '..' ) ) ) )=> (
                // () ( (lv_op_2_0= '..' ) ) ) ) ( (lv_rightOperand_3_0=
                // ruleType300 ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8478:5:
                // this_Type300_0= ruleType300 ( ( ( ( () ( ( '..' ) ) ) )=> (
                // () ( (lv_op_2_0= '..' ) ) ) ) ( (lv_rightOperand_3_0=
                // ruleType300 ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getType200Access()
                                .getType300ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleType300_in_ruleType20019529);
                    this_Type300_0 = ruleType300();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Type300_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:1:
                    // ( ( ( ( () ( ( '..' ) ) ) )=> ( () ( (lv_op_2_0= '..' ) )
                    // ) ) ( (lv_rightOperand_3_0= ruleType300 ) ) )*
                    loop139:
                    do {
                        int alt139 = 2;
                        final int LA139_0 = input.LA(1);

                        if (LA139_0 == 103 && synpred39_InternalErlang()) {
                            alt139 = 1;
                        }

                        switch (alt139) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:2:
                        // ( ( ( () ( ( '..' ) ) ) )=> ( () ( (lv_op_2_0= '..' )
                        // ) ) ) ( (lv_rightOperand_3_0= ruleType300 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:2:
                            // ( ( ( () ( ( '..' ) ) ) )=> ( () ( (lv_op_2_0=
                            // '..' ) ) ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:3:
                            // ( ( () ( ( '..' ) ) ) )=> ( () ( (lv_op_2_0= '..'
                            // ) ) )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8493:6:
                                // ( () ( (lv_op_2_0= '..' ) ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8493:7:
                                // () ( (lv_op_2_0= '..' ) )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8493:7:
                                    // ()
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8494:5:
                                    {
                                        if (state.backtracking == 0) {

                                            current = forceCreateModelElementAndSet(
                                                    grammarAccess
                                                            .getType200Access()
                                                            .getTopTypeLeftOperandAction_1_0_0_0(),
                                                    current);

                                        }

                                    }

                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8499:2:
                                    // ( (lv_op_2_0= '..' ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8500:1:
                                    // (lv_op_2_0= '..' )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8500:1:
                                        // (lv_op_2_0= '..' )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8501:3:
                                        // lv_op_2_0= '..'
                                        {
                                            lv_op_2_0 = (Token) match(input,
                                                    103,
                                                    FOLLOW_103_in_ruleType20019580);
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                newLeafNode(
                                                        lv_op_2_0,
                                                        grammarAccess
                                                                .getType200Access()
                                                                .getOpFullStopFullStopKeyword_1_0_0_1_0());

                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElement(grammarAccess
                                                            .getType200Rule());
                                                }
                                                setWithLastConsumed(current,
                                                        "op", lv_op_2_0, "..");

                                            }

                                        }

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8514:4:
                            // ( (lv_rightOperand_3_0= ruleType300 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8515:1:
                            // (lv_rightOperand_3_0= ruleType300 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8515:1:
                                // (lv_rightOperand_3_0= ruleType300 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8516:3:
                                // lv_rightOperand_3_0= ruleType300
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getType200Access()
                                                .getRightOperandType300ParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleType300_in_ruleType20019616);
                                    lv_rightOperand_3_0 = ruleType300();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getType200Rule());
                                        }
                                        set(current, "rightOperand",
                                                lv_rightOperand_3_0, "Type300");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop139;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleType200"

    // $ANTLR start "entryRuleType300"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8540:1:
    // entryRuleType300 returns [EObject current=null] : iv_ruleType300=
    // ruleType300 EOF ;
    public final EObject entryRuleType300() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType300 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8541:2:
            // (iv_ruleType300= ruleType300 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8542:2:
            // iv_ruleType300= ruleType300 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getType300Rule());
                }
                pushFollow(FOLLOW_ruleType300_in_entryRuleType30019654);
                iv_ruleType300 = ruleType300();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleType300;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleType30019664);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleType300"

    // $ANTLR start "ruleType300"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8549:1:
    // ruleType300 returns [EObject current=null] : (this_Type400_0= ruleType400
    // ( ( ( ( () ( ( ruleADDOP ) ) ) )=> ( () ( (lv_op_2_0= ruleADDOP ) ) ) ) (
    // (lv_rightOperand_3_0= ruleType400 ) ) )* ) ;
    public final EObject ruleType300() throws RecognitionException {
        EObject current = null;

        EObject this_Type400_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rightOperand_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8552:28:
            // ( (this_Type400_0= ruleType400 ( ( ( ( () ( ( ruleADDOP ) ) ) )=>
            // ( () ( (lv_op_2_0= ruleADDOP ) ) ) ) ( (lv_rightOperand_3_0=
            // ruleType400 ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8553:1:
            // (this_Type400_0= ruleType400 ( ( ( ( () ( ( ruleADDOP ) ) ) )=> (
            // () ( (lv_op_2_0= ruleADDOP ) ) ) ) ( (lv_rightOperand_3_0=
            // ruleType400 ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8553:1:
                // (this_Type400_0= ruleType400 ( ( ( ( () ( ( ruleADDOP ) ) )
                // )=> ( () ( (lv_op_2_0= ruleADDOP ) ) ) ) (
                // (lv_rightOperand_3_0= ruleType400 ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8554:5:
                // this_Type400_0= ruleType400 ( ( ( ( () ( ( ruleADDOP ) ) )
                // )=> ( () ( (lv_op_2_0= ruleADDOP ) ) ) ) (
                // (lv_rightOperand_3_0= ruleType400 ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getType300Access()
                                .getType400ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleType400_in_ruleType30019711);
                    this_Type400_0 = ruleType400();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Type400_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:1:
                    // ( ( ( ( () ( ( ruleADDOP ) ) ) )=> ( () ( (lv_op_2_0=
                    // ruleADDOP ) ) ) ) ( (lv_rightOperand_3_0= ruleType400 ) )
                    // )*
                    loop140:
                    do {
                        int alt140 = 2;
                        alt140 = dfa140.predict(input);
                        switch (alt140) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:2:
                        // ( ( ( () ( ( ruleADDOP ) ) ) )=> ( () ( (lv_op_2_0=
                        // ruleADDOP ) ) ) ) ( (lv_rightOperand_3_0= ruleType400
                        // ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:2:
                            // ( ( ( () ( ( ruleADDOP ) ) ) )=> ( () (
                            // (lv_op_2_0= ruleADDOP ) ) ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:3:
                            // ( ( () ( ( ruleADDOP ) ) ) )=> ( () ( (lv_op_2_0=
                            // ruleADDOP ) ) )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8567:6:
                                // ( () ( (lv_op_2_0= ruleADDOP ) ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8567:7:
                                // () ( (lv_op_2_0= ruleADDOP ) )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8567:7:
                                    // ()
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8568:5:
                                    {
                                        if (state.backtracking == 0) {

                                            current = forceCreateModelElementAndSet(
                                                    grammarAccess
                                                            .getType300Access()
                                                            .getTopTypeLeftOperandAction_1_0_0_0(),
                                                    current);

                                        }

                                    }

                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8573:2:
                                    // ( (lv_op_2_0= ruleADDOP ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8574:1:
                                    // (lv_op_2_0= ruleADDOP )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8574:1:
                                        // (lv_op_2_0= ruleADDOP )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8575:3:
                                        // lv_op_2_0= ruleADDOP
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getType300Access()
                                                        .getOpADDOPParserRuleCall_1_0_0_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleADDOP_in_ruleType30019760);
                                            lv_op_2_0 = ruleADDOP();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getType300Rule());
                                                }
                                                set(current, "op", lv_op_2_0,
                                                        "ADDOP");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8591:4:
                            // ( (lv_rightOperand_3_0= ruleType400 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8592:1:
                            // (lv_rightOperand_3_0= ruleType400 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8592:1:
                                // (lv_rightOperand_3_0= ruleType400 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8593:3:
                                // lv_rightOperand_3_0= ruleType400
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getType300Access()
                                                .getRightOperandType400ParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleType400_in_ruleType30019783);
                                    lv_rightOperand_3_0 = ruleType400();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getType300Rule());
                                        }
                                        set(current, "rightOperand",
                                                lv_rightOperand_3_0, "Type400");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop140;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleType300"

    // $ANTLR start "entryRuleType400"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8617:1:
    // entryRuleType400 returns [EObject current=null] : iv_ruleType400=
    // ruleType400 EOF ;
    public final EObject entryRuleType400() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType400 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8618:2:
            // (iv_ruleType400= ruleType400 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8619:2:
            // iv_ruleType400= ruleType400 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getType400Rule());
                }
                pushFollow(FOLLOW_ruleType400_in_entryRuleType40019821);
                iv_ruleType400 = ruleType400();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleType400;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleType40019831);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleType400"

    // $ANTLR start "ruleType400"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8626:1:
    // ruleType400 returns [EObject current=null] : (this_Type500_0= ruleType500
    // ( ( ( ( () ( ( ruleMULTOP ) ) ) )=> ( () ( (lv_op_2_0= ruleMULTOP ) ) ) )
    // ( (lv_rightOperand_3_0= ruleType500 ) ) )* ) ;
    public final EObject ruleType400() throws RecognitionException {
        EObject current = null;

        EObject this_Type500_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rightOperand_3_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8629:28:
            // ( (this_Type500_0= ruleType500 ( ( ( ( () ( ( ruleMULTOP ) ) )
            // )=> ( () ( (lv_op_2_0= ruleMULTOP ) ) ) ) ( (lv_rightOperand_3_0=
            // ruleType500 ) ) )* ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8630:1:
            // (this_Type500_0= ruleType500 ( ( ( ( () ( ( ruleMULTOP ) ) ) )=>
            // ( () ( (lv_op_2_0= ruleMULTOP ) ) ) ) ( (lv_rightOperand_3_0=
            // ruleType500 ) ) )* )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8630:1:
                // (this_Type500_0= ruleType500 ( ( ( ( () ( ( ruleMULTOP ) ) )
                // )=> ( () ( (lv_op_2_0= ruleMULTOP ) ) ) ) (
                // (lv_rightOperand_3_0= ruleType500 ) ) )* )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8631:5:
                // this_Type500_0= ruleType500 ( ( ( ( () ( ( ruleMULTOP ) ) )
                // )=> ( () ( (lv_op_2_0= ruleMULTOP ) ) ) ) (
                // (lv_rightOperand_3_0= ruleType500 ) ) )*
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getType400Access()
                                .getType500ParserRuleCall_0());

                    }
                    pushFollow(FOLLOW_ruleType500_in_ruleType40019878);
                    this_Type500_0 = ruleType500();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Type500_0;
                        afterParserOrEnumRuleCall();

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:1:
                    // ( ( ( ( () ( ( ruleMULTOP ) ) ) )=> ( () ( (lv_op_2_0=
                    // ruleMULTOP ) ) ) ) ( (lv_rightOperand_3_0= ruleType500 )
                    // ) )*
                    loop141:
                    do {
                        int alt141 = 2;
                        final int LA141_0 = input.LA(1);

                        if (LA141_0 == 84 && synpred41_InternalErlang()) {
                            alt141 = 1;
                        } else if (LA141_0 == 69 && synpred41_InternalErlang()) {
                            alt141 = 1;
                        } else if (LA141_0 == 85 && synpred41_InternalErlang()) {
                            alt141 = 1;
                        } else if (LA141_0 == 86 && synpred41_InternalErlang()) {
                            alt141 = 1;
                        } else if (LA141_0 == 87 && synpred41_InternalErlang()) {
                            alt141 = 1;
                        } else if (LA141_0 == 88 && synpred41_InternalErlang()) {
                            alt141 = 1;
                        }

                        switch (alt141) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:2:
                        // ( ( ( () ( ( ruleMULTOP ) ) ) )=> ( () ( (lv_op_2_0=
                        // ruleMULTOP ) ) ) ) ( (lv_rightOperand_3_0=
                        // ruleType500 ) )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:2:
                            // ( ( ( () ( ( ruleMULTOP ) ) ) )=> ( () (
                            // (lv_op_2_0= ruleMULTOP ) ) ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:3:
                            // ( ( () ( ( ruleMULTOP ) ) ) )=> ( () (
                            // (lv_op_2_0= ruleMULTOP ) ) )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8644:6:
                                // ( () ( (lv_op_2_0= ruleMULTOP ) ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8644:7:
                                // () ( (lv_op_2_0= ruleMULTOP ) )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8644:7:
                                    // ()
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8645:5:
                                    {
                                        if (state.backtracking == 0) {

                                            current = forceCreateModelElementAndSet(
                                                    grammarAccess
                                                            .getType400Access()
                                                            .getTopTypeLeftOperandAction_1_0_0_0(),
                                                    current);

                                        }

                                    }

                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8650:2:
                                    // ( (lv_op_2_0= ruleMULTOP ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8651:1:
                                    // (lv_op_2_0= ruleMULTOP )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8651:1:
                                        // (lv_op_2_0= ruleMULTOP )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8652:3:
                                        // lv_op_2_0= ruleMULTOP
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getType400Access()
                                                        .getOpMULTOPParserRuleCall_1_0_0_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleMULTOP_in_ruleType40019927);
                                            lv_op_2_0 = ruleMULTOP();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getType400Rule());
                                                }
                                                set(current, "op", lv_op_2_0,
                                                        "MULTOP");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8668:4:
                            // ( (lv_rightOperand_3_0= ruleType500 ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8669:1:
                            // (lv_rightOperand_3_0= ruleType500 )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8669:1:
                                // (lv_rightOperand_3_0= ruleType500 )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8670:3:
                                // lv_rightOperand_3_0= ruleType500
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getType400Access()
                                                .getRightOperandType500ParserRuleCall_1_1_0());

                                    }
                                    pushFollow(FOLLOW_ruleType500_in_ruleType40019950);
                                    lv_rightOperand_3_0 = ruleType500();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getType400Rule());
                                        }
                                        set(current, "rightOperand",
                                                lv_rightOperand_3_0, "Type500");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                        }
                            break;

                        default:
                            break loop141;
                        }
                    } while (true);

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleType400"

    // $ANTLR start "entryRuleType500"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8694:1:
    // entryRuleType500 returns [EObject current=null] : iv_ruleType500=
    // ruleType500 EOF ;
    public final EObject entryRuleType500() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType500 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8695:2:
            // (iv_ruleType500= ruleType500 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8696:2:
            // iv_ruleType500= ruleType500 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getType500Rule());
                }
                pushFollow(FOLLOW_ruleType500_in_entryRuleType50019988);
                iv_ruleType500 = ruleType500();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleType500;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleType50019998);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleType500"

    // $ANTLR start "ruleType500"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8703:1:
    // ruleType500 returns [EObject current=null] : ( ( () ( (lv_op_1_0=
    // rulePREFIXOP ) ) ( (lv_operand_2_0= ruleType ) ) ) | this_Type_3=
    // ruleType ) ;
    public final EObject ruleType500() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_op_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_Type_3 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8706:28:
            // ( ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
            // ruleType ) ) ) | this_Type_3= ruleType ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8707:1:
            // ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0= ruleType
            // ) ) ) | this_Type_3= ruleType )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8707:1:
                // ( ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                // ruleType ) ) ) | this_Type_3= ruleType )
                int alt142 = 2;
                final int LA142_0 = input.LA(1);

                if (LA142_0 == 19 || LA142_0 == 77 || LA142_0 >= 89
                        && LA142_0 <= 90) {
                    alt142 = 1;
                } else if (LA142_0 == RULE_ATOM || LA142_0 >= RULE_VARIABLE
                        && LA142_0 <= RULE_BASED_INT || LA142_0 >= 20
                        && LA142_0 <= 21 || LA142_0 >= 24 && LA142_0 <= 35
                        || LA142_0 >= 39 && LA142_0 <= 40 || LA142_0 >= 42
                        && LA142_0 <= 45 || LA142_0 >= 47 && LA142_0 <= 48
                        || LA142_0 >= 51 && LA142_0 <= 52 || LA142_0 == 56
                        || LA142_0 == 68 || LA142_0 == 73 || LA142_0 == 102) {
                    alt142 = 2;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return current;
                    }
                    final NoViableAltException nvae = new NoViableAltException(
                            "", 142, 0, input);

                    throw nvae;
                }
                switch (alt142) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8707:2:
                // ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                // ruleType ) ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8707:2:
                    // ( () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                    // ruleType ) ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8707:3:
                    // () ( (lv_op_1_0= rulePREFIXOP ) ) ( (lv_operand_2_0=
                    // ruleType ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8707:3:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8708:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getType500Access()
                                        .getUnaryTypeAction_0_0(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8713:2:
                        // ( (lv_op_1_0= rulePREFIXOP ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8714:1:
                        // (lv_op_1_0= rulePREFIXOP )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8714:1:
                            // (lv_op_1_0= rulePREFIXOP )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8715:3:
                            // lv_op_1_0= rulePREFIXOP
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getType500Access()
                                            .getOpPREFIXOPParserRuleCall_0_1_0());

                                }
                                pushFollow(FOLLOW_rulePREFIXOP_in_ruleType50020054);
                                lv_op_1_0 = rulePREFIXOP();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getType500Rule());
                                    }
                                    set(current, "op", lv_op_1_0, "PREFIXOP");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8731:2:
                        // ( (lv_operand_2_0= ruleType ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8732:1:
                        // (lv_operand_2_0= ruleType )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8732:1:
                            // (lv_operand_2_0= ruleType )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8733:3:
                            // lv_operand_2_0= ruleType
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getType500Access()
                                            .getOperandTypeParserRuleCall_0_2_0());

                                }
                                pushFollow(FOLLOW_ruleType_in_ruleType50020075);
                                lv_operand_2_0 = ruleType();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getType500Rule());
                                    }
                                    set(current, "operand", lv_operand_2_0,
                                            "Type");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8751:5:
                // this_Type_3= ruleType
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getType500Access()
                                .getTypeParserRuleCall_1());

                    }
                    pushFollow(FOLLOW_ruleType_in_ruleType50020104);
                    this_Type_3 = ruleType();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_Type_3;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleType500"

    // $ANTLR start "entryRuleType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8767:1:
    // entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF
    // ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8768:2:
            // (iv_ruleType= ruleType EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8769:2:
            // iv_ruleType= ruleType EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getTypeRule());
                }
                pushFollow(FOLLOW_ruleType_in_entryRuleType20139);
                iv_ruleType = ruleType();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleType;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleType20149);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleType"

    // $ANTLR start "ruleType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8776:1:
    // ruleType returns [EObject current=null] : ( (otherlv_0= '('
    // this_TopType_1= ruleTopType otherlv_2= ')' ) | ( () ( ( (lv_m_4_0=
    // ruleModuleVarMacro ) ) otherlv_5= ':' )? ( (lv_typeName_6_0= ruleTypeRef
    // ) ) (otherlv_7= '(' ( ( (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' (
    // (lv_args_10_0= ruleTopType ) ) )* )? otherlv_11= ')' )? ) | (
    // (lv_typeName_12_0= ruleVariableLiteral ) ) | ( (lv_value_13_0=
    // ruleINTEGER ) ) | (otherlv_14= '[' () ( ( (lv_type_16_0= ruleTopType ) )
    // (otherlv_17= ',' otherlv_18= '...' )? )? otherlv_19= ']' ) | (otherlv_20=
    // '{' () ( ( (lv_types_22_0= ruleTopType ) ) (otherlv_23= ',' (
    // (lv_types_24_0= ruleTopType ) ) )* )? otherlv_25= '}' ) | (otherlv_26=
    // '#' () ( (lv_rec_28_0= ruleRecordRef ) ) otherlv_29= '{' ( (
    // (lv_fields_30_0= ruleFieldType ) ) (otherlv_31= ',' ( (lv_fields_32_0=
    // ruleFieldType ) ) )* )? otherlv_33= '}' ) | this_BinaryType_34=
    // ruleBinaryType | (otherlv_35= 'fun' () otherlv_37= '(' ( (lv_type_38_0=
    // ruleFunType100 ) )? otherlv_39= ')' ) ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_2 = null;
        Token otherlv_5 = null;
        Token otherlv_7 = null;
        Token otherlv_9 = null;
        Token otherlv_11 = null;
        Token otherlv_14 = null;
        Token otherlv_17 = null;
        Token otherlv_18 = null;
        Token otherlv_19 = null;
        Token otherlv_20 = null;
        Token otherlv_23 = null;
        Token otherlv_25 = null;
        Token otherlv_26 = null;
        Token otherlv_29 = null;
        Token otherlv_31 = null;
        Token otherlv_33 = null;
        Token otherlv_35 = null;
        Token otherlv_37 = null;
        Token otherlv_39 = null;
        EObject this_TopType_1 = null;

        EObject lv_m_4_0 = null;

        EObject lv_typeName_6_0 = null;

        EObject lv_args_8_0 = null;

        EObject lv_args_10_0 = null;

        EObject lv_typeName_12_0 = null;

        AntlrDatatypeRuleToken lv_value_13_0 = null;

        EObject lv_type_16_0 = null;

        EObject lv_types_22_0 = null;

        EObject lv_types_24_0 = null;

        EObject lv_rec_28_0 = null;

        EObject lv_fields_30_0 = null;

        EObject lv_fields_32_0 = null;

        EObject this_BinaryType_34 = null;

        EObject lv_type_38_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8779:28:
            // ( ( (otherlv_0= '(' this_TopType_1= ruleTopType otherlv_2= ')' )
            // | ( () ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':' )? (
            // (lv_typeName_6_0= ruleTypeRef ) ) (otherlv_7= '(' ( (
            // (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' ( (lv_args_10_0=
            // ruleTopType ) ) )* )? otherlv_11= ')' )? ) | ( (lv_typeName_12_0=
            // ruleVariableLiteral ) ) | ( (lv_value_13_0= ruleINTEGER ) ) |
            // (otherlv_14= '[' () ( ( (lv_type_16_0= ruleTopType ) )
            // (otherlv_17= ',' otherlv_18= '...' )? )? otherlv_19= ']' ) |
            // (otherlv_20= '{' () ( ( (lv_types_22_0= ruleTopType ) )
            // (otherlv_23= ',' ( (lv_types_24_0= ruleTopType ) ) )* )?
            // otherlv_25= '}' ) | (otherlv_26= '#' () ( (lv_rec_28_0=
            // ruleRecordRef ) ) otherlv_29= '{' ( ( (lv_fields_30_0=
            // ruleFieldType ) ) (otherlv_31= ',' ( (lv_fields_32_0=
            // ruleFieldType ) ) )* )? otherlv_33= '}' ) | this_BinaryType_34=
            // ruleBinaryType | (otherlv_35= 'fun' () otherlv_37= '(' (
            // (lv_type_38_0= ruleFunType100 ) )? otherlv_39= ')' ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8780:1:
            // ( (otherlv_0= '(' this_TopType_1= ruleTopType otherlv_2= ')' ) |
            // ( () ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':' )? (
            // (lv_typeName_6_0= ruleTypeRef ) ) (otherlv_7= '(' ( (
            // (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' ( (lv_args_10_0=
            // ruleTopType ) ) )* )? otherlv_11= ')' )? ) | ( (lv_typeName_12_0=
            // ruleVariableLiteral ) ) | ( (lv_value_13_0= ruleINTEGER ) ) |
            // (otherlv_14= '[' () ( ( (lv_type_16_0= ruleTopType ) )
            // (otherlv_17= ',' otherlv_18= '...' )? )? otherlv_19= ']' ) |
            // (otherlv_20= '{' () ( ( (lv_types_22_0= ruleTopType ) )
            // (otherlv_23= ',' ( (lv_types_24_0= ruleTopType ) ) )* )?
            // otherlv_25= '}' ) | (otherlv_26= '#' () ( (lv_rec_28_0=
            // ruleRecordRef ) ) otherlv_29= '{' ( ( (lv_fields_30_0=
            // ruleFieldType ) ) (otherlv_31= ',' ( (lv_fields_32_0=
            // ruleFieldType ) ) )* )? otherlv_33= '}' ) | this_BinaryType_34=
            // ruleBinaryType | (otherlv_35= 'fun' () otherlv_37= '(' (
            // (lv_type_38_0= ruleFunType100 ) )? otherlv_39= ')' ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8780:1:
                // ( (otherlv_0= '(' this_TopType_1= ruleTopType otherlv_2= ')'
                // ) | ( () ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':'
                // )? ( (lv_typeName_6_0= ruleTypeRef ) ) (otherlv_7= '(' ( (
                // (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' (
                // (lv_args_10_0= ruleTopType ) ) )* )? otherlv_11= ')' )? ) | (
                // (lv_typeName_12_0= ruleVariableLiteral ) ) | (
                // (lv_value_13_0= ruleINTEGER ) ) | (otherlv_14= '[' () ( (
                // (lv_type_16_0= ruleTopType ) ) (otherlv_17= ',' otherlv_18=
                // '...' )? )? otherlv_19= ']' ) | (otherlv_20= '{' () ( (
                // (lv_types_22_0= ruleTopType ) ) (otherlv_23= ',' (
                // (lv_types_24_0= ruleTopType ) ) )* )? otherlv_25= '}' ) |
                // (otherlv_26= '#' () ( (lv_rec_28_0= ruleRecordRef ) )
                // otherlv_29= '{' ( ( (lv_fields_30_0= ruleFieldType ) )
                // (otherlv_31= ',' ( (lv_fields_32_0= ruleFieldType ) ) )* )?
                // otherlv_33= '}' ) | this_BinaryType_34= ruleBinaryType |
                // (otherlv_35= 'fun' () otherlv_37= '(' ( (lv_type_38_0=
                // ruleFunType100 ) )? otherlv_39= ')' ) )
                int alt154 = 9;
                alt154 = dfa154.predict(input);
                switch (alt154) {
                case 1:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8780:2:
                // (otherlv_0= '(' this_TopType_1= ruleTopType otherlv_2= ')' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8780:2:
                    // (otherlv_0= '(' this_TopType_1= ruleTopType otherlv_2=
                    // ')' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8780:4:
                    // otherlv_0= '(' this_TopType_1= ruleTopType otherlv_2= ')'
                    {
                        otherlv_0 = (Token) match(input, 21,
                                FOLLOW_21_in_ruleType20187);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_0, grammarAccess
                                    .getTypeAccess()
                                    .getLeftParenthesisKeyword_0_0());

                        }
                        if (state.backtracking == 0) {

                            newCompositeNode(grammarAccess.getTypeAccess()
                                    .getTopTypeParserRuleCall_0_1());

                        }
                        pushFollow(FOLLOW_ruleTopType_in_ruleType20209);
                        this_TopType_1 = ruleTopType();

                        state._fsp--;
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            current = this_TopType_1;
                            afterParserOrEnumRuleCall();

                        }
                        otherlv_2 = (Token) match(input, 23,
                                FOLLOW_23_in_ruleType20220);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_2, grammarAccess
                                    .getTypeAccess()
                                    .getRightParenthesisKeyword_0_2());

                        }

                    }

                }
                break;
                case 2:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8798:6:
                // ( () ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':' )?
                // ( (lv_typeName_6_0= ruleTypeRef ) ) (otherlv_7= '(' ( (
                // (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' (
                // (lv_args_10_0= ruleTopType ) ) )* )? otherlv_11= ')' )? )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8798:6:
                    // ( () ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':'
                    // )? ( (lv_typeName_6_0= ruleTypeRef ) ) (otherlv_7= '(' (
                    // ( (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' (
                    // (lv_args_10_0= ruleTopType ) ) )* )? otherlv_11= ')' )? )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8798:7:
                    // () ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':'
                    // )? ( (lv_typeName_6_0= ruleTypeRef ) ) (otherlv_7= '(' (
                    // ( (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' (
                    // (lv_args_10_0= ruleTopType ) ) )* )? otherlv_11= ')' )?
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8798:7:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8799:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getTypeAccess()
                                        .getRemoteTypeAction_1_0(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8804:2:
                        // ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':'
                        // )?
                        int alt143 = 2;
                        alt143 = dfa143.predict(input);
                        switch (alt143) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8804:3:
                        // ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':'
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8804:3:
                            // ( (lv_m_4_0= ruleModuleVarMacro ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8805:1:
                            // (lv_m_4_0= ruleModuleVarMacro )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8805:1:
                                // (lv_m_4_0= ruleModuleVarMacro )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8806:3:
                                // lv_m_4_0= ruleModuleVarMacro
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeAccess()
                                                .getMModuleVarMacroParserRuleCall_1_1_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleModuleVarMacro_in_ruleType20259);
                                    lv_m_4_0 = ruleModuleVarMacro();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeRule());
                                        }
                                        set(current, "m", lv_m_4_0,
                                                "ModuleVarMacro");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            otherlv_5 = (Token) match(input, 57,
                                    FOLLOW_57_in_ruleType20271);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_5, grammarAccess
                                        .getTypeAccess()
                                        .getColonKeyword_1_1_1());

                            }

                        }
                        break;

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8826:3:
                        // ( (lv_typeName_6_0= ruleTypeRef ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8827:1:
                        // (lv_typeName_6_0= ruleTypeRef )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8827:1:
                            // (lv_typeName_6_0= ruleTypeRef )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8828:3:
                            // lv_typeName_6_0= ruleTypeRef
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTypeAccess()
                                            .getTypeNameTypeRefParserRuleCall_1_2_0());

                                }
                                pushFollow(FOLLOW_ruleTypeRef_in_ruleType20294);
                                lv_typeName_6_0 = ruleTypeRef();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTypeRule());
                                    }
                                    set(current, "typeName", lv_typeName_6_0,
                                            "TypeRef");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8844:2:
                        // (otherlv_7= '(' ( ( (lv_args_8_0= ruleTopType ) )
                        // (otherlv_9= ',' ( (lv_args_10_0= ruleTopType ) ) )*
                        // )? otherlv_11= ')' )?
                        int alt146 = 2;
                        final int LA146_0 = input.LA(1);

                        if (LA146_0 == 21) {
                            alt146 = 1;
                        }
                        switch (alt146) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8844:4:
                        // otherlv_7= '(' ( ( (lv_args_8_0= ruleTopType ) )
                        // (otherlv_9= ',' ( (lv_args_10_0= ruleTopType ) ) )*
                        // )? otherlv_11= ')'
                        {
                            otherlv_7 = (Token) match(input, 21,
                                    FOLLOW_21_in_ruleType20307);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_7, grammarAccess
                                        .getTypeAccess()
                                        .getLeftParenthesisKeyword_1_3_0());

                            }
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8848:1:
                            // ( ( (lv_args_8_0= ruleTopType ) ) (otherlv_9= ','
                            // ( (lv_args_10_0= ruleTopType ) ) )* )?
                            int alt145 = 2;
                            final int LA145_0 = input.LA(1);

                            if (LA145_0 == RULE_ATOM
                                    || LA145_0 >= RULE_VARIABLE
                                    && LA145_0 <= RULE_BASED_INT
                                    || LA145_0 >= 19 && LA145_0 <= 21
                                    || LA145_0 >= 24 && LA145_0 <= 35
                                    || LA145_0 >= 39 && LA145_0 <= 40
                                    || LA145_0 >= 42 && LA145_0 <= 45
                                    || LA145_0 >= 47 && LA145_0 <= 48
                                    || LA145_0 >= 51 && LA145_0 <= 52
                                    || LA145_0 == 56 || LA145_0 == 68
                                    || LA145_0 == 73 || LA145_0 == 77
                                    || LA145_0 >= 89 && LA145_0 <= 90
                                    || LA145_0 == 102) {
                                alt145 = 1;
                            }
                            switch (alt145) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8848:2:
                            // ( (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' (
                            // (lv_args_10_0= ruleTopType ) ) )*
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8848:2:
                                // ( (lv_args_8_0= ruleTopType ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8849:1:
                                // (lv_args_8_0= ruleTopType )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8849:1:
                                    // (lv_args_8_0= ruleTopType )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8850:3:
                                    // lv_args_8_0= ruleTopType
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getTypeAccess()
                                                    .getArgsTopTypeParserRuleCall_1_3_1_0_0());

                                        }
                                        pushFollow(FOLLOW_ruleTopType_in_ruleType20329);
                                        lv_args_8_0 = ruleTopType();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getTypeRule());
                                            }
                                            add(current, "args", lv_args_8_0,
                                                    "TopType");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8866:2:
                                // (otherlv_9= ',' ( (lv_args_10_0= ruleTopType
                                // ) ) )*
                                loop144:
                                do {
                                    int alt144 = 2;
                                    final int LA144_0 = input.LA(1);

                                    if (LA144_0 == 22) {
                                        alt144 = 1;
                                    }

                                    switch (alt144) {
                                    case 1:
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8866:4:
                                    // otherlv_9= ',' ( (lv_args_10_0=
                                    // ruleTopType ) )
                                    {
                                        otherlv_9 = (Token) match(input, 22,
                                                FOLLOW_22_in_ruleType20342);
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            newLeafNode(
                                                    otherlv_9,
                                                    grammarAccess
                                                            .getTypeAccess()
                                                            .getCommaKeyword_1_3_1_1_0());

                                        }
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8870:1:
                                        // ( (lv_args_10_0= ruleTopType ) )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8871:1:
                                        // (lv_args_10_0= ruleTopType )
                                        {
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8871:1:
                                            // (lv_args_10_0= ruleTopType )
                                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8872:3:
                                            // lv_args_10_0= ruleTopType
                                            {
                                                if (state.backtracking == 0) {

                                                    newCompositeNode(grammarAccess
                                                            .getTypeAccess()
                                                            .getArgsTopTypeParserRuleCall_1_3_1_1_1_0());

                                                }
                                                pushFollow(FOLLOW_ruleTopType_in_ruleType20363);
                                                lv_args_10_0 = ruleTopType();

                                                state._fsp--;
                                                if (state.failed) {
                                                    return current;
                                                }
                                                if (state.backtracking == 0) {

                                                    if (current == null) {
                                                        current = createModelElementForParent(grammarAccess
                                                                .getTypeRule());
                                                    }
                                                    add(current, "args",
                                                            lv_args_10_0,
                                                            "TopType");
                                                    afterParserOrEnumRuleCall();

                                                }

                                            }

                                        }

                                    }
                                        break;

                                    default:
                                        break loop144;
                                    }
                                } while (true);

                            }
                                break;

                            }

                            otherlv_11 = (Token) match(input, 23,
                                    FOLLOW_23_in_ruleType20379);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(otherlv_11, grammarAccess
                                        .getTypeAccess()
                                        .getRightParenthesisKeyword_1_3_2());

                            }

                        }
                        break;

                        }

                    }

                }
                break;
                case 3:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8893:6:
                // ( (lv_typeName_12_0= ruleVariableLiteral ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8893:6:
                    // ( (lv_typeName_12_0= ruleVariableLiteral ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8894:1:
                    // (lv_typeName_12_0= ruleVariableLiteral )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8894:1:
                        // (lv_typeName_12_0= ruleVariableLiteral )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8895:3:
                        // lv_typeName_12_0= ruleVariableLiteral
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getTypeAccess()
                                        .getTypeNameVariableLiteralParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleVariableLiteral_in_ruleType20409);
                            lv_typeName_12_0 = ruleVariableLiteral();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getTypeRule());
                                }
                                set(current, "typeName", lv_typeName_12_0,
                                        "VariableLiteral");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }
                break;
                case 4:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8912:6:
                // ( (lv_value_13_0= ruleINTEGER ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8912:6:
                    // ( (lv_value_13_0= ruleINTEGER ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8913:1:
                    // (lv_value_13_0= ruleINTEGER )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8913:1:
                        // (lv_value_13_0= ruleINTEGER )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8914:3:
                        // lv_value_13_0= ruleINTEGER
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess.getTypeAccess()
                                        .getValueINTEGERParserRuleCall_3_0());

                            }
                            pushFollow(FOLLOW_ruleINTEGER_in_ruleType20436);
                            lv_value_13_0 = ruleINTEGER();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getTypeRule());
                                }
                                set(current, "value", lv_value_13_0, "INTEGER");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }
                break;
                case 5:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8931:6:
                // (otherlv_14= '[' () ( ( (lv_type_16_0= ruleTopType ) )
                // (otherlv_17= ',' otherlv_18= '...' )? )? otherlv_19= ']' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8931:6:
                    // (otherlv_14= '[' () ( ( (lv_type_16_0= ruleTopType ) )
                    // (otherlv_17= ',' otherlv_18= '...' )? )? otherlv_19= ']'
                    // )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8931:8:
                    // otherlv_14= '[' () ( ( (lv_type_16_0= ruleTopType ) )
                    // (otherlv_17= ',' otherlv_18= '...' )? )? otherlv_19= ']'
                    {
                        otherlv_14 = (Token) match(input, 40,
                                FOLLOW_40_in_ruleType20455);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_14, grammarAccess
                                    .getTypeAccess()
                                    .getLeftSquareBracketKeyword_4_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8935:1:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8936:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getTypeAccess()
                                        .getListTypeAction_4_1(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8941:2:
                        // ( ( (lv_type_16_0= ruleTopType ) ) (otherlv_17= ','
                        // otherlv_18= '...' )? )?
                        int alt148 = 2;
                        final int LA148_0 = input.LA(1);

                        if (LA148_0 == RULE_ATOM || LA148_0 >= RULE_VARIABLE
                                && LA148_0 <= RULE_BASED_INT || LA148_0 >= 19
                                && LA148_0 <= 21 || LA148_0 >= 24
                                && LA148_0 <= 35 || LA148_0 >= 39
                                && LA148_0 <= 40 || LA148_0 >= 42
                                && LA148_0 <= 45 || LA148_0 >= 47
                                && LA148_0 <= 48 || LA148_0 >= 51
                                && LA148_0 <= 52 || LA148_0 == 56
                                || LA148_0 == 68 || LA148_0 == 73
                                || LA148_0 == 77 || LA148_0 >= 89
                                && LA148_0 <= 90 || LA148_0 == 102) {
                            alt148 = 1;
                        }
                        switch (alt148) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8941:3:
                        // ( (lv_type_16_0= ruleTopType ) ) (otherlv_17= ','
                        // otherlv_18= '...' )?
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8941:3:
                            // ( (lv_type_16_0= ruleTopType ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8942:1:
                            // (lv_type_16_0= ruleTopType )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8942:1:
                                // (lv_type_16_0= ruleTopType )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8943:3:
                                // lv_type_16_0= ruleTopType
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeAccess()
                                                .getTypeTopTypeParserRuleCall_4_2_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleTopType_in_ruleType20486);
                                    lv_type_16_0 = ruleTopType();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeRule());
                                        }
                                        set(current, "type", lv_type_16_0,
                                                "TopType");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8959:2:
                            // (otherlv_17= ',' otherlv_18= '...' )?
                            int alt147 = 2;
                            final int LA147_0 = input.LA(1);

                            if (LA147_0 == 22) {
                                alt147 = 1;
                            }
                            switch (alt147) {
                            case 1:
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8959:4:
                            // otherlv_17= ',' otherlv_18= '...'
                            {
                                otherlv_17 = (Token) match(input, 22,
                                        FOLLOW_22_in_ruleType20499);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_17, grammarAccess
                                            .getTypeAccess()
                                            .getCommaKeyword_4_2_1_0());

                                }
                                otherlv_18 = (Token) match(input, 104,
                                        FOLLOW_104_in_ruleType20511);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(
                                            otherlv_18,
                                            grammarAccess
                                                    .getTypeAccess()
                                                    .getFullStopFullStopFullStopKeyword_4_2_1_1());

                                }

                            }
                                break;

                            }

                        }
                        break;

                        }

                        otherlv_19 = (Token) match(input, 41,
                                FOLLOW_41_in_ruleType20527);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_19, grammarAccess
                                    .getTypeAccess()
                                    .getRightSquareBracketKeyword_4_3());

                        }

                    }

                }
                break;
                case 6:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8972:6:
                // (otherlv_20= '{' () ( ( (lv_types_22_0= ruleTopType ) )
                // (otherlv_23= ',' ( (lv_types_24_0= ruleTopType ) ) )* )?
                // otherlv_25= '}' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8972:6:
                    // (otherlv_20= '{' () ( ( (lv_types_22_0= ruleTopType ) )
                    // (otherlv_23= ',' ( (lv_types_24_0= ruleTopType ) ) )* )?
                    // otherlv_25= '}' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8972:8:
                    // otherlv_20= '{' () ( ( (lv_types_22_0= ruleTopType ) )
                    // (otherlv_23= ',' ( (lv_types_24_0= ruleTopType ) ) )* )?
                    // otherlv_25= '}'
                    {
                        otherlv_20 = (Token) match(input, 35,
                                FOLLOW_35_in_ruleType20547);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_20, grammarAccess
                                    .getTypeAccess()
                                    .getLeftCurlyBracketKeyword_5_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8976:1:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8977:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getTypeAccess()
                                        .getTupleTypeAction_5_1(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8982:2:
                        // ( ( (lv_types_22_0= ruleTopType ) ) (otherlv_23= ','
                        // ( (lv_types_24_0= ruleTopType ) ) )* )?
                        int alt150 = 2;
                        final int LA150_0 = input.LA(1);

                        if (LA150_0 == RULE_ATOM || LA150_0 >= RULE_VARIABLE
                                && LA150_0 <= RULE_BASED_INT || LA150_0 >= 19
                                && LA150_0 <= 21 || LA150_0 >= 24
                                && LA150_0 <= 35 || LA150_0 >= 39
                                && LA150_0 <= 40 || LA150_0 >= 42
                                && LA150_0 <= 45 || LA150_0 >= 47
                                && LA150_0 <= 48 || LA150_0 >= 51
                                && LA150_0 <= 52 || LA150_0 == 56
                                || LA150_0 == 68 || LA150_0 == 73
                                || LA150_0 == 77 || LA150_0 >= 89
                                && LA150_0 <= 90 || LA150_0 == 102) {
                            alt150 = 1;
                        }
                        switch (alt150) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8982:3:
                        // ( (lv_types_22_0= ruleTopType ) ) (otherlv_23= ',' (
                        // (lv_types_24_0= ruleTopType ) ) )*
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8982:3:
                            // ( (lv_types_22_0= ruleTopType ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8983:1:
                            // (lv_types_22_0= ruleTopType )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8983:1:
                                // (lv_types_22_0= ruleTopType )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8984:3:
                                // lv_types_22_0= ruleTopType
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeAccess()
                                                .getTypesTopTypeParserRuleCall_5_2_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleTopType_in_ruleType20578);
                                    lv_types_22_0 = ruleTopType();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeRule());
                                        }
                                        add(current, "types", lv_types_22_0,
                                                "TopType");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9000:2:
                            // (otherlv_23= ',' ( (lv_types_24_0= ruleTopType )
                            // ) )*
                            loop149:
                                do {
                                    int alt149 = 2;
                                    final int LA149_0 = input.LA(1);

                                    if (LA149_0 == 22) {
                                        alt149 = 1;
                                    }

                                switch (alt149) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9000:4:
                                // otherlv_23= ',' ( (lv_types_24_0= ruleTopType
                                // ) )
                                {
                                    otherlv_23 = (Token) match(input, 22,
                                            FOLLOW_22_in_ruleType20591);
                                    if (state.failed) {
                                            return current;
                                        }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_23, grammarAccess
                                                .getTypeAccess()
                                                .getCommaKeyword_5_2_1_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9004:1:
                                    // ( (lv_types_24_0= ruleTopType ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9005:1:
                                    // (lv_types_24_0= ruleTopType )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9005:1:
                                        // (lv_types_24_0= ruleTopType )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9006:3:
                                        // lv_types_24_0= ruleTopType
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getTypeAccess()
                                                        .getTypesTopTypeParserRuleCall_5_2_1_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleTopType_in_ruleType20612);
                                            lv_types_24_0 = ruleTopType();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getTypeRule());
                                                }
                                                add(current, "types",
                                                        lv_types_24_0,
                                                        "TopType");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop149;
                                    }
                                } while (true);

                        }
                        break;

                        }

                        otherlv_25 = (Token) match(input, 36,
                                FOLLOW_36_in_ruleType20628);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_25, grammarAccess
                                    .getTypeAccess()
                                    .getRightCurlyBracketKeyword_5_3());

                        }

                    }

                }
                break;
                case 7:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9027:6:
                // (otherlv_26= '#' () ( (lv_rec_28_0= ruleRecordRef ) )
                // otherlv_29= '{' ( ( (lv_fields_30_0= ruleFieldType ) )
                // (otherlv_31= ',' ( (lv_fields_32_0= ruleFieldType ) ) )* )?
                // otherlv_33= '}' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9027:6:
                    // (otherlv_26= '#' () ( (lv_rec_28_0= ruleRecordRef ) )
                    // otherlv_29= '{' ( ( (lv_fields_30_0= ruleFieldType ) )
                    // (otherlv_31= ',' ( (lv_fields_32_0= ruleFieldType ) ) )*
                    // )? otherlv_33= '}' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9027:8:
                    // otherlv_26= '#' () ( (lv_rec_28_0= ruleRecordRef ) )
                    // otherlv_29= '{' ( ( (lv_fields_30_0= ruleFieldType ) )
                    // (otherlv_31= ',' ( (lv_fields_32_0= ruleFieldType ) ) )*
                    // )? otherlv_33= '}'
                    {
                        otherlv_26 = (Token) match(input, 56,
                                FOLLOW_56_in_ruleType20648);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_26, grammarAccess
                                    .getTypeAccess().getNumberSignKeyword_6_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9031:1:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9032:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(grammarAccess
                                        .getTypeAccess()
                                        .getRecordTypeAction_6_1(), current);

                            }

                        }

                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9037:2:
                        // ( (lv_rec_28_0= ruleRecordRef ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9038:1:
                        // (lv_rec_28_0= ruleRecordRef )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9038:1:
                            // (lv_rec_28_0= ruleRecordRef )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9039:3:
                            // lv_rec_28_0= ruleRecordRef
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTypeAccess()
                                            .getRecRecordRefParserRuleCall_6_2_0());

                                }
                                pushFollow(FOLLOW_ruleRecordRef_in_ruleType20678);
                                lv_rec_28_0 = ruleRecordRef();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTypeRule());
                                    }
                                    set(current, "rec", lv_rec_28_0,
                                            "RecordRef");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                        otherlv_29 = (Token) match(input, 35,
                                FOLLOW_35_in_ruleType20690);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_29, grammarAccess
                                    .getTypeAccess()
                                    .getLeftCurlyBracketKeyword_6_3());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9059:1:
                        // ( ( (lv_fields_30_0= ruleFieldType ) ) (otherlv_31=
                        // ',' ( (lv_fields_32_0= ruleFieldType ) ) )* )?
                        int alt152 = 2;
                        final int LA152_0 = input.LA(1);

                        if (LA152_0 == RULE_ATOM) {
                            alt152 = 1;
                        }
                        switch (alt152) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9059:2:
                        // ( (lv_fields_30_0= ruleFieldType ) ) (otherlv_31= ','
                        // ( (lv_fields_32_0= ruleFieldType ) ) )*
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9059:2:
                            // ( (lv_fields_30_0= ruleFieldType ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9060:1:
                            // (lv_fields_30_0= ruleFieldType )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9060:1:
                                // (lv_fields_30_0= ruleFieldType )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9061:3:
                                // lv_fields_30_0= ruleFieldType
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getTypeAccess()
                                                .getFieldsFieldTypeParserRuleCall_6_4_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleFieldType_in_ruleType20712);
                                    lv_fields_30_0 = ruleFieldType();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getTypeRule());
                                        }
                                        add(current, "fields", lv_fields_30_0,
                                                "FieldType");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9077:2:
                            // (otherlv_31= ',' ( (lv_fields_32_0= ruleFieldType
                            // ) ) )*
                            loop151:
                                do {
                                    int alt151 = 2;
                                    final int LA151_0 = input.LA(1);

                                    if (LA151_0 == 22) {
                                        alt151 = 1;
                                    }

                                switch (alt151) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9077:4:
                                // otherlv_31= ',' ( (lv_fields_32_0=
                                // ruleFieldType ) )
                                {
                                    otherlv_31 = (Token) match(input, 22,
                                            FOLLOW_22_in_ruleType20725);
                                    if (state.failed) {
                                            return current;
                                        }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_31, grammarAccess
                                                .getTypeAccess()
                                                .getCommaKeyword_6_4_1_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9081:1:
                                    // ( (lv_fields_32_0= ruleFieldType ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9082:1:
                                    // (lv_fields_32_0= ruleFieldType )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9082:1:
                                        // (lv_fields_32_0= ruleFieldType )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9083:3:
                                        // lv_fields_32_0= ruleFieldType
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getTypeAccess()
                                                        .getFieldsFieldTypeParserRuleCall_6_4_1_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleFieldType_in_ruleType20746);
                                            lv_fields_32_0 = ruleFieldType();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getTypeRule());
                                                }
                                                add(current, "fields",
                                                        lv_fields_32_0,
                                                        "FieldType");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop151;
                                    }
                                } while (true);

                        }
                        break;

                        }

                        otherlv_33 = (Token) match(input, 36,
                                FOLLOW_36_in_ruleType20762);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_33, grammarAccess
                                    .getTypeAccess()
                                    .getRightCurlyBracketKeyword_6_5());

                        }

                    }

                }
                break;
                case 8:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9105:5:
                // this_BinaryType_34= ruleBinaryType
                {
                    if (state.backtracking == 0) {

                        newCompositeNode(grammarAccess.getTypeAccess()
                                .getBinaryTypeParserRuleCall_7());

                    }
                    pushFollow(FOLLOW_ruleBinaryType_in_ruleType20791);
                    this_BinaryType_34 = ruleBinaryType();

                    state._fsp--;
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        current = this_BinaryType_34;
                        afterParserOrEnumRuleCall();

                    }

                }
                break;
                case 9:
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9114:6:
                // (otherlv_35= 'fun' () otherlv_37= '(' ( (lv_type_38_0=
                // ruleFunType100 ) )? otherlv_39= ')' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9114:6:
                    // (otherlv_35= 'fun' () otherlv_37= '(' ( (lv_type_38_0=
                    // ruleFunType100 ) )? otherlv_39= ')' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9114:8:
                    // otherlv_35= 'fun' () otherlv_37= '(' ( (lv_type_38_0=
                    // ruleFunType100 ) )? otherlv_39= ')'
                    {
                        otherlv_35 = (Token) match(input, 68,
                                FOLLOW_68_in_ruleType20809);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_35, grammarAccess
                                    .getTypeAccess().getFunKeyword_8_0());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9118:1:
                        // ()
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9119:5:
                        {
                            if (state.backtracking == 0) {

                                current = forceCreateModelElement(
                                        grammarAccess.getTypeAccess()
                                                .getFunTypeAction_8_1(),
                                        current);

                            }

                        }

                        otherlv_37 = (Token) match(input, 21,
                                FOLLOW_21_in_ruleType20830);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_37, grammarAccess
                                    .getTypeAccess()
                                    .getLeftParenthesisKeyword_8_2());

                        }
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9128:1:
                        // ( (lv_type_38_0= ruleFunType100 ) )?
                        int alt153 = 2;
                        final int LA153_0 = input.LA(1);

                        if (LA153_0 == 21) {
                            alt153 = 1;
                        }
                        switch (alt153) {
                        case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9129:1:
                        // (lv_type_38_0= ruleFunType100 )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9129:1:
                            // (lv_type_38_0= ruleFunType100 )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9130:3:
                            // lv_type_38_0= ruleFunType100
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getTypeAccess()
                                            .getTypeFunType100ParserRuleCall_8_3_0());

                                }
                                pushFollow(FOLLOW_ruleFunType100_in_ruleType20851);
                                lv_type_38_0 = ruleFunType100();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getTypeRule());
                                    }
                                    set(current, "type", lv_type_38_0,
                                            "FunType100");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }
                        break;

                        }

                        otherlv_39 = (Token) match(input, 23,
                                FOLLOW_23_in_ruleType20864);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_39, grammarAccess
                                    .getTypeAccess()
                                    .getRightParenthesisKeyword_8_4());

                        }

                    }

                }
                break;

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleType"

    // $ANTLR start "entryRuleFieldType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9158:1:
    // entryRuleFieldType returns [EObject current=null] : iv_ruleFieldType=
    // ruleFieldType EOF ;
    public final EObject entryRuleFieldType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldType = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9159:2:
            // (iv_ruleFieldType= ruleFieldType EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9160:2:
            // iv_ruleFieldType= ruleFieldType EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFieldTypeRule());
                }
                pushFollow(FOLLOW_ruleFieldType_in_entryRuleFieldType20901);
                iv_ruleFieldType = ruleFieldType();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFieldType;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFieldType20911);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFieldType"

    // $ANTLR start "ruleFieldType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9167:1:
    // ruleFieldType returns [EObject current=null] : ( ( (otherlv_0= RULE_ATOM
    // ) ) otherlv_1= '::' ( (lv_type_2_0= ruleTopType ) ) ) ;
    public final EObject ruleFieldType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_1 = null;
        EObject lv_type_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9170:28:
            // ( ( ( (otherlv_0= RULE_ATOM ) ) otherlv_1= '::' ( (lv_type_2_0=
            // ruleTopType ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9171:1:
            // ( ( (otherlv_0= RULE_ATOM ) ) otherlv_1= '::' ( (lv_type_2_0=
            // ruleTopType ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9171:1:
                // ( ( (otherlv_0= RULE_ATOM ) ) otherlv_1= '::' ( (lv_type_2_0=
                // ruleTopType ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9171:2:
                // ( (otherlv_0= RULE_ATOM ) ) otherlv_1= '::' ( (lv_type_2_0=
                // ruleTopType ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9171:2:
                    // ( (otherlv_0= RULE_ATOM ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9172:1:
                    // (otherlv_0= RULE_ATOM )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9172:1:
                        // (otherlv_0= RULE_ATOM )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9173:3:
                        // otherlv_0= RULE_ATOM
                        {
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getFieldTypeRule());
                                }

                            }
                            otherlv_0 = (Token) match(input, RULE_ATOM,
                                    FOLLOW_RULE_ATOM_in_ruleFieldType20956);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(
                                        otherlv_0,
                                        grammarAccess
                                                .getFieldTypeAccess()
                                                .getTypeNameTypeAttributeCrossReference_0_0());

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 38,
                            FOLLOW_38_in_ruleFieldType20968);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getFieldTypeAccess().getColonColonKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9188:1:
                    // ( (lv_type_2_0= ruleTopType ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9189:1:
                    // (lv_type_2_0= ruleTopType )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9189:1:
                        // (lv_type_2_0= ruleTopType )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9190:3:
                        // lv_type_2_0= ruleTopType
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFieldTypeAccess()
                                        .getTypeTopTypeParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleTopType_in_ruleFieldType20989);
                            lv_type_2_0 = ruleTopType();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFieldTypeRule());
                                }
                                set(current, "type", lv_type_2_0, "TopType");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFieldType"

    // $ANTLR start "entryRuleBinaryType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9214:1:
    // entryRuleBinaryType returns [EObject current=null] : iv_ruleBinaryType=
    // ruleBinaryType EOF ;
    public final EObject entryRuleBinaryType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinaryType = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9215:2:
            // (iv_ruleBinaryType= ruleBinaryType EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9216:2:
            // iv_ruleBinaryType= ruleBinaryType EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getBinaryTypeRule());
                }
                pushFollow(FOLLOW_ruleBinaryType_in_entryRuleBinaryType21025);
                iv_ruleBinaryType = ruleBinaryType();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleBinaryType;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleBinaryType21035);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleBinaryType"

    // $ANTLR start "ruleBinaryType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9223:1:
    // ruleBinaryType returns [EObject current=null] : (otherlv_0= '<<' () ( ( (
    // (lv_type_2_0= ruleBinBaseType ) ) (otherlv_3= ',' ( (lv_type_4_0=
    // ruleBinUnitType ) ) )? ) | ( (lv_type_5_0= ruleBinUnitType ) ) )?
    // otherlv_6= '>>' ) ;
    public final EObject ruleBinaryType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0 = null;
        Token otherlv_3 = null;
        Token otherlv_6 = null;
        EObject lv_type_2_0 = null;

        EObject lv_type_4_0 = null;

        EObject lv_type_5_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9226:28:
            // ( (otherlv_0= '<<' () ( ( ( (lv_type_2_0= ruleBinBaseType ) )
            // (otherlv_3= ',' ( (lv_type_4_0= ruleBinUnitType ) ) )? ) | (
            // (lv_type_5_0= ruleBinUnitType ) ) )? otherlv_6= '>>' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9227:1:
            // (otherlv_0= '<<' () ( ( ( (lv_type_2_0= ruleBinBaseType ) )
            // (otherlv_3= ',' ( (lv_type_4_0= ruleBinUnitType ) ) )? ) | (
            // (lv_type_5_0= ruleBinUnitType ) ) )? otherlv_6= '>>' )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9227:1:
                // (otherlv_0= '<<' () ( ( ( (lv_type_2_0= ruleBinBaseType ) )
                // (otherlv_3= ',' ( (lv_type_4_0= ruleBinUnitType ) ) )? ) | (
                // (lv_type_5_0= ruleBinUnitType ) ) )? otherlv_6= '>>' )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9227:3:
                // otherlv_0= '<<' () ( ( ( (lv_type_2_0= ruleBinBaseType ) )
                // (otherlv_3= ',' ( (lv_type_4_0= ruleBinUnitType ) ) )? ) | (
                // (lv_type_5_0= ruleBinUnitType ) ) )? otherlv_6= '>>'
                {
                    otherlv_0 = (Token) match(input, 73,
                            FOLLOW_73_in_ruleBinaryType21072);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_0, grammarAccess
                                .getBinaryTypeAccess()
                                .getLessThanSignLessThanSignKeyword_0());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9231:1:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9232:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getBinaryTypeAccess()
                                    .getBinaryTypeAction_1(), current);

                        }

                    }

                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9237:2:
                    // ( ( ( (lv_type_2_0= ruleBinBaseType ) ) (otherlv_3= ',' (
                    // (lv_type_4_0= ruleBinUnitType ) ) )? ) | ( (lv_type_5_0=
                    // ruleBinUnitType ) ) )?
                    int alt156 = 3;
                    final int LA156_0 = input.LA(1);

                    if (LA156_0 == RULE_VARIABLE) {
                        final int LA156_1 = input.LA(2);

                        if (LA156_1 == 57) {
                            final int LA156_3 = input.LA(3);

                            if (LA156_3 == RULE_VARIABLE) {
                                final int LA156_4 = input.LA(4);

                                if (LA156_4 == 22 || LA156_4 == 57
                                        || LA156_4 == 74) {
                                    alt156 = 1;
                                } else if (LA156_4 == 84) {
                                    alt156 = 2;
                                }
                            } else if (LA156_3 == RULE_ATOM
                                    || LA156_3 >= RULE_INT
                                    && LA156_3 <= RULE_BASED_INT
                                    || LA156_3 >= 20 && LA156_3 <= 21
                                    || LA156_3 >= 24 && LA156_3 <= 35
                                    || LA156_3 >= 39 && LA156_3 <= 40
                                    || LA156_3 >= 42 && LA156_3 <= 45
                                    || LA156_3 >= 47 && LA156_3 <= 48
                                    || LA156_3 >= 51 && LA156_3 <= 52
                                    || LA156_3 == 56 || LA156_3 == 68
                                    || LA156_3 == 73 || LA156_3 == 102) {
                                alt156 = 1;
                            }
                        }
                    }
                    switch (alt156) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9237:3:
                    // ( ( (lv_type_2_0= ruleBinBaseType ) ) (otherlv_3= ',' (
                    // (lv_type_4_0= ruleBinUnitType ) ) )? )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9237:3:
                        // ( ( (lv_type_2_0= ruleBinBaseType ) ) (otherlv_3= ','
                        // ( (lv_type_4_0= ruleBinUnitType ) ) )? )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9237:4:
                        // ( (lv_type_2_0= ruleBinBaseType ) ) (otherlv_3= ',' (
                        // (lv_type_4_0= ruleBinUnitType ) ) )?
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9237:4:
                            // ( (lv_type_2_0= ruleBinBaseType ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9238:1:
                            // (lv_type_2_0= ruleBinBaseType )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9238:1:
                                // (lv_type_2_0= ruleBinBaseType )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9239:3:
                                // lv_type_2_0= ruleBinBaseType
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getBinaryTypeAccess()
                                                .getTypeBinBaseTypeParserRuleCall_2_0_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleBinBaseType_in_ruleBinaryType21104);
                                    lv_type_2_0 = ruleBinBaseType();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getBinaryTypeRule());
                                        }
                                        add(current, "type", lv_type_2_0,
                                                "BinBaseType");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9255:2:
                            // (otherlv_3= ',' ( (lv_type_4_0= ruleBinUnitType )
                            // ) )?
                            int alt155 = 2;
                            final int LA155_0 = input.LA(1);

                            if (LA155_0 == 22) {
                                alt155 = 1;
                            }
                            switch (alt155) {
                            case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9255:4:
                            // otherlv_3= ',' ( (lv_type_4_0= ruleBinUnitType )
                            // )
                            {
                                otherlv_3 = (Token) match(input, 22,
                                        FOLLOW_22_in_ruleBinaryType21117);
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    newLeafNode(otherlv_3, grammarAccess
                                            .getBinaryTypeAccess()
                                            .getCommaKeyword_2_0_1_0());

                                }
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9259:1:
                                // ( (lv_type_4_0= ruleBinUnitType ) )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9260:1:
                                // (lv_type_4_0= ruleBinUnitType )
                                {
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9260:1:
                                    // (lv_type_4_0= ruleBinUnitType )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9261:3:
                                    // lv_type_4_0= ruleBinUnitType
                                    {
                                        if (state.backtracking == 0) {

                                            newCompositeNode(grammarAccess
                                                    .getBinaryTypeAccess()
                                                    .getTypeBinUnitTypeParserRuleCall_2_0_1_1_0());

                                        }
                                        pushFollow(FOLLOW_ruleBinUnitType_in_ruleBinaryType21138);
                                        lv_type_4_0 = ruleBinUnitType();

                                        state._fsp--;
                                        if (state.failed) {
                                            return current;
                                        }
                                        if (state.backtracking == 0) {

                                            if (current == null) {
                                                current = createModelElementForParent(grammarAccess
                                                        .getBinaryTypeRule());
                                            }
                                            add(current, "type", lv_type_4_0,
                                                    "BinUnitType");
                                            afterParserOrEnumRuleCall();

                                        }

                                    }

                                }

                            }
                                break;

                            }

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9278:6:
                    // ( (lv_type_5_0= ruleBinUnitType ) )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9278:6:
                        // ( (lv_type_5_0= ruleBinUnitType ) )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9279:1:
                        // (lv_type_5_0= ruleBinUnitType )
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9279:1:
                            // (lv_type_5_0= ruleBinUnitType )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9280:3:
                            // lv_type_5_0= ruleBinUnitType
                            {
                                if (state.backtracking == 0) {

                                    newCompositeNode(grammarAccess
                                            .getBinaryTypeAccess()
                                            .getTypeBinUnitTypeParserRuleCall_2_1_0());

                                }
                                pushFollow(FOLLOW_ruleBinUnitType_in_ruleBinaryType21168);
                                lv_type_5_0 = ruleBinUnitType();

                                state._fsp--;
                                if (state.failed) {
                                    return current;
                                }
                                if (state.backtracking == 0) {

                                    if (current == null) {
                                        current = createModelElementForParent(grammarAccess
                                                .getBinaryTypeRule());
                                    }
                                    add(current, "type", lv_type_5_0,
                                            "BinUnitType");
                                    afterParserOrEnumRuleCall();

                                }

                            }

                        }

                    }
                        break;

                    }

                    otherlv_6 = (Token) match(input, 74,
                            FOLLOW_74_in_ruleBinaryType21182);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_6, grammarAccess
                                .getBinaryTypeAccess()
                                .getGreaterThanSignGreaterThanSignKeyword_3());

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleBinaryType"

    // $ANTLR start "entryRuleBinBaseType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9308:1:
    // entryRuleBinBaseType returns [EObject current=null] : iv_ruleBinBaseType=
    // ruleBinBaseType EOF ;
    public final EObject entryRuleBinBaseType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinBaseType = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9309:2:
            // (iv_ruleBinBaseType= ruleBinBaseType EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9310:2:
            // iv_ruleBinBaseType= ruleBinBaseType EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getBinBaseTypeRule());
                }
                pushFollow(FOLLOW_ruleBinBaseType_in_entryRuleBinBaseType21218);
                iv_ruleBinBaseType = ruleBinBaseType();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleBinBaseType;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleBinBaseType21228);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleBinBaseType"

    // $ANTLR start "ruleBinBaseType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9317:1:
    // ruleBinBaseType returns [EObject current=null] : ( ( (lv_typeName_0_0=
    // ruleVariableLiteral ) ) otherlv_1= ':' ( (lv_type_2_0= ruleType ) ) ) ;
    public final EObject ruleBinBaseType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        EObject lv_typeName_0_0 = null;

        EObject lv_type_2_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9320:28:
            // ( ( ( (lv_typeName_0_0= ruleVariableLiteral ) ) otherlv_1= ':' (
            // (lv_type_2_0= ruleType ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9321:1:
            // ( ( (lv_typeName_0_0= ruleVariableLiteral ) ) otherlv_1= ':' (
            // (lv_type_2_0= ruleType ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9321:1:
                // ( ( (lv_typeName_0_0= ruleVariableLiteral ) ) otherlv_1= ':'
                // ( (lv_type_2_0= ruleType ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9321:2:
                // ( (lv_typeName_0_0= ruleVariableLiteral ) ) otherlv_1= ':' (
                // (lv_type_2_0= ruleType ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9321:2:
                    // ( (lv_typeName_0_0= ruleVariableLiteral ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9322:1:
                    // (lv_typeName_0_0= ruleVariableLiteral )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9322:1:
                        // (lv_typeName_0_0= ruleVariableLiteral )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9323:3:
                        // lv_typeName_0_0= ruleVariableLiteral
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getBinBaseTypeAccess()
                                        .getTypeNameVariableLiteralParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleVariableLiteral_in_ruleBinBaseType21274);
                            lv_typeName_0_0 = ruleVariableLiteral();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getBinBaseTypeRule());
                                }
                                set(current, "typeName", lv_typeName_0_0,
                                        "VariableLiteral");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 57,
                            FOLLOW_57_in_ruleBinBaseType21286);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getBinBaseTypeAccess().getColonKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9343:1:
                    // ( (lv_type_2_0= ruleType ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9344:1:
                    // (lv_type_2_0= ruleType )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9344:1:
                        // (lv_type_2_0= ruleType )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9345:3:
                        // lv_type_2_0= ruleType
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getBinBaseTypeAccess()
                                        .getTypeTypeParserRuleCall_2_0());

                            }
                            pushFollow(FOLLOW_ruleType_in_ruleBinBaseType21307);
                            lv_type_2_0 = ruleType();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getBinBaseTypeRule());
                                }
                                set(current, "type", lv_type_2_0, "Type");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleBinBaseType"

    // $ANTLR start "entryRuleBinUnitType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9369:1:
    // entryRuleBinUnitType returns [EObject current=null] : iv_ruleBinUnitType=
    // ruleBinUnitType EOF ;
    public final EObject entryRuleBinUnitType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinUnitType = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9370:2:
            // (iv_ruleBinUnitType= ruleBinUnitType EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9371:2:
            // iv_ruleBinUnitType= ruleBinUnitType EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getBinUnitTypeRule());
                }
                pushFollow(FOLLOW_ruleBinUnitType_in_entryRuleBinUnitType21343);
                iv_ruleBinUnitType = ruleBinUnitType();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleBinUnitType;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleBinUnitType21353);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleBinUnitType"

    // $ANTLR start "ruleBinUnitType"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9378:1:
    // ruleBinUnitType returns [EObject current=null] : ( ( (lv_typeName_0_0=
    // ruleVariableLiteral ) ) otherlv_1= ':' ( (lv_m_2_0= RULE_VARIABLE ) )
    // otherlv_3= '*' ( (lv_type_4_0= ruleType ) ) ) ;
    public final EObject ruleBinUnitType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token lv_m_2_0 = null;
        Token otherlv_3 = null;
        EObject lv_typeName_0_0 = null;

        EObject lv_type_4_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9381:28:
            // ( ( ( (lv_typeName_0_0= ruleVariableLiteral ) ) otherlv_1= ':' (
            // (lv_m_2_0= RULE_VARIABLE ) ) otherlv_3= '*' ( (lv_type_4_0=
            // ruleType ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9382:1:
            // ( ( (lv_typeName_0_0= ruleVariableLiteral ) ) otherlv_1= ':' (
            // (lv_m_2_0= RULE_VARIABLE ) ) otherlv_3= '*' ( (lv_type_4_0=
            // ruleType ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9382:1:
                // ( ( (lv_typeName_0_0= ruleVariableLiteral ) ) otherlv_1= ':'
                // ( (lv_m_2_0= RULE_VARIABLE ) ) otherlv_3= '*' ( (lv_type_4_0=
                // ruleType ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9382:2:
                // ( (lv_typeName_0_0= ruleVariableLiteral ) ) otherlv_1= ':' (
                // (lv_m_2_0= RULE_VARIABLE ) ) otherlv_3= '*' ( (lv_type_4_0=
                // ruleType ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9382:2:
                    // ( (lv_typeName_0_0= ruleVariableLiteral ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9383:1:
                    // (lv_typeName_0_0= ruleVariableLiteral )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9383:1:
                        // (lv_typeName_0_0= ruleVariableLiteral )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9384:3:
                        // lv_typeName_0_0= ruleVariableLiteral
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getBinUnitTypeAccess()
                                        .getTypeNameVariableLiteralParserRuleCall_0_0());

                            }
                            pushFollow(FOLLOW_ruleVariableLiteral_in_ruleBinUnitType21399);
                            lv_typeName_0_0 = ruleVariableLiteral();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getBinUnitTypeRule());
                                }
                                set(current, "typeName", lv_typeName_0_0,
                                        "VariableLiteral");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                    otherlv_1 = (Token) match(input, 57,
                            FOLLOW_57_in_ruleBinUnitType21411);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getBinUnitTypeAccess().getColonKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9404:1:
                    // ( (lv_m_2_0= RULE_VARIABLE ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9405:1:
                    // (lv_m_2_0= RULE_VARIABLE )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9405:1:
                        // (lv_m_2_0= RULE_VARIABLE )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9406:3:
                        // lv_m_2_0= RULE_VARIABLE
                        {
                            lv_m_2_0 = (Token) match(input, RULE_VARIABLE,
                                    FOLLOW_RULE_VARIABLE_in_ruleBinUnitType21428);
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                newLeafNode(lv_m_2_0, grammarAccess
                                        .getBinUnitTypeAccess()
                                        .getMVARIABLETerminalRuleCall_2_0());

                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElement(grammarAccess
                                            .getBinUnitTypeRule());
                                }
                                setWithLastConsumed(current, "m", lv_m_2_0,
                                        "VARIABLE");

                            }

                        }

                    }

                    otherlv_3 = (Token) match(input, 84,
                            FOLLOW_84_in_ruleBinUnitType21445);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_3, grammarAccess
                                .getBinUnitTypeAccess().getAsteriskKeyword_3());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9426:1:
                    // ( (lv_type_4_0= ruleType ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9427:1:
                    // (lv_type_4_0= ruleType )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9427:1:
                        // (lv_type_4_0= ruleType )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9428:3:
                        // lv_type_4_0= ruleType
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getBinUnitTypeAccess()
                                        .getTypeTypeParserRuleCall_4_0());

                            }
                            pushFollow(FOLLOW_ruleType_in_ruleBinUnitType21466);
                            lv_type_4_0 = ruleType();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getBinUnitTypeRule());
                                }
                                set(current, "type", lv_type_4_0, "Type");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleBinUnitType"

    // $ANTLR start "entryRuleFunType100"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9452:1:
    // entryRuleFunType100 returns [EObject current=null] : iv_ruleFunType100=
    // ruleFunType100 EOF ;
    public final EObject entryRuleFunType100() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunType100 = null;

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9453:2:
            // (iv_ruleFunType100= ruleFunType100 EOF )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9454:2:
            // iv_ruleFunType100= ruleFunType100 EOF
            {
                if (state.backtracking == 0) {
                    newCompositeNode(grammarAccess.getFunType100Rule());
                }
                pushFollow(FOLLOW_ruleFunType100_in_entryRuleFunType10021502);
                iv_ruleFunType100 = ruleFunType100();

                state._fsp--;
                if (state.failed) {
                    return current;
                }
                if (state.backtracking == 0) {
                    current = iv_ruleFunType100;
                }
                match(input, EOF, FOLLOW_EOF_in_entryRuleFunType10021512);
                if (state.failed) {
                    return current;
                }

            }

        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "entryRuleFunType100"

    // $ANTLR start "ruleFunType100"
    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9461:1:
    // ruleFunType100 returns [EObject current=null] : ( () otherlv_1= '('
    // (otherlv_2= '...' | ( ( (lv_items_3_0= ruleTopType ) ) (otherlv_4= ',' (
    // (lv_items_5_0= ruleTopType ) ) )* ) )? otherlv_6= ')' otherlv_7= '->' (
    // (lv_return_8_0= ruleTopType ) ) ) ;
    public final EObject ruleFunType100() throws RecognitionException {
        EObject current = null;

        Token otherlv_1 = null;
        Token otherlv_2 = null;
        Token otherlv_4 = null;
        Token otherlv_6 = null;
        Token otherlv_7 = null;
        EObject lv_items_3_0 = null;

        EObject lv_items_5_0 = null;

        EObject lv_return_8_0 = null;

        enterRule();

        try {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9464:28:
            // ( ( () otherlv_1= '(' (otherlv_2= '...' | ( ( (lv_items_3_0=
            // ruleTopType ) ) (otherlv_4= ',' ( (lv_items_5_0= ruleTopType ) )
            // )* ) )? otherlv_6= ')' otherlv_7= '->' ( (lv_return_8_0=
            // ruleTopType ) ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9465:1:
            // ( () otherlv_1= '(' (otherlv_2= '...' | ( ( (lv_items_3_0=
            // ruleTopType ) ) (otherlv_4= ',' ( (lv_items_5_0= ruleTopType ) )
            // )* ) )? otherlv_6= ')' otherlv_7= '->' ( (lv_return_8_0=
            // ruleTopType ) ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9465:1:
                // ( () otherlv_1= '(' (otherlv_2= '...' | ( ( (lv_items_3_0=
                // ruleTopType ) ) (otherlv_4= ',' ( (lv_items_5_0= ruleTopType
                // ) ) )* ) )? otherlv_6= ')' otherlv_7= '->' ( (lv_return_8_0=
                // ruleTopType ) ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9465:2:
                // () otherlv_1= '(' (otherlv_2= '...' | ( ( (lv_items_3_0=
                // ruleTopType ) ) (otherlv_4= ',' ( (lv_items_5_0= ruleTopType
                // ) ) )* ) )? otherlv_6= ')' otherlv_7= '->' ( (lv_return_8_0=
                // ruleTopType ) )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9465:2:
                    // ()
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9466:5:
                    {
                        if (state.backtracking == 0) {

                            current = forceCreateModelElement(grammarAccess
                                    .getFunType100Access()
                                    .getFunTypeListAction_0(), current);

                        }

                    }

                    otherlv_1 = (Token) match(input, 21,
                            FOLLOW_21_in_ruleFunType10021558);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_1, grammarAccess
                                .getFunType100Access()
                                .getLeftParenthesisKeyword_1());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9475:1:
                    // (otherlv_2= '...' | ( ( (lv_items_3_0= ruleTopType ) )
                    // (otherlv_4= ',' ( (lv_items_5_0= ruleTopType ) ) )* ) )?
                    int alt158 = 3;
                    final int LA158_0 = input.LA(1);

                    if (LA158_0 == 104) {
                        alt158 = 1;
                    } else if (LA158_0 == RULE_ATOM || LA158_0 >= RULE_VARIABLE
                            && LA158_0 <= RULE_BASED_INT || LA158_0 >= 19
                            && LA158_0 <= 21 || LA158_0 >= 24 && LA158_0 <= 35
                            || LA158_0 >= 39 && LA158_0 <= 40 || LA158_0 >= 42
                            && LA158_0 <= 45 || LA158_0 >= 47 && LA158_0 <= 48
                            || LA158_0 >= 51 && LA158_0 <= 52 || LA158_0 == 56
                            || LA158_0 == 68 || LA158_0 == 73 || LA158_0 == 77
                            || LA158_0 >= 89 && LA158_0 <= 90 || LA158_0 == 102) {
                        alt158 = 2;
                    }
                    switch (alt158) {
                    case 1:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9475:3:
                    // otherlv_2= '...'
                    {
                        otherlv_2 = (Token) match(input, 104,
                                FOLLOW_104_in_ruleFunType10021571);
                        if (state.failed) {
                            return current;
                        }
                        if (state.backtracking == 0) {

                            newLeafNode(otherlv_2, grammarAccess
                                    .getFunType100Access()
                                    .getFullStopFullStopFullStopKeyword_2_0());

                        }

                    }
                        break;
                    case 2:
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9480:6:
                    // ( ( (lv_items_3_0= ruleTopType ) ) (otherlv_4= ',' (
                    // (lv_items_5_0= ruleTopType ) ) )* )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9480:6:
                        // ( ( (lv_items_3_0= ruleTopType ) ) (otherlv_4= ',' (
                        // (lv_items_5_0= ruleTopType ) ) )* )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9480:7:
                        // ( (lv_items_3_0= ruleTopType ) ) (otherlv_4= ',' (
                        // (lv_items_5_0= ruleTopType ) ) )*
                        {
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9480:7:
                            // ( (lv_items_3_0= ruleTopType ) )
                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9481:1:
                            // (lv_items_3_0= ruleTopType )
                            {
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9481:1:
                                // (lv_items_3_0= ruleTopType )
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9482:3:
                                // lv_items_3_0= ruleTopType
                                {
                                    if (state.backtracking == 0) {

                                        newCompositeNode(grammarAccess
                                                .getFunType100Access()
                                                .getItemsTopTypeParserRuleCall_2_1_0_0());

                                    }
                                    pushFollow(FOLLOW_ruleTopType_in_ruleFunType10021599);
                                    lv_items_3_0 = ruleTopType();

                                    state._fsp--;
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        if (current == null) {
                                            current = createModelElementForParent(grammarAccess
                                                    .getFunType100Rule());
                                        }
                                        add(current, "items", lv_items_3_0,
                                                "TopType");
                                        afterParserOrEnumRuleCall();

                                    }

                                }

                            }

                            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9498:2:
                            // (otherlv_4= ',' ( (lv_items_5_0= ruleTopType ) )
                            // )*
                            loop157:
                            do {
                                int alt157 = 2;
                                final int LA157_0 = input.LA(1);

                                if (LA157_0 == 22) {
                                    alt157 = 1;
                                }

                                switch (alt157) {
                                case 1:
                                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9498:4:
                                // otherlv_4= ',' ( (lv_items_5_0= ruleTopType )
                                // )
                                {
                                    otherlv_4 = (Token) match(input, 22,
                                            FOLLOW_22_in_ruleFunType10021612);
                                    if (state.failed) {
                                        return current;
                                    }
                                    if (state.backtracking == 0) {

                                        newLeafNode(otherlv_4, grammarAccess
                                                .getFunType100Access()
                                                .getCommaKeyword_2_1_1_0());

                                    }
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9502:1:
                                    // ( (lv_items_5_0= ruleTopType ) )
                                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9503:1:
                                    // (lv_items_5_0= ruleTopType )
                                    {
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9503:1:
                                        // (lv_items_5_0= ruleTopType )
                                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9504:3:
                                        // lv_items_5_0= ruleTopType
                                        {
                                            if (state.backtracking == 0) {

                                                newCompositeNode(grammarAccess
                                                        .getFunType100Access()
                                                        .getItemsTopTypeParserRuleCall_2_1_1_1_0());

                                            }
                                            pushFollow(FOLLOW_ruleTopType_in_ruleFunType10021633);
                                            lv_items_5_0 = ruleTopType();

                                            state._fsp--;
                                            if (state.failed) {
                                                return current;
                                            }
                                            if (state.backtracking == 0) {

                                                if (current == null) {
                                                    current = createModelElementForParent(grammarAccess
                                                            .getFunType100Rule());
                                                }
                                                add(current, "items",
                                                        lv_items_5_0, "TopType");
                                                afterParserOrEnumRuleCall();

                                            }

                                        }

                                    }

                                }
                                    break;

                                default:
                                    break loop157;
                                }
                            } while (true);

                        }

                    }
                        break;

                    }

                    otherlv_6 = (Token) match(input, 23,
                            FOLLOW_23_in_ruleFunType10021650);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_6, grammarAccess
                                .getFunType100Access()
                                .getRightParenthesisKeyword_3());

                    }
                    otherlv_7 = (Token) match(input, 50,
                            FOLLOW_50_in_ruleFunType10021662);
                    if (state.failed) {
                        return current;
                    }
                    if (state.backtracking == 0) {

                        newLeafNode(otherlv_7, grammarAccess
                                .getFunType100Access()
                                .getHyphenMinusGreaterThanSignKeyword_4());

                    }
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9528:1:
                    // ( (lv_return_8_0= ruleTopType ) )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9529:1:
                    // (lv_return_8_0= ruleTopType )
                    {
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9529:1:
                        // (lv_return_8_0= ruleTopType )
                        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:9530:3:
                        // lv_return_8_0= ruleTopType
                        {
                            if (state.backtracking == 0) {

                                newCompositeNode(grammarAccess
                                        .getFunType100Access()
                                        .getReturnTopTypeParserRuleCall_5_0());

                            }
                            pushFollow(FOLLOW_ruleTopType_in_ruleFunType10021683);
                            lv_return_8_0 = ruleTopType();

                            state._fsp--;
                            if (state.failed) {
                                return current;
                            }
                            if (state.backtracking == 0) {

                                if (current == null) {
                                    current = createModelElementForParent(grammarAccess
                                            .getFunType100Rule());
                                }
                                set(current, "return", lv_return_8_0, "TopType");
                                afterParserOrEnumRuleCall();

                            }

                        }

                    }

                }

            }

            if (state.backtracking == 0) {
                leaveRule();
            }
        }

        catch (final RecognitionException re) {
            recover(input, re);
            appendSkippedTokens();
        } finally {
        }
        return current;
    }

    // $ANTLR end "ruleFunType100"

    // $ANTLR start synpred1_InternalErlang
    public final void synpred1_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:236:5:
        // ( ( ruleElseAttribute ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:237:1:
        // ( ruleElseAttribute )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:237:1:
            // ( ruleElseAttribute )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:238:1:
            // ruleElseAttribute
            {
                pushFollow(FOLLOW_ruleElseAttribute_in_synpred1_InternalErlang457);
                ruleElseAttribute();

                state._fsp--;
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred1_InternalErlang

    // $ANTLR start synpred2_InternalErlang
    public final void synpred2_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:319:3:
        // ( ( 'module' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:320:1:
        // ( 'module' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:320:1:
            // ( 'module' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:321:2:
            // 'module'
            {
                match(input, 32, FOLLOW_32_in_synpred2_InternalErlang618);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred2_InternalErlang

    // $ANTLR start synpred3_InternalErlang
    public final void synpred3_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:335:7:
        // ( ( 'encoding' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:336:1:
        // ( 'encoding' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:336:1:
            // ( 'encoding' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:337:2:
            // 'encoding'
            {
                match(input, 33, FOLLOW_33_in_synpred3_InternalErlang662);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred3_InternalErlang

    // $ANTLR start synpred4_InternalErlang
    public final void synpred4_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:371:7:
        // ( ( 'file' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:372:1:
        // ( 'file' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:372:1:
            // ( 'file' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:373:2:
            // 'file'
            {
                match(input, 31, FOLLOW_31_in_synpred4_InternalErlang760);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred4_InternalErlang

    // $ANTLR start synpred5_InternalErlang
    public final void synpred5_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:387:7:
        // ( ( 'record' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:388:1:
        // ( 'record' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:388:1:
            // ( 'record' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:389:2:
            // 'record'
            {
                match(input, 34, FOLLOW_34_in_synpred5_InternalErlang804);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred5_InternalErlang

    // $ANTLR start synpred6_InternalErlang
    public final void synpred6_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:413:7:
        // ( ( 'export' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:414:1:
        // ( 'export' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:414:1:
            // ( 'export' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:415:2:
            // 'export'
            {
                match(input, 39, FOLLOW_39_in_synpred6_InternalErlang875);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred6_InternalErlang

    // $ANTLR start synpred7_InternalErlang
    public final void synpred7_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:429:7:
        // ( ( 'import' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:430:1:
        // ( 'import' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:430:1:
            // ( 'import' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:431:2:
            // 'import'
            {
                match(input, 42, FOLLOW_42_in_synpred7_InternalErlang919);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred7_InternalErlang

    // $ANTLR start synpred8_InternalErlang
    public final void synpred8_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:445:7:
        // ( ( 'compile' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:446:1:
        // ( 'compile' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:446:1:
            // ( 'compile' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:447:2:
            // 'compile'
            {
                match(input, 43, FOLLOW_43_in_synpred8_InternalErlang963);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred8_InternalErlang

    // $ANTLR start synpred9_InternalErlang
    public final void synpred9_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:493:3:
        // ( ( 'define' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:494:1:
        // ( 'define' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:494:1:
            // ( 'define' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:495:2:
            // 'define'
            {
                match(input, 20, FOLLOW_20_in_synpred9_InternalErlang1102);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred9_InternalErlang

    // $ANTLR start synpred10_InternalErlang
    public final void synpred10_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:509:7:
        // ( ( 'undef' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:510:1:
        // ( 'undef' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:510:1:
            // ( 'undef' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:511:2:
            // 'undef'
            {
                match(input, 24, FOLLOW_24_in_synpred10_InternalErlang1146);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred10_InternalErlang

    // $ANTLR start synpred16_InternalErlang
    public final void synpred16_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:956:3:
        // ( ( 'include' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:957:1:
        // ( 'include' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:957:1:
            // ( 'include' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:958:2:
            // 'include'
            {
                match(input, 29, FOLLOW_29_in_synpred16_InternalErlang2248);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred16_InternalErlang

    // $ANTLR start synpred17_InternalErlang
    public final void synpred17_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:972:7:
        // ( ( 'include_lib' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:973:1:
        // ( 'include_lib' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:973:1:
            // ( 'include_lib' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:974:2:
            // 'include_lib'
            {
                match(input, 30, FOLLOW_30_in_synpred17_InternalErlang2292);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred17_InternalErlang

    // $ANTLR start synpred27_InternalErlang
    public final void synpred27_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1933:3:
        // ( ( ( 'spec' | 'callback' ) ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1934:1:
        // ( ( 'spec' | 'callback' ) )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1934:1:
            // ( ( 'spec' | 'callback' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1935:1:
            // ( 'spec' | 'callback' )
            {
                if (input.LA(1) >= 44 && input.LA(1) <= 45) {
                    input.consume();
                    state.errorRecovery = false;
                    state.failed = false;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return;
                    }
                    final MismatchedSetException mse = new MismatchedSetException(
                            null, input);
                    throw mse;
                }

            }

        }
    }

    // $ANTLR end synpred27_InternalErlang

    // $ANTLR start synpred28_InternalErlang
    public final void synpred28_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1955:7:
        // ( ( ( 'type' | 'opaque' ) ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1956:1:
        // ( ( 'type' | 'opaque' ) )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1956:1:
            // ( ( 'type' | 'opaque' ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:1957:1:
            // ( 'type' | 'opaque' )
            {
                if (input.LA(1) >= 47 && input.LA(1) <= 48) {
                    input.consume();
                    state.errorRecovery = false;
                    state.failed = false;
                } else {
                    if (state.backtracking > 0) {
                        state.failed = true;
                        return;
                    }
                    final MismatchedSetException mse = new MismatchedSetException(
                            null, input);
                    throw mse;
                }

            }

        }
    }

    // $ANTLR end synpred28_InternalErlang

    // $ANTLR start synpred31_InternalErlang
    public final void synpred31_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2843:4:
        // ( ( ruleLineExpr ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2844:1:
        // ( ruleLineExpr )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2844:1:
            // ( ruleLineExpr )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:2845:1:
            // ruleLineExpr
            {
                pushFollow(FOLLOW_ruleLineExpr_in_synpred31_InternalErlang6362);
                ruleLineExpr();

                state._fsp--;
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred31_InternalErlang

    // $ANTLR start synpred32_InternalErlang
    public final void synpred32_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4045:4:
        // ( '(' )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:4045:6:
        // '('
        {
            match(input, 21, FOLLOW_21_in_synpred32_InternalErlang9068);
            if (state.failed) {
                return;
            }

        }
    }

    // $ANTLR end synpred32_InternalErlang

    // $ANTLR start synpred35_InternalErlang
    public final void synpred35_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:3:
        // ( ( ( ( ruleNAMEVAR ) ) ':' ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:4:
        // ( ( ( ruleNAMEVAR ) ) ':' )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:4:
            // ( ( ( ruleNAMEVAR ) ) ':' )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:5:
            // ( ( ruleNAMEVAR ) ) ':'
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6059:5:
                // ( ( ruleNAMEVAR ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6060:1:
                // ( ruleNAMEVAR )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6060:1:
                    // ( ruleNAMEVAR )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6061:1:
                    // ruleNAMEVAR
                    {
                        pushFollow(FOLLOW_ruleNAMEVAR_in_synpred35_InternalErlang13538);
                        ruleNAMEVAR();

                        state._fsp--;
                        if (state.failed) {
                            return;
                        }

                    }

                }

                match(input, 57, FOLLOW_57_in_synpred35_InternalErlang13544);
                if (state.failed) {
                    return;
                }

            }

        }
    }

    // $ANTLR end synpred35_InternalErlang

    // $ANTLR start synpred36_InternalErlang
    public final void synpred36_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6538:4:
        // ( ':' )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6538:6:
        // ':'
        {
            match(input, 57, FOLLOW_57_in_synpred36_InternalErlang14491);
            if (state.failed) {
                return;
            }

        }
    }

    // $ANTLR end synpred36_InternalErlang

    // $ANTLR start synpred37_InternalErlang
    public final void synpred37_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6561:6:
        // ( '/' )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:6561:8:
        // '/'
        {
            match(input, 69, FOLLOW_69_in_synpred37_InternalErlang14536);
            if (state.failed) {
                return;
            }

        }
    }

    // $ANTLR end synpred37_InternalErlang

    // $ANTLR start synpred38_InternalErlang
    public final void synpred38_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:3:
        // ( ( () ( ( '|' ) ) ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:4:
        // ( () ( ( '|' ) ) )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:4:
            // ( () ( ( '|' ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:5:
            // () ( ( '|' ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8410:5:
                // ()
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8411:1:
                {
                }

                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8411:2:
                // ( ( '|' ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8412:1:
                // ( '|' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8412:1:
                    // ( '|' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8413:2:
                    // '|'
                    {
                        match(input, 71,
                                FOLLOW_71_in_synpred38_InternalErlang19367);
                        if (state.failed) {
                            return;
                        }

                    }

                }

            }

        }
    }

    // $ANTLR end synpred38_InternalErlang

    // $ANTLR start synpred39_InternalErlang
    public final void synpred39_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:3:
        // ( ( () ( ( '..' ) ) ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:4:
        // ( () ( ( '..' ) ) )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:4:
            // ( () ( ( '..' ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:5:
            // () ( ( '..' ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8486:5:
                // ()
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8487:1:
                {
                }

                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8487:2:
                // ( ( '..' ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8488:1:
                // ( '..' )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8488:1:
                    // ( '..' )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8489:2:
                    // '..'
                    {
                        match(input, 103,
                                FOLLOW_103_in_synpred39_InternalErlang19549);
                        if (state.failed) {
                            return;
                        }

                    }

                }

            }

        }
    }

    // $ANTLR end synpred39_InternalErlang

    // $ANTLR start synpred40_InternalErlang
    public final void synpred40_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:3:
        // ( ( () ( ( ruleADDOP ) ) ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:4:
        // ( () ( ( ruleADDOP ) ) )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:4:
            // ( () ( ( ruleADDOP ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:5:
            // () ( ( ruleADDOP ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8562:5:
                // ()
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8563:1:
                {
                }

                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8563:2:
                // ( ( ruleADDOP ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8564:1:
                // ( ruleADDOP )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8564:1:
                    // ( ruleADDOP )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8565:1:
                    // ruleADDOP
                    {
                        pushFollow(FOLLOW_ruleADDOP_in_synpred40_InternalErlang19730);
                        ruleADDOP();

                        state._fsp--;
                        if (state.failed) {
                            return;
                        }

                    }

                }

            }

        }
    }

    // $ANTLR end synpred40_InternalErlang

    // $ANTLR start synpred41_InternalErlang
    public final void synpred41_InternalErlang_fragment()
            throws RecognitionException {
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:3:
        // ( ( () ( ( ruleMULTOP ) ) ) )
        // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:4:
        // ( () ( ( ruleMULTOP ) ) )
        {
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:4:
            // ( () ( ( ruleMULTOP ) ) )
            // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:5:
            // () ( ( ruleMULTOP ) )
            {
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8639:5:
                // ()
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8640:1:
                {
                }

                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8640:2:
                // ( ( ruleMULTOP ) )
                // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8641:1:
                // ( ruleMULTOP )
                {
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8641:1:
                    // ( ruleMULTOP )
                    // ../org.erlide.erlang/src-gen/org/erlide/parser/antlr/internal/InternalErlang.g:8642:1:
                    // ruleMULTOP
                    {
                        pushFollow(FOLLOW_ruleMULTOP_in_synpred41_InternalErlang19897);
                        ruleMULTOP();

                        state._fsp--;
                        if (state.failed) {
                            return;
                        }

                    }

                }

            }

        }
    }

    // $ANTLR end synpred41_InternalErlang

    // Delegated rules

    public final boolean synpred1_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred1_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred27_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred27_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred41_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred41_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred35_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred35_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred6_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred6_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred8_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred8_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred16_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred16_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred4_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred4_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred36_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred36_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred40_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred40_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred38_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred38_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred10_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred10_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred2_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred2_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred7_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred7_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred28_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred28_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred17_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred17_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred31_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred31_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred32_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred32_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred37_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred37_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred9_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred9_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred5_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred5_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred39_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred39_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    public final boolean synpred3_InternalErlang() {
        state.backtracking++;
        final int start = input.mark();
        try {
            synpred3_InternalErlang_fragment(); // can never throw exception
        } catch (final RecognitionException re) {
            System.err.println("impossible: " + re);
        }
        final boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed = false;
        return success;
    }

    protected DFA6 dfa6 = new DFA6(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA140 dfa140 = new DFA140(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA143 dfa143 = new DFA143(this);
    static final String DFA6_eotS = "\14\uffff";
    static final String DFA6_eofS = "\14\uffff";
    static final String DFA6_minS = "\1\5\13\uffff";
    static final String DFA6_maxS = "\1\60\13\uffff";
    static final String DFA6_acceptS = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13";
    static final String DFA6_specialS = "\1\0\13\uffff}>";
    static final String[] DFA6_transitionS = {
        "\1\13\16\uffff\1\3\3\uffff\1\3\4\uffff\2\4\1\5\1\1\1\2\1\6"
                    + "\4\uffff\1\10\2\uffff\1\11\1\12\2\7\1\uffff\2\7", "",
                "", "", "", "", "", "", "", "", "", "" };

    static final short[] DFA6_eot = DFA.unpackEncodedString(DFA6_eotS);
    static final short[] DFA6_eof = DFA.unpackEncodedString(DFA6_eofS);
    static final char[] DFA6_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA6_minS);
    static final char[] DFA6_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA6_maxS);
    static final short[] DFA6_accept = DFA.unpackEncodedString(DFA6_acceptS);
    static final short[] DFA6_special = DFA.unpackEncodedString(DFA6_specialS);
    static final short[][] DFA6_transition;

    static {
        final int numStates = DFA6_transitionS.length;
        DFA6_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA6_transition[i] = DFA.unpackEncodedString(DFA6_transitionS[i]);
        }
    }

    class DFA6 extends DFA {

        public DFA6(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 6;
            eot = DFA6_eot;
            eof = DFA6_eof;
            min = DFA6_min;
            max = DFA6_max;
            accept = DFA6_accept;
            special = DFA6_special;
            transition = DFA6_transition;
        }

        @Override
        public String getDescription() {
            return "319:1: ( ( ( ( 'module' ) )=>this_ModuleAttribute_1= ruleModuleAttribute ) | ( ( ( 'encoding' ) )=>this_EncodingAttribute_2= ruleEncodingAttribute ) | this_AbstractDefineAttribute_3= ruleAbstractDefineAttribute | this_AbstractIncludeAttribute_4= ruleAbstractIncludeAttribute | ( ( ( 'file' ) )=>this_FileAttribute_5= ruleFileAttribute ) | ( ( ( 'record' ) )=>this_RecordAttribute_6= ruleRecordAttribute ) | this_AbstractTypeAttribute_7= ruleAbstractTypeAttribute | ( ( ( 'export' ) )=>this_ExportAttribute_8= ruleExportAttribute ) | ( ( ( 'import' ) )=>this_ImportAttribute_9= ruleImportAttribute ) | ( ( ( 'compile' ) )=>this_CompileAttribute_10= ruleCompileAttribute ) | this_CustomAttribute_11= ruleCustomAttribute )";
        }

        @Override
        public int specialStateTransition(int s, final IntStream _input)
                throws NoViableAltException {
            final TokenStream input = (TokenStream) _input;
            final int _s = s;
            switch (s) {
            case 0:
                final int LA6_0 = input.LA(1);

                final int index6_0 = input.index();
                input.rewind();
                s = -1;
                if (LA6_0 == 32 && synpred2_InternalErlang()) {
                    s = 1;
                }

                else if (LA6_0 == 33 && synpred3_InternalErlang()) {
                    s = 2;
                }

                else if (LA6_0 == 20 || LA6_0 == 24) {
                    s = 3;
                }

                else if (LA6_0 >= 29 && LA6_0 <= 30) {
                    s = 4;
                }

                else if (LA6_0 == 31 && synpred4_InternalErlang()) {
                    s = 5;
                }

                else if (LA6_0 == 34 && synpred5_InternalErlang()) {
                    s = 6;
                }

                else if (LA6_0 >= 44 && LA6_0 <= 45 || LA6_0 >= 47
                        && LA6_0 <= 48) {
                    s = 7;
                }

                else if (LA6_0 == 39 && synpred6_InternalErlang()) {
                    s = 8;
                }

                else if (LA6_0 == 42 && synpred7_InternalErlang()) {
                    s = 9;
                }

                else if (LA6_0 == 43 && synpred8_InternalErlang()) {
                    s = 10;
                }

                else if (LA6_0 == RULE_ATOM) {
                    s = 11;
                }

                input.seek(index6_0);
                if (s >= 0) {
                    return s;
                }
                break;
            }
            if (state.backtracking > 0) {
                state.failed = true;
                return -1;
            }
            final NoViableAltException nvae = new NoViableAltException(
                    getDescription(), 6, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    static final String DFA64_eotS = "\67\uffff";
    static final String DFA64_eofS = "\1\2\66\uffff";
    static final String DFA64_minS = "\1\4\1\0\65\uffff";
    static final String DFA64_maxS = "\1\146\1\0\65\uffff";
    static final String DFA64_acceptS = "\2\uffff\1\2\63\uffff\1\1";
    static final String DFA64_specialS = "\1\uffff\1\0\65\uffff}>";
    static final String[] DFA64_transitionS = {
        "\1\2\15\uffff\2\2\1\uffff\1\1\2\2\14\uffff\3\2\2\uffff\1\2"
                    + "\4\uffff\1\2\2\uffff\3\2\1\uffff\5\2\1\uffff\1\2\5\uffff\1\2"
                    + "\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\17\2\2\uffff\14"
                    + "\2", "\1\uffff", "", "", "", "", "", "", "", "", "", "",
                "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
                "", "", "", "", "", "", "", "", "" };

    static final short[] DFA64_eot = DFA.unpackEncodedString(DFA64_eotS);
    static final short[] DFA64_eof = DFA.unpackEncodedString(DFA64_eofS);
    static final char[] DFA64_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA64_minS);
    static final char[] DFA64_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA64_maxS);
    static final short[] DFA64_accept = DFA.unpackEncodedString(DFA64_acceptS);
    static final short[] DFA64_special = DFA
            .unpackEncodedString(DFA64_specialS);
    static final short[][] DFA64_transition;

    static {
        final int numStates = DFA64_transitionS.length;
        DFA64_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA64_transition[i] = DFA.unpackEncodedString(DFA64_transitionS[i]);
        }
    }

    class DFA64 extends DFA {

        public DFA64(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 64;
            eot = DFA64_eot;
            eof = DFA64_eof;
            min = DFA64_min;
            max = DFA64_max;
            accept = DFA64_accept;
            special = DFA64_special;
            transition = DFA64_transition;
        }

        @Override
        public String getDescription() {
            return "4045:2: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_args_2_0= ruleExpressions ) )? otherlv_3= ')' )?";
        }

        @Override
        public int specialStateTransition(int s, final IntStream _input)
                throws NoViableAltException {
            final TokenStream input = (TokenStream) _input;
            final int _s = s;
            switch (s) {
            case 0:
                final int LA64_1 = input.LA(1);

                final int index64_1 = input.index();
                input.rewind();
                s = -1;
                if (synpred32_InternalErlang()) {
                    s = 54;
                }

                else if (true) {
                    s = 2;
                }

                input.seek(index64_1);
                if (s >= 0) {
                    return s;
                }
                break;
            }
            if (state.backtracking > 0) {
                state.failed = true;
                return -1;
            }
            final NoViableAltException nvae = new NoViableAltException(
                    getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    static final String DFA83_eotS = "\30\uffff";
    static final String DFA83_eofS = "\30\uffff";
    static final String DFA83_minS = "\1\5\25\25\2\uffff";
    static final String DFA83_maxS = "\1\146\25\105\2\uffff";
    static final String DFA83_acceptS = "\26\uffff\1\1\1\2";
    static final String DFA83_specialS = "\30\uffff}>";
    static final String[] DFA83_transitionS = {
        "\1\1\1\uffff\1\26\14\uffff\1\15\1\27\2\uffff\1\11\1\4\1\5\1"
                    + "\20\1\3\1\13\1\14\1\16\1\12\1\24\1\10\4\uffff\1\21\2\uffff\1"
                    + "\22\1\23\1\2\1\17\1\uffff\1\6\1\7\2\uffff\1\26\1\25\61\uffff"
                    + "\1\26", "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26",
                "\1\27\43\uffff\1\26\13\uffff\1\26", "", "" };

    static final short[] DFA83_eot = DFA.unpackEncodedString(DFA83_eotS);
    static final short[] DFA83_eof = DFA.unpackEncodedString(DFA83_eofS);
    static final char[] DFA83_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA83_minS);
    static final char[] DFA83_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA83_maxS);
    static final short[] DFA83_accept = DFA.unpackEncodedString(DFA83_acceptS);
    static final short[] DFA83_special = DFA
            .unpackEncodedString(DFA83_specialS);
    static final short[][] DFA83_transition;

    static {
        final int numStates = DFA83_transitionS.length;
        DFA83_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA83_transition[i] = DFA.unpackEncodedString(DFA83_transitionS[i]);
        }
    }

    class DFA83 extends DFA {

        public DFA83(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 83;
            eot = DFA83_eot;
            eof = DFA83_eof;
            min = DFA83_min;
            max = DFA83_max;
            accept = DFA83_accept;
            special = DFA83_special;
            transition = DFA83_transition;
        }

        @Override
        public String getDescription() {
            return "5681:1: (this_FunRef_1= ruleFunRef | this_InlineFun_2= ruleInlineFun )";
        }
    }

    static final String DFA84_eotS = "\60\uffff";
    static final String DFA84_eofS = "\60\uffff";
    static final String DFA84_minS = "\1\5\26\71\2\5\2\uffff\25\71";
    static final String DFA84_maxS = "\1\146\26\105\2\60\2\uffff\25\105";
    static final String DFA84_acceptS = "\31\uffff\1\2\1\1\25\uffff";
    static final String DFA84_specialS = "\60\uffff}>";
    static final String[] DFA84_transitionS = {
        "\1\1\1\uffff\1\26\14\uffff\1\15\3\uffff\1\11\1\4\1\5\1\20\1"
                    + "\3\1\13\1\14\1\16\1\12\1\24\1\10\4\uffff\1\21\2\uffff\1\22\1"
                    + "\23\1\2\1\17\1\uffff\1\6\1\7\2\uffff\1\27\1\25\61\uffff\1\30",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\32\13\uffff\1\31",
                "\1\33\1\uffff\1\57\14\uffff\1\47\3\uffff\1\43\1\36\1\37\1"
                    + "\52\1\35\1\45\1\46\1\50\1\44\1\56\1\42\4\uffff\1\53\2\uffff"
                    + "\1\54\1\55\1\34\1\51\1\uffff\1\40\1\41",
                        "\1\33\1\uffff\1\57\14\uffff\1\47\3\uffff\1\43\1\36\1\37\1"
                    + "\52\1\35\1\45\1\46\1\50\1\44\1\56\1\42\4\uffff\1\53\2\uffff"
                    + "\1\54\1\55\1\34\1\51\1\uffff\1\40\1\41", "", "",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31",
                                "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31", "\1\32\13\uffff\1\31" };

    static final short[] DFA84_eot = DFA.unpackEncodedString(DFA84_eotS);
    static final short[] DFA84_eof = DFA.unpackEncodedString(DFA84_eofS);
    static final char[] DFA84_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA84_minS);
    static final char[] DFA84_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA84_maxS);
    static final short[] DFA84_accept = DFA.unpackEncodedString(DFA84_acceptS);
    static final short[] DFA84_special = DFA
            .unpackEncodedString(DFA84_specialS);
    static final short[][] DFA84_transition;

    static {
        final int numStates = DFA84_transitionS.length;
        DFA84_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA84_transition[i] = DFA.unpackEncodedString(DFA84_transitionS[i]);
        }
    }

    class DFA84 extends DFA {

        public DFA84(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 84;
            eot = DFA84_eot;
            eof = DFA84_eof;
            min = DFA84_min;
            max = DFA84_max;
            accept = DFA84_accept;
            special = DFA84_special;
            transition = DFA84_transition;
        }

        @Override
        public String getDescription() {
            return "5721:2: ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':' )?";
        }
    }

    static final String DFA91_eotS = "\31\uffff";
    static final String DFA91_eofS = "\31\uffff";
    static final String DFA91_minS = "\1\4\26\25\2\uffff";
    static final String DFA91_maxS = "\1\146\26\71\2\uffff";
    static final String DFA91_acceptS = "\27\uffff\1\2\1\1";
    static final String DFA91_specialS = "\1\uffff\1\20\1\13\1\21\1\0\1\6\1\14\1\22\1\1\1\7\1\15\1\23\1\2"
            + "\1\10\1\16\1\24\1\3\1\11\1\17\1\25\1\4\1\5\1\12\2\uffff}>";
    static final String[] DFA91_transitionS = {
        "\1\27\1\1\1\27\1\26\2\27\12\uffff\1\15\3\uffff\1\11\1\4\1\5"
                    + "\1\20\1\3\1\13\1\14\1\16\1\12\1\24\1\10\1\27\3\uffff\1\21\1"
                    + "\27\1\uffff\1\22\1\23\1\2\1\17\1\uffff\1\6\1\7\2\uffff\1\27"
                    + "\1\25\3\uffff\1\27\20\uffff\1\27\34\uffff\1\27",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30",
                "\1\27\17\uffff\1\27\13\uffff\2\27\6\uffff\1\30", "", "" };

    static final short[] DFA91_eot = DFA.unpackEncodedString(DFA91_eotS);
    static final short[] DFA91_eof = DFA.unpackEncodedString(DFA91_eofS);
    static final char[] DFA91_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA91_minS);
    static final char[] DFA91_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA91_maxS);
    static final short[] DFA91_accept = DFA.unpackEncodedString(DFA91_acceptS);
    static final short[] DFA91_special = DFA
            .unpackEncodedString(DFA91_specialS);
    static final short[][] DFA91_transition;

    static {
        final int numStates = DFA91_transitionS.length;
        DFA91_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA91_transition[i] = DFA.unpackEncodedString(DFA91_transitionS[i]);
        }
    }

    class DFA91 extends DFA {

        public DFA91(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 91;
            eot = DFA91_eot;
            eof = DFA91_eof;
            min = DFA91_min;
            max = DFA91_max;
            accept = DFA91_accept;
            special = DFA91_special;
            transition = DFA91_transition;
        }

        @Override
        public String getDescription() {
            return "6059:2: ( ( ( ( ( ruleNAMEVAR ) ) ':' ) )=> ( ( (lv_hdr_0_0= ruleNAMEVAR ) ) otherlv_1= ':' ) )?";
        }

        @Override
        public int specialStateTransition(int s, final IntStream _input)
                throws NoViableAltException {
            final TokenStream input = (TokenStream) _input;
            final int _s = s;
            switch (s) {
            case 0:
                final int LA91_4 = input.LA(1);

                final int index91_4 = input.index();
                input.rewind();
                s = -1;
                if (LA91_4 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_4 == 21 || LA91_4 == 37 || LA91_4 >= 49
                        && LA91_4 <= 50) {
                    s = 23;
                }

                input.seek(index91_4);
                if (s >= 0) {
                    return s;
                }
                break;
            case 1:
                final int LA91_8 = input.LA(1);

                final int index91_8 = input.index();
                input.rewind();
                s = -1;
                if (LA91_8 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_8 == 21 || LA91_8 == 37 || LA91_8 >= 49
                        && LA91_8 <= 50) {
                    s = 23;
                }

                input.seek(index91_8);
                if (s >= 0) {
                    return s;
                }
                break;
            case 2:
                final int LA91_12 = input.LA(1);

                final int index91_12 = input.index();
                input.rewind();
                s = -1;
                if (LA91_12 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_12 == 21 || LA91_12 == 37 || LA91_12 >= 49
                        && LA91_12 <= 50) {
                    s = 23;
                }

                input.seek(index91_12);
                if (s >= 0) {
                    return s;
                }
                break;
            case 3:
                final int LA91_16 = input.LA(1);

                final int index91_16 = input.index();
                input.rewind();
                s = -1;
                if (LA91_16 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_16 == 21 || LA91_16 == 37 || LA91_16 >= 49
                        && LA91_16 <= 50) {
                    s = 23;
                }

                input.seek(index91_16);
                if (s >= 0) {
                    return s;
                }
                break;
            case 4:
                final int LA91_20 = input.LA(1);

                final int index91_20 = input.index();
                input.rewind();
                s = -1;
                if (LA91_20 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_20 == 21 || LA91_20 == 37 || LA91_20 >= 49
                        && LA91_20 <= 50) {
                    s = 23;
                }

                input.seek(index91_20);
                if (s >= 0) {
                    return s;
                }
                break;
            case 5:
                final int LA91_21 = input.LA(1);

                final int index91_21 = input.index();
                input.rewind();
                s = -1;
                if (LA91_21 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_21 == 21 || LA91_21 == 37 || LA91_21 >= 49
                        && LA91_21 <= 50) {
                    s = 23;
                }

                input.seek(index91_21);
                if (s >= 0) {
                    return s;
                }
                break;
            case 6:
                final int LA91_5 = input.LA(1);

                final int index91_5 = input.index();
                input.rewind();
                s = -1;
                if (LA91_5 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_5 == 21 || LA91_5 == 37 || LA91_5 >= 49
                        && LA91_5 <= 50) {
                    s = 23;
                }

                input.seek(index91_5);
                if (s >= 0) {
                    return s;
                }
                break;
            case 7:
                final int LA91_9 = input.LA(1);

                final int index91_9 = input.index();
                input.rewind();
                s = -1;
                if (LA91_9 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_9 == 21 || LA91_9 == 37 || LA91_9 >= 49
                        && LA91_9 <= 50) {
                    s = 23;
                }

                input.seek(index91_9);
                if (s >= 0) {
                    return s;
                }
                break;
            case 8:
                final int LA91_13 = input.LA(1);

                final int index91_13 = input.index();
                input.rewind();
                s = -1;
                if (LA91_13 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_13 == 21 || LA91_13 == 37 || LA91_13 >= 49
                        && LA91_13 <= 50) {
                    s = 23;
                }

                input.seek(index91_13);
                if (s >= 0) {
                    return s;
                }
                break;
            case 9:
                final int LA91_17 = input.LA(1);

                final int index91_17 = input.index();
                input.rewind();
                s = -1;
                if (LA91_17 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_17 == 21 || LA91_17 == 37 || LA91_17 >= 49
                        && LA91_17 <= 50) {
                    s = 23;
                }

                input.seek(index91_17);
                if (s >= 0) {
                    return s;
                }
                break;
            case 10:
                final int LA91_22 = input.LA(1);

                final int index91_22 = input.index();
                input.rewind();
                s = -1;
                if (LA91_22 == 21 || LA91_22 == 37 || LA91_22 >= 49
                        && LA91_22 <= 50) {
                    s = 23;
                }

                else if (LA91_22 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                input.seek(index91_22);
                if (s >= 0) {
                    return s;
                }
                break;
            case 11:
                final int LA91_2 = input.LA(1);

                final int index91_2 = input.index();
                input.rewind();
                s = -1;
                if (LA91_2 == 21 || LA91_2 == 37 || LA91_2 >= 49
                        && LA91_2 <= 50) {
                    s = 23;
                }

                else if (LA91_2 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                input.seek(index91_2);
                if (s >= 0) {
                    return s;
                }
                break;
            case 12:
                final int LA91_6 = input.LA(1);

                final int index91_6 = input.index();
                input.rewind();
                s = -1;
                if (LA91_6 == 21 || LA91_6 == 37 || LA91_6 >= 49
                        && LA91_6 <= 50) {
                    s = 23;
                }

                else if (LA91_6 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                input.seek(index91_6);
                if (s >= 0) {
                    return s;
                }
                break;
            case 13:
                final int LA91_10 = input.LA(1);

                final int index91_10 = input.index();
                input.rewind();
                s = -1;
                if (LA91_10 == 21 || LA91_10 == 37 || LA91_10 >= 49
                        && LA91_10 <= 50) {
                    s = 23;
                }

                else if (LA91_10 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                input.seek(index91_10);
                if (s >= 0) {
                    return s;
                }
                break;
            case 14:
                final int LA91_14 = input.LA(1);

                final int index91_14 = input.index();
                input.rewind();
                s = -1;
                if (LA91_14 == 21 || LA91_14 == 37 || LA91_14 >= 49
                        && LA91_14 <= 50) {
                    s = 23;
                }

                else if (LA91_14 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                input.seek(index91_14);
                if (s >= 0) {
                    return s;
                }
                break;
            case 15:
                final int LA91_18 = input.LA(1);

                final int index91_18 = input.index();
                input.rewind();
                s = -1;
                if (LA91_18 == 21 || LA91_18 == 37 || LA91_18 >= 49
                        && LA91_18 <= 50) {
                    s = 23;
                }

                else if (LA91_18 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                input.seek(index91_18);
                if (s >= 0) {
                    return s;
                }
                break;
            case 16:
                final int LA91_1 = input.LA(1);

                final int index91_1 = input.index();
                input.rewind();
                s = -1;
                if (LA91_1 == 21 || LA91_1 == 37 || LA91_1 >= 49
                        && LA91_1 <= 50) {
                    s = 23;
                }

                else if (LA91_1 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                input.seek(index91_1);
                if (s >= 0) {
                    return s;
                }
                break;
            case 17:
                final int LA91_3 = input.LA(1);

                final int index91_3 = input.index();
                input.rewind();
                s = -1;
                if (LA91_3 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_3 == 21 || LA91_3 == 37 || LA91_3 >= 49
                        && LA91_3 <= 50) {
                    s = 23;
                }

                input.seek(index91_3);
                if (s >= 0) {
                    return s;
                }
                break;
            case 18:
                final int LA91_7 = input.LA(1);

                final int index91_7 = input.index();
                input.rewind();
                s = -1;
                if (LA91_7 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_7 == 21 || LA91_7 == 37 || LA91_7 >= 49
                        && LA91_7 <= 50) {
                    s = 23;
                }

                input.seek(index91_7);
                if (s >= 0) {
                    return s;
                }
                break;
            case 19:
                final int LA91_11 = input.LA(1);

                final int index91_11 = input.index();
                input.rewind();
                s = -1;
                if (LA91_11 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_11 == 21 || LA91_11 == 37 || LA91_11 >= 49
                        && LA91_11 <= 50) {
                    s = 23;
                }

                input.seek(index91_11);
                if (s >= 0) {
                    return s;
                }
                break;
            case 20:
                final int LA91_15 = input.LA(1);

                final int index91_15 = input.index();
                input.rewind();
                s = -1;
                if (LA91_15 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_15 == 21 || LA91_15 == 37 || LA91_15 >= 49
                        && LA91_15 <= 50) {
                    s = 23;
                }

                input.seek(index91_15);
                if (s >= 0) {
                    return s;
                }
                break;
            case 21:
                final int LA91_19 = input.LA(1);

                final int index91_19 = input.index();
                input.rewind();
                s = -1;
                if (LA91_19 == 57 && synpred35_InternalErlang()) {
                    s = 24;
                }

                else if (LA91_19 == 21 || LA91_19 == 37 || LA91_19 >= 49
                        && LA91_19 <= 50) {
                    s = 23;
                }

                input.seek(index91_19);
                if (s >= 0) {
                    return s;
                }
                break;
            }
            if (state.backtracking > 0) {
                state.failed = true;
                return -1;
            }
            final NoViableAltException nvae = new NoViableAltException(
                    getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    static final String DFA129_eotS = "\60\uffff";
    static final String DFA129_eofS = "\1\uffff\26\32\4\uffff\25\32";
    static final String DFA129_minS = "\1\5\26\25\2\5\2\uffff\25\25";
    static final String DFA129_maxS = "\1\146\26\105\2\60\2\uffff\25\105";
    static final String DFA129_acceptS = "\31\uffff\1\1\1\2\25\uffff";
    static final String DFA129_specialS = "\60\uffff}>";
    static final String[] DFA129_transitionS = {
        "\1\1\1\uffff\1\26\14\uffff\1\15\3\uffff\1\11\1\4\1\5\1\20\1"
                    + "\3\1\13\1\14\1\16\1\12\1\24\1\10\4\uffff\1\21\2\uffff\1\22\1"
                    + "\23\1\2\1\17\1\uffff\1\6\1\7\2\uffff\1\27\1\25\61\uffff\1\30",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\32\43\uffff\1\31\13\uffff\1\32",
                "\1\33\1\uffff\1\57\14\uffff\1\47\3\uffff\1\43\1\36\1\37\1"
                    + "\52\1\35\1\45\1\46\1\50\1\44\1\56\1\42\4\uffff\1\53\2\uffff"
                    + "\1\54\1\55\1\34\1\51\1\uffff\1\40\1\41",
                        "\1\33\1\uffff\1\57\14\uffff\1\47\3\uffff\1\43\1\36\1\37\1"
                    + "\52\1\35\1\45\1\46\1\50\1\44\1\56\1\42\4\uffff\1\53\2\uffff"
                    + "\1\54\1\55\1\34\1\51\1\uffff\1\40\1\41", "", "",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32",
                                "\1\32\43\uffff\1\31\13\uffff\1\32" };

    static final short[] DFA129_eot = DFA.unpackEncodedString(DFA129_eotS);
    static final short[] DFA129_eof = DFA.unpackEncodedString(DFA129_eofS);
    static final char[] DFA129_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA129_minS);
    static final char[] DFA129_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA129_maxS);
    static final short[] DFA129_accept = DFA
            .unpackEncodedString(DFA129_acceptS);
    static final short[] DFA129_special = DFA
            .unpackEncodedString(DFA129_specialS);
    static final short[][] DFA129_transition;

    static {
        final int numStates = DFA129_transitionS.length;
        DFA129_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA129_transition[i] = DFA
                    .unpackEncodedString(DFA129_transitionS[i]);
        }
    }

    class DFA129 extends DFA {

        public DFA129(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 129;
            eot = DFA129_eot;
            eof = DFA129_eof;
            min = DFA129_min;
            max = DFA129_max;
            accept = DFA129_accept;
            special = DFA129_special;
            transition = DFA129_transition;
        }

        @Override
        public String getDescription() {
            return "7912:2: ( ( (lv_module_0_0= ruleModuleVarMacro ) ) otherlv_1= ':' )?";
        }
    }

    static final String DFA140_eotS = "\12\uffff";
    static final String DFA140_eofS = "\1\1\11\uffff";
    static final String DFA140_minS = "\1\22\11\uffff";
    static final String DFA140_maxS = "\1\147\11\uffff";
    static final String DFA140_acceptS = "\1\uffff\1\2\10\1";
    static final String DFA140_specialS = "\1\0\11\uffff}>";
    static final String[] DFA140_transitionS = {
        "\1\1\1\3\2\uffff\2\1\14\uffff\1\1\4\uffff\1\1\4\uffff\1\1\2"
                    + "\uffff\1\1\25\uffff\1\1\5\uffff\1\2\1\4\1\5\1\6\1\7\1\10\1\11"
                    + "\23\uffff\1\1", "", "", "", "", "", "", "", "", "" };

    static final short[] DFA140_eot = DFA.unpackEncodedString(DFA140_eotS);
    static final short[] DFA140_eof = DFA.unpackEncodedString(DFA140_eofS);
    static final char[] DFA140_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA140_minS);
    static final char[] DFA140_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA140_maxS);
    static final short[] DFA140_accept = DFA
            .unpackEncodedString(DFA140_acceptS);
    static final short[] DFA140_special = DFA
            .unpackEncodedString(DFA140_specialS);
    static final short[][] DFA140_transition;

    static {
        final int numStates = DFA140_transitionS.length;
        DFA140_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA140_transition[i] = DFA
                    .unpackEncodedString(DFA140_transitionS[i]);
        }
    }

    class DFA140 extends DFA {

        public DFA140(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 140;
            eot = DFA140_eot;
            eof = DFA140_eof;
            min = DFA140_min;
            max = DFA140_max;
            accept = DFA140_accept;
            special = DFA140_special;
            transition = DFA140_transition;
        }

        @Override
        public String getDescription() {
            return "()* loopback of 8562:1: ( ( ( ( () ( ( ruleADDOP ) ) ) )=> ( () ( (lv_op_2_0= ruleADDOP ) ) ) ) ( (lv_rightOperand_3_0= ruleType400 ) ) )*";
        }

        @Override
        public int specialStateTransition(int s, final IntStream _input)
                throws NoViableAltException {
            final TokenStream input = (TokenStream) _input;
            final int _s = s;
            switch (s) {
            case 0:
                final int LA140_0 = input.LA(1);

                final int index140_0 = input.index();
                input.rewind();
                s = -1;
                if (LA140_0 == EOF || LA140_0 == 18 || LA140_0 >= 22
                        && LA140_0 <= 23 || LA140_0 == 36 || LA140_0 == 41
                        || LA140_0 == 46 || LA140_0 == 49 || LA140_0 == 71
                        || LA140_0 == 103) {
                    s = 1;
                }

                else if (LA140_0 == 77 && synpred40_InternalErlang()) {
                    s = 2;
                }

                else if (LA140_0 == 19 && synpred40_InternalErlang()) {
                    s = 3;
                }

                else if (LA140_0 == 78 && synpred40_InternalErlang()) {
                    s = 4;
                }

                else if (LA140_0 == 79 && synpred40_InternalErlang()) {
                    s = 5;
                }

                else if (LA140_0 == 80 && synpred40_InternalErlang()) {
                    s = 6;
                }

                else if (LA140_0 == 81 && synpred40_InternalErlang()) {
                    s = 7;
                }

                else if (LA140_0 == 82 && synpred40_InternalErlang()) {
                    s = 8;
                }

                else if (LA140_0 == 83 && synpred40_InternalErlang()) {
                    s = 9;
                }

                input.seek(index140_0);
                if (s >= 0) {
                    return s;
                }
                break;
            }
            if (state.backtracking > 0) {
                state.failed = true;
                return -1;
            }
            final NoViableAltException nvae = new NoViableAltException(
                    getDescription(), 140, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    static final String DFA154_eotS = "\13\uffff";
    static final String DFA154_eofS = "\3\uffff\1\12\7\uffff";
    static final String DFA154_minS = "\1\5\2\uffff\1\22\7\uffff";
    static final String DFA154_maxS = "\1\146\2\uffff\1\147\7\uffff";
    static final String DFA154_acceptS = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\3";
    static final String DFA154_specialS = "\13\uffff}>";
    static final String[] DFA154_transitionS = {
        "\1\2\1\uffff\1\3\2\4\12\uffff\1\2\1\1\2\uffff\13\2\1\6\3\uffff"
                    + "\1\2\1\5\1\uffff\4\2\1\uffff\2\2\2\uffff\2\2\3\uffff\1\7\13"
                    + "\uffff\1\11\4\uffff\1\10\34\uffff\1\2",
                "",
                "",
                "\2\12\2\uffff\2\12\14\uffff\1\12\4\uffff\1\12\4\uffff\1\12"
                    + "\2\uffff\1\12\7\uffff\1\2\13\uffff\1\12\1\uffff\1\12\2\uffff"
                    + "\1\12\2\uffff\14\12\16\uffff\1\12", "", "", "", "", "",
                        "", "" };

    static final short[] DFA154_eot = DFA.unpackEncodedString(DFA154_eotS);
    static final short[] DFA154_eof = DFA.unpackEncodedString(DFA154_eofS);
    static final char[] DFA154_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA154_minS);
    static final char[] DFA154_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA154_maxS);
    static final short[] DFA154_accept = DFA
            .unpackEncodedString(DFA154_acceptS);
    static final short[] DFA154_special = DFA
            .unpackEncodedString(DFA154_specialS);
    static final short[][] DFA154_transition;

    static {
        final int numStates = DFA154_transitionS.length;
        DFA154_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA154_transition[i] = DFA
                    .unpackEncodedString(DFA154_transitionS[i]);
        }
    }

    class DFA154 extends DFA {

        public DFA154(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 154;
            eot = DFA154_eot;
            eof = DFA154_eof;
            min = DFA154_min;
            max = DFA154_max;
            accept = DFA154_accept;
            special = DFA154_special;
            transition = DFA154_transition;
        }

        @Override
        public String getDescription() {
            return "8780:1: ( (otherlv_0= '(' this_TopType_1= ruleTopType otherlv_2= ')' ) | ( () ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':' )? ( (lv_typeName_6_0= ruleTypeRef ) ) (otherlv_7= '(' ( ( (lv_args_8_0= ruleTopType ) ) (otherlv_9= ',' ( (lv_args_10_0= ruleTopType ) ) )* )? otherlv_11= ')' )? ) | ( (lv_typeName_12_0= ruleVariableLiteral ) ) | ( (lv_value_13_0= ruleINTEGER ) ) | (otherlv_14= '[' () ( ( (lv_type_16_0= ruleTopType ) ) (otherlv_17= ',' otherlv_18= '...' )? )? otherlv_19= ']' ) | (otherlv_20= '{' () ( ( (lv_types_22_0= ruleTopType ) ) (otherlv_23= ',' ( (lv_types_24_0= ruleTopType ) ) )* )? otherlv_25= '}' ) | (otherlv_26= '#' () ( (lv_rec_28_0= ruleRecordRef ) ) otherlv_29= '{' ( ( (lv_fields_30_0= ruleFieldType ) ) (otherlv_31= ',' ( (lv_fields_32_0= ruleFieldType ) ) )* )? otherlv_33= '}' ) | this_BinaryType_34= ruleBinaryType | (otherlv_35= 'fun' () otherlv_37= '(' ( (lv_type_38_0= ruleFunType100 ) )? otherlv_39= ')' ) )";
        }
    }

    static final String DFA143_eotS = "\30\uffff";
    static final String DFA143_eofS = "\1\uffff\25\27\2\uffff";
    static final String DFA143_minS = "\1\5\25\22\2\uffff";
    static final String DFA143_maxS = "\1\146\25\147\2\uffff";
    static final String DFA143_acceptS = "\26\uffff\1\1\1\2";
    static final String DFA143_specialS = "\30\uffff}>";
    static final String[] DFA143_transitionS = {
        "\1\1\1\uffff\1\26\14\uffff\1\15\3\uffff\1\11\1\4\1\5\1\20\1"
                    + "\3\1\13\1\14\1\16\1\12\1\24\1\10\4\uffff\1\21\2\uffff\1\22\1"
                    + "\23\1\2\1\17\1\uffff\1\6\1\7\2\uffff\1\26\1\25\61\uffff\1\26",
                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                                                                        "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27",
                                                                                                                                                                                "\2\27\1\uffff\3\27\14\uffff\1\27\4\uffff\1\27\4\uffff\1\27"
                    + "\2\uffff\1\27\7\uffff\1\26\13\uffff\1\27\1\uffff\1\27\2\uffff"
                    + "\1\27\2\uffff\14\27\16\uffff\1\27", "", "" };

    static final short[] DFA143_eot = DFA.unpackEncodedString(DFA143_eotS);
    static final short[] DFA143_eof = DFA.unpackEncodedString(DFA143_eofS);
    static final char[] DFA143_min = DFA
            .unpackEncodedStringToUnsignedChars(DFA143_minS);
    static final char[] DFA143_max = DFA
            .unpackEncodedStringToUnsignedChars(DFA143_maxS);
    static final short[] DFA143_accept = DFA
            .unpackEncodedString(DFA143_acceptS);
    static final short[] DFA143_special = DFA
            .unpackEncodedString(DFA143_specialS);
    static final short[][] DFA143_transition;

    static {
        final int numStates = DFA143_transitionS.length;
        DFA143_transition = new short[numStates][];
        for (int i = 0; i < numStates; i++) {
            DFA143_transition[i] = DFA
                    .unpackEncodedString(DFA143_transitionS[i]);
        }
    }

    class DFA143 extends DFA {

        public DFA143(final BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            decisionNumber = 143;
            eot = DFA143_eot;
            eof = DFA143_eof;
            min = DFA143_min;
            max = DFA143_max;
            accept = DFA143_accept;
            special = DFA143_special;
            transition = DFA143_transition;
        }

        @Override
        public String getDescription() {
            return "8804:2: ( ( (lv_m_4_0= ruleModuleVarMacro ) ) otherlv_5= ':' )?";
        }
    }

    public static final BitSet FOLLOW_ruleModule_in_entryRuleModule75 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleModule85 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleForm_in_ruleModule130 = new BitSet(
            new long[] { 0x0019BC87FF180022L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleForm_in_entryRuleForm168 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleForm178 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleAttribute_in_ruleForm225 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunction_in_ruleForm252 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleConditionalFormBlock_in_ruleForm279 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroCall_in_ruleForm315 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleForm327 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleConditionalFormBlock_in_entryRuleConditionalFormBlock364 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleConditionalFormBlock374 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIfdefAttribute_in_ruleConditionalFormBlock420 = new BitSet(
            new long[] { 0x0019BC87FF180020L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleForm_in_ruleConditionalFormBlock441 = new BitSet(
            new long[] { 0x0019BC87FF180020L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleElseAttribute_in_ruleConditionalFormBlock474 = new BitSet(
            new long[] { 0x0019BC87FF180020L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleForm_in_ruleConditionalFormBlock495 = new BitSet(
            new long[] { 0x0019BC87FF180020L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleEndifAttribute_in_ruleConditionalFormBlock519 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleAttribute_in_entryRuleAttribute555 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleAttribute565 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_19_in_ruleAttribute602 = new BitSet(
            new long[] { 0x0001BC87E1100020L });
    public static final BitSet FOLLOW_ruleModuleAttribute_in_ruleAttribute641 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleEncodingAttribute_in_ruleAttribute685 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleAbstractDefineAttribute_in_ruleAttribute713 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleAbstractIncludeAttribute_in_ruleAttribute740 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFileAttribute_in_ruleAttribute783 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordAttribute_in_ruleAttribute827 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleAbstractTypeAttribute_in_ruleAttribute855 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExportAttribute_in_ruleAttribute898 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleImportAttribute_in_ruleAttribute942 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCompileAttribute_in_ruleAttribute986 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCustomAttribute_in_ruleAttribute1014 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleAbstractDefineAttribute_in_entryRuleAbstractDefineAttribute1052 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractDefineAttribute1062 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleDefineAttribute_in_ruleAbstractDefineAttribute1125 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleUndefAttribute_in_ruleAbstractDefineAttribute1169 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleDefineAttribute_in_entryRuleDefineAttribute1205 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleDefineAttribute1215 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_20_in_ruleDefineAttribute1273 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleDefineAttribute1298 = new BitSet(
            new long[] { 0x0011BC87FF1000A0L });
    public static final BitSet FOLLOW_ruleNAMEVAR_in_ruleDefineAttribute1319 = new BitSet(
            new long[] { 0x0000000000E00000L });
    public static final BitSet FOLLOW_21_in_ruleDefineAttribute1332 = new BitSet(
            new long[] { 0x0119BD8FFF9803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_rulePatternExpression_in_ruleDefineAttribute1354 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleDefineAttribute1367 = new BitSet(
            new long[] { 0x0119BD8FFF1803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_rulePatternExpression_in_ruleDefineAttribute1388 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_23_in_ruleDefineAttribute1404 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleDefineAttribute1419 = new BitSet(
            new long[] { 0xF539BD8FFFB803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleGuard_in_ruleDefineAttribute1440 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleDefineAttribute1455 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleDefineAttribute1467 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleUndefAttribute_in_entryRuleUndefAttribute1503 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleUndefAttribute1513 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_24_in_ruleUndefAttribute1571 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleUndefAttribute1596 = new BitSet(
            new long[] { 0x0011BC87FF1000A0L });
    public static final BitSet FOLLOW_ruleMacroRef_in_ruleUndefAttribute1617 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleUndefAttribute1629 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleUndefAttribute1641 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIfdefAttribute_in_entryRuleIfdefAttribute1677 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleIfdefAttribute1687 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_19_in_ruleIfdefAttribute1724 = new BitSet(
            new long[] { 0x0000000006000000L });
    public static final BitSet FOLLOW_25_in_ruleIfdefAttribute1778 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_26_in_ruleIfdefAttribute1807 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleIfdefAttribute1835 = new BitSet(
            new long[] { 0x0011BC87FF1000A0L });
    public static final BitSet FOLLOW_ruleMacroRef_in_ruleIfdefAttribute1856 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleIfdefAttribute1868 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleIfdefAttribute1880 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleElseAttribute_in_entryRuleElseAttribute1916 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleElseAttribute1926 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_19_in_ruleElseAttribute1963 = new BitSet(
            new long[] { 0x0000000008000000L });
    public static final BitSet FOLLOW_27_in_ruleElseAttribute1996 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleElseAttribute2021 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleEndifAttribute_in_entryRuleEndifAttribute2057 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleEndifAttribute2067 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_19_in_ruleEndifAttribute2104 = new BitSet(
            new long[] { 0x0000000010000000L });
    public static final BitSet FOLLOW_28_in_ruleEndifAttribute2137 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleEndifAttribute2162 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleAbstractIncludeAttribute_in_entryRuleAbstractIncludeAttribute2198 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractIncludeAttribute2208 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIncludeAttribute_in_ruleAbstractIncludeAttribute2271 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIncludeLibAttribute_in_ruleAbstractIncludeAttribute2315 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIncludeAttribute_in_entryRuleIncludeAttribute2351 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleIncludeAttribute2361 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_29_in_ruleIncludeAttribute2419 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleIncludeAttribute2444 = new BitSet(
            new long[] { 0x0000000000000010L });
    public static final BitSet FOLLOW_RULE_STRING_in_ruleIncludeAttribute2461 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleIncludeAttribute2478 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleIncludeAttribute2490 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIncludeLibAttribute_in_entryRuleIncludeLibAttribute2526 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleIncludeLibAttribute2536 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_30_in_ruleIncludeLibAttribute2594 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleIncludeLibAttribute2619 = new BitSet(
            new long[] { 0x0000000000000010L });
    public static final BitSet FOLLOW_RULE_STRING_in_ruleIncludeLibAttribute2636 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleIncludeLibAttribute2653 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleIncludeLibAttribute2665 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFileAttribute_in_entryRuleFileAttribute2701 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFileAttribute2711 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_31_in_ruleFileAttribute2769 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleFileAttribute2794 = new BitSet(
            new long[] { 0x0000000000000010L });
    public static final BitSet FOLLOW_RULE_STRING_in_ruleFileAttribute2811 = new BitSet(
            new long[] { 0x0000000000400000L });
    public static final BitSet FOLLOW_22_in_ruleFileAttribute2828 = new BitSet(
            new long[] { 0x0000000000000300L });
    public static final BitSet FOLLOW_ruleINTEGER_in_ruleFileAttribute2849 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleFileAttribute2861 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleFileAttribute2873 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleModuleAttribute_in_entryRuleModuleAttribute2909 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleModuleAttribute2919 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_32_in_ruleModuleAttribute2977 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleModuleAttribute3002 = new BitSet(
            new long[] { 0x0011BC87FF100020L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleModuleAttribute3023 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleModuleAttribute3035 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleModuleAttribute3047 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleEncodingAttribute_in_entryRuleEncodingAttribute3083 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleEncodingAttribute3093 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_33_in_ruleEncodingAttribute3151 = new BitSet(
            new long[] { 0x0011BC87FF300020L });
    public static final BitSet FOLLOW_21_in_ruleEncodingAttribute3178 = new BitSet(
            new long[] { 0x0011BC87FF100020L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleEncodingAttribute3199 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleEncodingAttribute3211 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleEncodingAttribute3239 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleEncodingAttribute3252 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordAttribute_in_entryRuleRecordAttribute3288 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordAttribute3298 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_34_in_ruleRecordAttribute3356 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleRecordAttribute3381 = new BitSet(
            new long[] { 0x0019BC87FF180020L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleNAMEMACRO_in_ruleRecordAttribute3402 = new BitSet(
            new long[] { 0x0000000000400000L });
    public static final BitSet FOLLOW_22_in_ruleRecordAttribute3414 = new BitSet(
            new long[] { 0x0019BC8FFF980020L, 0x0000004000000000L });
    public static final BitSet FOLLOW_35_in_ruleRecordAttribute3428 = new BitSet(
            new long[] { 0x0011BC97FF1000A0L });
    public static final BitSet FOLLOW_ruleRecordFieldDef_in_ruleRecordAttribute3450 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_22_in_ruleRecordAttribute3463 = new BitSet(
            new long[] { 0x0011BC87FF1000A0L });
    public static final BitSet FOLLOW_ruleRecordFieldDef_in_ruleRecordAttribute3484 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_36_in_ruleRecordAttribute3500 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_ruleMacroCall_in_ruleRecordAttribute3528 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleRecordAttribute3541 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleRecordAttribute3553 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordFieldDef_in_entryRuleRecordFieldDef3589 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordFieldDef3599 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAMEVAR_in_ruleRecordFieldDef3645 = new BitSet(
            new long[] { 0x0000006000000002L });
    public static final BitSet FOLLOW_37_in_ruleRecordFieldDef3658 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleRecordFieldDef3679 = new BitSet(
            new long[] { 0x0000004000000002L });
    public static final BitSet FOLLOW_38_in_ruleRecordFieldDef3694 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleRecordFieldDef3715 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExportAttribute_in_entryRuleExportAttribute3753 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExportAttribute3763 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_39_in_ruleExportAttribute3821 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleExportAttribute3846 = new BitSet(
            new long[] { 0x0000010000000000L });
    public static final BitSet FOLLOW_40_in_ruleExportAttribute3858 = new BitSet(
            new long[] { 0x0019BE87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleFunRef_in_ruleExportAttribute3880 = new BitSet(
            new long[] { 0x0000020000400000L });
    public static final BitSet FOLLOW_22_in_ruleExportAttribute3893 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleFunRef_in_ruleExportAttribute3914 = new BitSet(
            new long[] { 0x0000020000400000L });
    public static final BitSet FOLLOW_41_in_ruleExportAttribute3930 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleExportAttribute3942 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleExportAttribute3954 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleImportAttribute_in_entryRuleImportAttribute3990 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleImportAttribute4000 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_42_in_ruleImportAttribute4058 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleImportAttribute4083 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleModuleVarMacro_in_ruleImportAttribute4104 = new BitSet(
            new long[] { 0x0000000000400000L });
    public static final BitSet FOLLOW_22_in_ruleImportAttribute4116 = new BitSet(
            new long[] { 0x0000010000000000L });
    public static final BitSet FOLLOW_40_in_ruleImportAttribute4128 = new BitSet(
            new long[] { 0x0019BE87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleFunRef_in_ruleImportAttribute4150 = new BitSet(
            new long[] { 0x0000020000400000L });
    public static final BitSet FOLLOW_22_in_ruleImportAttribute4163 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleFunRef_in_ruleImportAttribute4184 = new BitSet(
            new long[] { 0x0000020000400000L });
    public static final BitSet FOLLOW_41_in_ruleImportAttribute4200 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleImportAttribute4212 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleImportAttribute4224 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCompileAttribute_in_entryRuleCompileAttribute4260 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleCompileAttribute4270 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_43_in_ruleCompileAttribute4328 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleCompileAttribute4353 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleCompileAttribute4374 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleCompileAttribute4386 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleCompileAttribute4398 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleAbstractTypeAttribute_in_entryRuleAbstractTypeAttribute4434 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleAbstractTypeAttribute4444 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleSpecAttribute_in_ruleAbstractTypeAttribute4526 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTypeAttribute_in_ruleAbstractTypeAttribute4589 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleSpecAttribute_in_entryRuleSpecAttribute4625 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleSpecAttribute4635 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_44_in_ruleSpecAttribute4714 = new BitSet(
            new long[] { 0x0019BC87FF3800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_45_in_ruleSpecAttribute4743 = new BitSet(
            new long[] { 0x0019BC87FF3800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleSpecFun_in_ruleSpecAttribute4782 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_ruleTypeSig_in_ruleSpecAttribute4803 = new BitSet(
            new long[] { 0x0000400000040000L });
    public static final BitSet FOLLOW_46_in_ruleSpecAttribute4816 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_ruleTypeSig_in_ruleSpecAttribute4837 = new BitSet(
            new long[] { 0x0000400000040000L });
    public static final BitSet FOLLOW_21_in_ruleSpecAttribute4859 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleSpecFun_in_ruleSpecAttribute4880 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_ruleTypeSig_in_ruleSpecAttribute4901 = new BitSet(
            new long[] { 0x0000400000800000L });
    public static final BitSet FOLLOW_46_in_ruleSpecAttribute4914 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_ruleTypeSig_in_ruleSpecAttribute4935 = new BitSet(
            new long[] { 0x0000400000800000L });
    public static final BitSet FOLLOW_23_in_ruleSpecAttribute4949 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleSpecAttribute4963 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTypeAttribute_in_entryRuleTypeAttribute4999 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTypeAttribute5009 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_47_in_ruleTypeAttribute5088 = new BitSet(
            new long[] { 0x0011BC87FF3000A0L });
    public static final BitSet FOLLOW_48_in_ruleTypeAttribute5117 = new BitSet(
            new long[] { 0x0011BC87FF3000A0L });
    public static final BitSet FOLLOW_ruleNAMEVAR_in_ruleTypeAttribute5156 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleTypeAttribute5168 = new BitSet(
            new long[] { 0x0119BD8FFF9803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_rulePatternExpression_in_ruleTypeAttribute5190 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleTypeAttribute5203 = new BitSet(
            new long[] { 0x0119BD8FFF1803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_rulePatternExpression_in_ruleTypeAttribute5224 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_23_in_ruleTypeAttribute5240 = new BitSet(
            new long[] { 0x0000004000000000L });
    public static final BitSet FOLLOW_38_in_ruleTypeAttribute5252 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleTypeAttribute5273 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_21_in_ruleTypeAttribute5293 = new BitSet(
            new long[] { 0x0011BC87FF1000A0L });
    public static final BitSet FOLLOW_ruleNAMEVAR_in_ruleTypeAttribute5314 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleTypeAttribute5326 = new BitSet(
            new long[] { 0x0119BD8FFF9803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_rulePatternExpression_in_ruleTypeAttribute5348 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleTypeAttribute5361 = new BitSet(
            new long[] { 0x0119BD8FFF1803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_rulePatternExpression_in_ruleTypeAttribute5382 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_23_in_ruleTypeAttribute5398 = new BitSet(
            new long[] { 0x0000004000000000L });
    public static final BitSet FOLLOW_38_in_ruleTypeAttribute5410 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleTypeAttribute5431 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleTypeAttribute5443 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleTypeAttribute5457 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCustomAttribute_in_entryRuleCustomAttribute5493 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleCustomAttribute5503 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_ATOM_in_ruleCustomAttribute5545 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleCustomAttribute5562 = new BitSet(
            new long[] { 0xF539BD8FFFB803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleCustomAttribute5584 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleCustomAttribute5597 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleCustomAttribute5618 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_23_in_ruleCustomAttribute5634 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleCustomAttribute5646 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunction_in_entryRuleFunction5682 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFunction5692 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleFunction5738 = new BitSet(
            new long[] { 0x0011BC87FF300020L });
    public static final BitSet FOLLOW_ruleFunctionClause_in_ruleFunction5759 = new BitSet(
            new long[] { 0x0000400000040000L });
    public static final BitSet FOLLOW_46_in_ruleFunction5772 = new BitSet(
            new long[] { 0x0011BC87FF300020L });
    public static final BitSet FOLLOW_ruleFunctionClause_in_ruleFunction5793 = new BitSet(
            new long[] { 0x0000400000040000L });
    public static final BitSet FOLLOW_18_in_ruleFunction5807 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunctionClause_in_entryRuleFunctionClause5843 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFunctionClause5853 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleFunctionClause5901 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleFunctionClause5914 = new BitSet(
            new long[] { 0xF539BD8FFFB803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleFunctionClause5935 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleFunctionClause5948 = new BitSet(
            new long[] { 0xF53FBD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_49_in_ruleFunctionClause5962 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleGuard_in_ruleFunctionClause5985 = new BitSet(
            new long[] { 0x0004000000000000L });
    public static final BitSet FOLLOW_50_in_ruleFunctionClause5999 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleFunctionClause6020 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleGuard_in_entryRuleGuard6056 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleGuard6066 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleGuard6112 = new BitSet(
            new long[] { 0x0000400000000002L });
    public static final BitSet FOLLOW_46_in_ruleGuard6125 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleGuard6146 = new BitSet(
            new long[] { 0x0000400000000002L });
    public static final BitSet FOLLOW_ruleExpressions_in_entryRuleExpressions6184 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpressions6194 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLExpression_in_ruleExpressions6240 = new BitSet(
            new long[] { 0x0000000000400002L });
    public static final BitSet FOLLOW_22_in_ruleExpressions6253 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleLExpression_in_ruleExpressions6274 = new BitSet(
            new long[] { 0x0000000000400002L });
    public static final BitSet FOLLOW_ruleLExpression_in_entryRuleLExpression6312 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleLExpression6322 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLineExpr_in_ruleLExpression6379 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleLExpression6400 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleLExpression6429 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLineExpr_in_entryRuleLineExpr6465 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleLineExpr6476 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_51_in_ruleLineExpr6514 = new BitSet(
            new long[] { 0x0010000000000000L });
    public static final BitSet FOLLOW_52_in_ruleLineExpr6527 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpression_in_entryRuleExpression6567 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpression6577 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_53_in_ruleExpression6624 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpression6645 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr100_in_ruleExpression6674 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr100_in_entryRuleExpr1006709 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr1006719 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr150_in_ruleExpr1006766 = new BitSet(
            new long[] { 0x0000002000000002L, 0x0000002000000000L });
    public static final BitSet FOLLOW_37_in_ruleExpr1006794 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpr100_in_ruleExpr1006828 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleSENDOP_in_ruleExpr1006866 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpr100_in_ruleExpr1006887 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr150_in_entryRuleExpr1506926 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr1506936 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr160_in_ruleExpr1506983 = new BitSet(
            new long[] { 0x0040000000000002L });
    public static final BitSet FOLLOW_54_in_ruleExpr1507010 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpr160_in_ruleExpr1507044 = new BitSet(
            new long[] { 0x0040000000000002L });
    public static final BitSet FOLLOW_ruleExpr160_in_entryRuleExpr1607082 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr1607092 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr200_in_ruleExpr1607139 = new BitSet(
            new long[] { 0x0080000000000002L });
    public static final BitSet FOLLOW_55_in_ruleExpr1607166 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpr200_in_ruleExpr1607200 = new BitSet(
            new long[] { 0x0080000000000002L });
    public static final BitSet FOLLOW_ruleExpr200_in_entryRuleExpr2007238 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr2007248 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr300_in_ruleExpr2007295 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000001FE0000000L });
    public static final BitSet FOLLOW_ruleCOMPOP_in_ruleExpr2007325 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpr300_in_ruleExpr2007346 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr300_in_entryRuleExpr3007384 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr3007394 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr400_in_ruleExpr3007441 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000018000000L });
    public static final BitSet FOLLOW_ruleLISTOP_in_ruleExpr3007471 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpr400_in_ruleExpr3007492 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000018000000L });
    public static final BitSet FOLLOW_ruleExpr400_in_entryRuleExpr4007530 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr4007540 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr500_in_ruleExpr4007587 = new BitSet(
            new long[] { 0x0000000000080002L, 0x00000000000FE000L });
    public static final BitSet FOLLOW_ruleADDOP_in_ruleExpr4007617 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpr500_in_ruleExpr4007638 = new BitSet(
            new long[] { 0x0000000000080002L, 0x00000000000FE000L });
    public static final BitSet FOLLOW_ruleExpr500_in_entryRuleExpr5007676 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr5007686 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleUnaryExpr_in_ruleExpr5007733 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000001F00020L });
    public static final BitSet FOLLOW_ruleMULTOP_in_ruleExpr5007763 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleUnaryExpr_in_ruleExpr5007784 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000001F00020L });
    public static final BitSet FOLLOW_ruleUnaryExpr_in_entryRuleUnaryExpr7822 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryExpr7832 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_rulePREFIXOP_in_ruleUnaryExpr7888 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpr700_in_ruleUnaryExpr7909 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr700_in_ruleUnaryExpr7938 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr700_in_entryRuleExpr7007973 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr7007983 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpr800_in_ruleExpr7008030 = new BitSet(
            new long[] { 0x0100000000200002L });
    public static final BitSet FOLLOW_21_in_ruleExpr7008043 = new BitSet(
            new long[] { 0xF539BD8FFFB803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleExpr7008073 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleExpr7008086 = new BitSet(
            new long[] { 0x0000000000200002L });
    public static final BitSet FOLLOW_21_in_ruleExpr7008099 = new BitSet(
            new long[] { 0xF539BD8FFFB803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleExpr7008120 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleExpr7008133 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_56_in_ruleExpr7008155 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleRecordExpr_in_ruleExpr7008185 = new BitSet(
            new long[] { 0x0100000000000002L });
    public static final BitSet FOLLOW_ruleExpr800_in_entryRuleExpr8008225 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr8008235 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExprMax_in_ruleExpr8008282 = new BitSet(
            new long[] { 0x0200000000000002L });
    public static final BitSet FOLLOW_57_in_ruleExpr8008303 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExprMax_in_ruleExpr8008324 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExprMax_in_entryRuleExprMax8362 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleExprMax8372 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTermExpression_in_ruleExprMax8419 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_21_in_ruleExprMax8437 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleExprMax8459 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleExprMax8470 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_58_in_ruleExprMax8499 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleExprMax8520 = new BitSet(
            new long[] { 0x0800000000000000L });
    public static final BitSet FOLLOW_59_in_ruleExprMax8532 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIfExpr_in_ruleExprMax8561 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCaseExpr_in_ruleExprMax8588 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleReceiveExpr_in_ruleExprMax8615 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunExpr_in_ruleExprMax8642 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTryExpr_in_ruleExprMax8669 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCondExpr_in_ruleExprMax8696 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleQueryExpr_in_ruleExprMax8723 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLetExpr_in_ruleExprMax8750 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTermExpression_in_entryRuleTermExpression8785 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTermExpression8795 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTuple_in_ruleTermExpression8842 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleListOrComprehension_in_ruleTermExpression8869 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleBinaryOrComprehension_in_ruleTermExpression8896 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_56_in_ruleTermExpression8914 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleRecordExpr_in_ruleTermExpression8936 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLiteralExpression_in_ruleTermExpression8964 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroCall_in_entryRuleMacroCall8999 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleMacroCall9009 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroLiteral_in_ruleMacroCall9055 = new BitSet(
            new long[] { 0x0000000000200002L });
    public static final BitSet FOLLOW_21_in_ruleMacroCall9076 = new BitSet(
            new long[] { 0xF539BD8FFFB803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleMacroCall9098 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleMacroCall9111 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordExpr_in_entryRuleRecordExpr9149 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordExpr9159 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordVarMacro_in_ruleRecordExpr9205 = new BitSet(
            new long[] { 0x0000000800040000L });
    public static final BitSet FOLLOW_18_in_ruleRecordExpr9219 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleRecordFieldVarMacro_in_ruleRecordExpr9240 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordTuple_in_ruleRecordExpr9268 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleQueryExpr_in_entryRuleQueryExpr9305 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleQueryExpr9315 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_60_in_ruleQueryExpr9361 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCondExpr_in_entryRuleCondExpr9397 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleCondExpr9407 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_61_in_ruleCondExpr9453 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLetExpr_in_entryRuleLetExpr9489 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleLetExpr9499 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_62_in_ruleLetExpr9545 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordTuple_in_entryRuleRecordTuple9581 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordTuple9591 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_35_in_ruleRecordTuple9637 = new BitSet(
            new long[] { 0x0019BC97FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleRecordFieldExpr_in_ruleRecordTuple9659 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_22_in_ruleRecordTuple9672 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleRecordFieldExpr_in_ruleRecordTuple9693 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_36_in_ruleRecordTuple9709 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordFieldExpr_in_entryRuleRecordFieldExpr9745 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordFieldExpr9755 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordFieldVarMacro_in_ruleRecordFieldExpr9801 = new BitSet(
            new long[] { 0x0000006000000002L });
    public static final BitSet FOLLOW_37_in_ruleRecordFieldExpr9814 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleRecordFieldExpr9835 = new BitSet(
            new long[] { 0x0000004000000002L });
    public static final BitSet FOLLOW_38_in_ruleRecordFieldExpr9850 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleRecordFieldExpr9871 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLiteralExpressionNoNumber_in_entryRuleLiteralExpressionNoNumber9909 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralExpressionNoNumber9919 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleLiteralExpressionNoNumber9975 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleLiteralExpressionNoNumber10004 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_CHAR_in_ruleLiteralExpressionNoNumber10036 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroLiteral_in_ruleLiteralExpressionNoNumber10070 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleStringLiteral_in_ruleLiteralExpressionNoNumber10097 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleModuleRef_in_entryRuleModuleRef10132 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleModuleRef10142 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleModuleRef10199 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunctionRef_in_entryRuleFunctionRef10235 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFunctionRef10245 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleFunctionRef10302 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordRef_in_entryRuleRecordRef10338 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordRef10348 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleRecordRef10405 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordFieldRef_in_entryRuleRecordFieldRef10441 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordFieldRef10451 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleRecordFieldRef10508 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTypeRef_in_entryRuleTypeRef10544 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTypeRef10554 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_ruleTypeRef10611 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroLiteral_in_entryRuleMacroLiteral10647 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleMacroLiteral10657 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMACRO_in_ruleMacroLiteral10714 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroRef_in_entryRuleMacroRef10750 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleMacroRef10760 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAMEVAR_in_ruleMacroRef10817 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_entryRuleVariableLiteral10853 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleVariableLiteral10863 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_VARIABLE_in_ruleVariableLiteral10917 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleStringLiteral_in_entryRuleStringLiteral10953 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleStringLiteral10963 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleStringLiteralLiteral_in_ruleStringLiteral11009 = new BitSet(
            new long[] { 0x0019BC87FF1800F2L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleStringLiteralPart_in_ruleStringLiteral11030 = new BitSet(
            new long[] { 0x0019BC87FF1800F2L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleStringLiteralPart_in_entryRuleStringLiteralPart11067 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleStringLiteralPart11077 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleStringLiteralLiteral_in_ruleStringLiteralPart11124 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroCall_in_ruleStringLiteralPart11150 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleStringLiteralLiteral_in_entryRuleStringLiteralLiteral11186 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleStringLiteralLiteral11196 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_STRING_in_ruleStringLiteralLiteral11237 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLiteralExpression_in_entryRuleLiteralExpression11277 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteralExpression11287 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLiteralExpressionNoNumber_in_ruleLiteralExpression11334 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_ruleLiteralExpression11361 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFLOAT_in_ruleLiteralExpression11397 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_entryRuleIntegerLiteral11434 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleIntegerLiteral11444 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleINTEGER_in_ruleIntegerLiteral11499 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_rulePatternExpression_in_entryRulePatternExpression11535 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRulePatternExpression11545 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTermExpression_in_rulePatternExpression11592 = new BitSet(
            new long[] { 0x0000002000200002L });
    public static final BitSet FOLLOW_37_in_rulePatternExpression11620 = new BitSet(
            new long[] { 0x0119BD8FFF1803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_ruleTermExpression_in_rulePatternExpression11654 = new BitSet(
            new long[] { 0x0000002000000002L });
    public static final BitSet FOLLOW_21_in_rulePatternExpression11684 = new BitSet(
            new long[] { 0xF539BD8FFFB803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_rulePatternExpression11705 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_rulePatternExpression11718 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIfExpr_in_entryRuleIfExpr11757 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleIfExpr11767 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_63_in_ruleIfExpr11804 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleIfClause_in_ruleIfExpr11825 = new BitSet(
            new long[] { 0x0800400000000000L });
    public static final BitSet FOLLOW_46_in_ruleIfExpr11838 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleIfClause_in_ruleIfExpr11859 = new BitSet(
            new long[] { 0x0800400000000000L });
    public static final BitSet FOLLOW_59_in_ruleIfExpr11873 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIfClause_in_entryRuleIfClause11909 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleIfClause11919 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleGuard_in_ruleIfClause11965 = new BitSet(
            new long[] { 0x0004000000000000L });
    public static final BitSet FOLLOW_50_in_ruleIfClause11977 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleIfClause11998 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCaseExpr_in_entryRuleCaseExpr12034 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleCaseExpr12044 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_64_in_ruleCaseExpr12081 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleCaseExpr12102 = new BitSet(
            new long[] { 0x0000000000000000L, 0x0000000000000002L });
    public static final BitSet FOLLOW_65_in_ruleCaseExpr12114 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleCrClause_in_ruleCaseExpr12135 = new BitSet(
            new long[] { 0x0800400000000000L });
    public static final BitSet FOLLOW_46_in_ruleCaseExpr12148 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleCrClause_in_ruleCaseExpr12169 = new BitSet(
            new long[] { 0x0800400000000000L });
    public static final BitSet FOLLOW_59_in_ruleCaseExpr12183 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCrClause_in_entryRuleCrClause12219 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleCrClause12229 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleCrClause12275 = new BitSet(
            new long[] { 0x0006000000000000L });
    public static final BitSet FOLLOW_49_in_ruleCrClause12288 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleGuard_in_ruleCrClause12309 = new BitSet(
            new long[] { 0x0004000000000000L });
    public static final BitSet FOLLOW_50_in_ruleCrClause12323 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleCrClause12344 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleReceiveExpr_in_entryRuleReceiveExpr12380 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleReceiveExpr12390 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_66_in_ruleReceiveExpr12427 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x000000400600225DL });
    public static final BitSet FOLLOW_ruleCrClause_in_ruleReceiveExpr12450 = new BitSet(
            new long[] { 0x0800400000000000L, 0x0000000000000008L });
    public static final BitSet FOLLOW_46_in_ruleReceiveExpr12463 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleCrClause_in_ruleReceiveExpr12484 = new BitSet(
            new long[] { 0x0800400000000000L, 0x0000000000000008L });
    public static final BitSet FOLLOW_67_in_ruleReceiveExpr12499 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleReceiveExpr12520 = new BitSet(
            new long[] { 0x0004000000000000L });
    public static final BitSet FOLLOW_50_in_ruleReceiveExpr12532 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleReceiveExpr12553 = new BitSet(
            new long[] { 0x0800000000000000L });
    public static final BitSet FOLLOW_67_in_ruleReceiveExpr12575 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleReceiveExpr12596 = new BitSet(
            new long[] { 0x0004000000000000L });
    public static final BitSet FOLLOW_50_in_ruleReceiveExpr12608 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleReceiveExpr12629 = new BitSet(
            new long[] { 0x0800000000000000L });
    public static final BitSet FOLLOW_59_in_ruleReceiveExpr12643 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunExpr_in_entryRuleFunExpr12679 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFunExpr12689 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_68_in_ruleFunExpr12726 = new BitSet(
            new long[] { 0x0019BC87FF3800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleFunRef_in_ruleFunExpr12749 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleInlineFun_in_ruleFunExpr12776 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunRef_in_entryRuleFunRef12812 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFunRef12822 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleModuleVarMacro_in_ruleFunRef12869 = new BitSet(
            new long[] { 0x0200000000000000L });
    public static final BitSet FOLLOW_57_in_ruleFunRef12881 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleFunctionVarMacro_in_ruleFunRef12904 = new BitSet(
            new long[] { 0x0000000000000000L, 0x0000000000000020L });
    public static final BitSet FOLLOW_69_in_ruleFunRef12916 = new BitSet(
            new long[] { 0x0019BC87FF1803A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleIntVarMacro_in_ruleFunRef12937 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleInlineFun_in_entryRuleInlineFun12973 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleInlineFun12983 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunctionClause_in_ruleInlineFun13029 = new BitSet(
            new long[] { 0x0800400000000000L });
    public static final BitSet FOLLOW_46_in_ruleInlineFun13042 = new BitSet(
            new long[] { 0x0011BC87FF300020L });
    public static final BitSet FOLLOW_ruleFunctionClause_in_ruleInlineFun13063 = new BitSet(
            new long[] { 0x0800400000000000L });
    public static final BitSet FOLLOW_59_in_ruleInlineFun13077 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTryExpr_in_entryRuleTryExpr13113 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTryExpr13123 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_70_in_ruleTryExpr13160 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleTryExpr13181 = new BitSet(
            new long[] { 0x0020000000000000L, 0x000000000000000AL });
    public static final BitSet FOLLOW_65_in_ruleTryExpr13194 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleCrClause_in_ruleTryExpr13215 = new BitSet(
            new long[] { 0x0020400000000000L, 0x0000000000000008L });
    public static final BitSet FOLLOW_46_in_ruleTryExpr13228 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleCrClause_in_ruleTryExpr13249 = new BitSet(
            new long[] { 0x0020400000000000L, 0x0000000000000008L });
    public static final BitSet FOLLOW_53_in_ruleTryExpr13267 = new BitSet(
            new long[] { 0x0119BD8FFF1803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_ruleTryClause_in_ruleTryExpr13306 = new BitSet(
            new long[] { 0x0800400000000000L, 0x0000000000000008L });
    public static final BitSet FOLLOW_46_in_ruleTryExpr13319 = new BitSet(
            new long[] { 0x0119BD8FFF1803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_ruleTryClause_in_ruleTryExpr13358 = new BitSet(
            new long[] { 0x0800400000000000L, 0x0000000000000008L });
    public static final BitSet FOLLOW_67_in_ruleTryExpr13373 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleTryExpr13394 = new BitSet(
            new long[] { 0x0800000000000000L });
    public static final BitSet FOLLOW_67_in_ruleTryExpr13416 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleTryExpr13437 = new BitSet(
            new long[] { 0x0800000000000000L });
    public static final BitSet FOLLOW_59_in_ruleTryExpr13451 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTryClause_in_entryRuleTryClause13487 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTryClause13497 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAMEVAR_in_ruleTryClause13563 = new BitSet(
            new long[] { 0x0200000000000000L });
    public static final BitSet FOLLOW_57_in_ruleTryClause13575 = new BitSet(
            new long[] { 0x0119BD8FFF1803F0L, 0x0000004000000200L });
    public static final BitSet FOLLOW_rulePatternExpression_in_ruleTryClause13599 = new BitSet(
            new long[] { 0x0006000000000000L });
    public static final BitSet FOLLOW_49_in_ruleTryClause13612 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleGuard_in_ruleTryClause13633 = new BitSet(
            new long[] { 0x0004000000000000L });
    public static final BitSet FOLLOW_50_in_ruleTryClause13647 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpressions_in_ruleTryClause13668 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleListOrComprehension_in_entryRuleListOrComprehension13704 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleListOrComprehension13714 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_40_in_ruleListOrComprehension13751 = new BitSet(
            new long[] { 0xF539BF8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleListOrComprehension13789 = new BitSet(
            new long[] { 0x0000020000400000L, 0x0000000000000180L });
    public static final BitSet FOLLOW_22_in_ruleListOrComprehension13802 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleListOrComprehension13823 = new BitSet(
            new long[] { 0x0000020000400000L, 0x0000000000000180L });
    public static final BitSet FOLLOW_71_in_ruleListOrComprehension13839 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleListOrComprehension13860 = new BitSet(
            new long[] { 0x0000020000000000L });
    public static final BitSet FOLLOW_72_in_ruleListOrComprehension13889 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleLCExpr_in_ruleListOrComprehension13910 = new BitSet(
            new long[] { 0x0000020000400000L });
    public static final BitSet FOLLOW_22_in_ruleListOrComprehension13923 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleLCExpr_in_ruleListOrComprehension13944 = new BitSet(
            new long[] { 0x0000020000400000L });
    public static final BitSet FOLLOW_41_in_ruleListOrComprehension13963 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTuple_in_entryRuleTuple13999 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTuple14009 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_35_in_ruleTuple14046 = new BitSet(
            new long[] { 0xF539BD9FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleTuple14084 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_22_in_ruleTuple14097 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleTuple14118 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_36_in_ruleTuple14134 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleBinaryOrComprehension_in_entryRuleBinaryOrComprehension14170 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleBinaryOrComprehension14180 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_73_in_ruleBinaryOrComprehension14217 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002655L });
    public static final BitSet FOLLOW_ruleBinaryItem_in_ruleBinaryOrComprehension14255 = new BitSet(
            new long[] { 0x0000000000400000L, 0x0000000000000500L });
    public static final BitSet FOLLOW_22_in_ruleBinaryOrComprehension14268 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002655L });
    public static final BitSet FOLLOW_ruleBinaryItem_in_ruleBinaryOrComprehension14289 = new BitSet(
            new long[] { 0x0000000000400000L, 0x0000000000000500L });
    public static final BitSet FOLLOW_72_in_ruleBinaryOrComprehension14313 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleLCExpr_in_ruleBinaryOrComprehension14334 = new BitSet(
            new long[] { 0x0000000000400000L, 0x0000000000000400L });
    public static final BitSet FOLLOW_22_in_ruleBinaryOrComprehension14347 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleLCExpr_in_ruleBinaryOrComprehension14368 = new BitSet(
            new long[] { 0x0000000000400000L, 0x0000000000000400L });
    public static final BitSet FOLLOW_74_in_ruleBinaryOrComprehension14386 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleBinaryItem_in_entryRuleBinaryItem14422 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleBinaryItem14432 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleUnaryExprMax_in_ruleBinaryItem14478 = new BitSet(
            new long[] { 0x0200000000000002L, 0x0000000000000020L });
    public static final BitSet FOLLOW_57_in_ruleBinaryItem14499 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExprMax_in_ruleBinaryItem14521 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000000000020L });
    public static final BitSet FOLLOW_69_in_ruleBinaryItem14544 = new BitSet(
            new long[] { 0x0019BC87FF180020L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleBitType_in_ruleBinaryItem14566 = new BitSet(
            new long[] { 0x0000000000080002L });
    public static final BitSet FOLLOW_19_in_ruleBinaryItem14579 = new BitSet(
            new long[] { 0x0019BC87FF180020L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleBitType_in_ruleBinaryItem14600 = new BitSet(
            new long[] { 0x0000000000080002L });
    public static final BitSet FOLLOW_ruleBitType_in_entryRuleBitType14640 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleBitType14650 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAMEMACRO_in_ruleBitType14698 = new BitSet(
            new long[] { 0x0200000000000002L });
    public static final BitSet FOLLOW_57_in_ruleBitType14711 = new BitSet(
            new long[] { 0x0019BC87FF1803A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleIntVarMacro_in_ruleBitType14732 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleUnaryExprMax_in_entryRuleUnaryExprMax14770 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryExprMax14780 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_rulePREFIXOP_in_ruleUnaryExprMax14836 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExprMax_in_ruleUnaryExprMax14857 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExprMax_in_ruleUnaryExprMax14886 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLCExpr_in_entryRuleLCExpr14921 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleLCExpr14931 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleLCExpr14977 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000000001800L });
    public static final BitSet FOLLOW_75_in_ruleLCExpr14998 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_76_in_ruleLCExpr15027 = new BitSet(
            new long[] { 0xF539BD8FFF3803F0L, 0x0000004006002255L });
    public static final BitSet FOLLOW_ruleExpression_in_ruleLCExpr15064 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleADDOP_in_entryRuleADDOP15103 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleADDOP15114 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_77_in_ruleADDOP15152 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_19_in_ruleADDOP15171 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_78_in_ruleADDOP15190 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_79_in_ruleADDOP15209 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_80_in_ruleADDOP15228 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_81_in_ruleADDOP15247 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_82_in_ruleADDOP15266 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_83_in_ruleADDOP15285 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMULTOP_in_entryRuleMULTOP15326 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleMULTOP15337 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_84_in_ruleMULTOP15375 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_69_in_ruleMULTOP15394 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_85_in_ruleMULTOP15413 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_86_in_ruleMULTOP15432 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_87_in_ruleMULTOP15451 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_88_in_ruleMULTOP15470 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_rulePREFIXOP_in_entryRulePREFIXOP15511 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRulePREFIXOP15522 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_77_in_rulePREFIXOP15560 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_19_in_rulePREFIXOP15579 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_89_in_rulePREFIXOP15598 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_90_in_rulePREFIXOP15617 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLISTOP_in_entryRuleLISTOP15658 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleLISTOP15669 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_91_in_ruleLISTOP15707 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_92_in_ruleLISTOP15726 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleCOMPOP_in_entryRuleCOMPOP15767 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleCOMPOP15778 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_93_in_ruleCOMPOP15816 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_94_in_ruleCOMPOP15835 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_95_in_ruleCOMPOP15854 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_96_in_ruleCOMPOP15873 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_97_in_ruleCOMPOP15892 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_98_in_ruleCOMPOP15911 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_99_in_ruleCOMPOP15930 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_100_in_ruleCOMPOP15949 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleSENDOP_in_entryRuleSENDOP15990 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleSENDOP16001 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_101_in_ruleSENDOP16038 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleModuleVarMacro_in_entryRuleModuleVarMacro16077 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleModuleVarMacro16087 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleModuleRef_in_ruleModuleVarMacro16134 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleModuleVarMacro16161 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroLiteral_in_ruleModuleVarMacro16188 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunctionVarMacro_in_entryRuleFunctionVarMacro16223 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFunctionVarMacro16233 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunctionRef_in_ruleFunctionVarMacro16280 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleFunctionVarMacro16307 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroLiteral_in_ruleFunctionVarMacro16334 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordVarMacro_in_entryRuleRecordVarMacro16369 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordVarMacro16379 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordRef_in_ruleRecordVarMacro16426 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleRecordVarMacro16453 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroLiteral_in_ruleRecordVarMacro16480 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordFieldVarMacro_in_entryRuleRecordFieldVarMacro16515 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleRecordFieldVarMacro16525 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleRecordFieldRef_in_ruleRecordFieldVarMacro16572 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleRecordFieldVarMacro16599 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroLiteral_in_ruleRecordFieldVarMacro16626 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIntVarMacro_in_entryRuleIntVarMacro16663 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleIntVarMacro16673 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleIntegerLiteral_in_ruleIntVarMacro16720 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleIntVarMacro16747 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMacroLiteral_in_ruleIntVarMacro16774 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAME_in_entryRuleNAME16810 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleNAME16821 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_ATOM_in_ruleNAME16861 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleKW_in_ruleNAME16894 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAMEVAR_in_entryRuleNAMEVAR16940 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleNAMEVAR16951 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_ATOM_in_ruleNAMEVAR16991 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleKW_in_ruleNAMEVAR17024 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_VARIABLE_in_ruleNAMEVAR17050 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMACRO_in_entryRuleMACRO17096 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleMACRO17107 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_51_in_ruleMACRO17146 = new BitSet(
            new long[] { 0x0001BC87FF1000A0L });
    public static final BitSet FOLLOW_102_in_ruleMACRO17165 = new BitSet(
            new long[] { 0x0001BC87FF1000A0L });
    public static final BitSet FOLLOW_RULE_ATOM_in_ruleMACRO17182 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleKW1_in_ruleMACRO17215 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_VARIABLE_in_ruleMACRO17241 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAMEMACRO_in_entryRuleNAMEMACRO17290 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleNAMEMACRO17301 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_ATOM_in_ruleNAMEMACRO17341 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleKW_in_ruleNAMEMACRO17374 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMACRO_in_ruleNAMEMACRO17407 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleKW_in_entryRuleKW17453 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleKW17464 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleKW1_in_ruleKW17511 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_52_in_ruleKW17535 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleKW1_in_entryRuleKW117576 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleKW117587 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_44_in_ruleKW117625 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_28_in_ruleKW117644 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_25_in_ruleKW117663 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_26_in_ruleKW117682 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_47_in_ruleKW117701 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_48_in_ruleKW117720 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_34_in_ruleKW117739 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_24_in_ruleKW117758 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_32_in_ruleKW117777 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_29_in_ruleKW117796 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_30_in_ruleKW117815 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_20_in_ruleKW117834 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_31_in_ruleKW117853 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_45_in_ruleKW117872 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_27_in_ruleKW117891 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_39_in_ruleKW117910 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_42_in_ruleKW117929 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_43_in_ruleKW117948 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_33_in_ruleKW117967 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleINTEGER_in_entryRuleINTEGER18010 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleINTEGER18021 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_INT_in_ruleINTEGER18061 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_BASED_INT_in_ruleINTEGER18087 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFLOAT_in_entryRuleFLOAT18139 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFLOAT18150 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_INT_in_ruleFLOAT18194 = new BitSet(
            new long[] { 0x0000000000040000L });
    public static final BitSet FOLLOW_18_in_ruleFLOAT18212 = new BitSet(
            new long[] { 0x0000000000000500L });
    public static final BitSet FOLLOW_RULE_EXT_INT_in_ruleFLOAT18228 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_INT_in_ruleFLOAT18254 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleSpecFun_in_entryRuleSpecFun18304 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleSpecFun18314 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleModuleVarMacro_in_ruleSpecFun18361 = new BitSet(
            new long[] { 0x0200000000000000L });
    public static final BitSet FOLLOW_57_in_ruleSpecFun18373 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleFunctionVarMacro_in_ruleSpecFun18396 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000000000020L });
    public static final BitSet FOLLOW_69_in_ruleSpecFun18409 = new BitSet(
            new long[] { 0x0019BC87FF1803A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleIntVarMacro_in_ruleSpecFun18430 = new BitSet(
            new long[] { 0x0000004000000000L });
    public static final BitSet FOLLOW_38_in_ruleSpecFun18442 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTypeSig_in_entryRuleTypeSig18480 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTypeSig18490 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunType_in_ruleTypeSig18536 = new BitSet(
            new long[] { 0x0002000000000002L });
    public static final BitSet FOLLOW_49_in_ruleTypeSig18549 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleTypeGuards_in_ruleTypeSig18570 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunType_in_entryRuleFunType18608 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFunType18618 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_21_in_ruleFunType18655 = new BitSet(
            new long[] { 0x0119BD8FFFB803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleFunType18677 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleFunType18690 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleFunType18711 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_23_in_ruleFunType18727 = new BitSet(
            new long[] { 0x0004000000000000L });
    public static final BitSet FOLLOW_50_in_ruleFunType18739 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleFunType18760 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTypeGuards_in_entryRuleTypeGuards18796 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTypeGuards18806 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTypeGuard_in_ruleTypeGuards18852 = new BitSet(
            new long[] { 0x0000000000400002L });
    public static final BitSet FOLLOW_22_in_ruleTypeGuards18865 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleTypeGuard_in_ruleTypeGuards18886 = new BitSet(
            new long[] { 0x0000000000400002L });
    public static final BitSet FOLLOW_ruleTypeGuard_in_entryRuleTypeGuard18924 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTypeGuard18934 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTypeRef_in_ruleTypeGuard18981 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleTypeGuard18993 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleTypeGuard19014 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleTypeGuard19027 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleTypeGuard19048 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_23_in_ruleTypeGuard19062 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleTypeGuard19091 = new BitSet(
            new long[] { 0x0000004000000000L });
    public static final BitSet FOLLOW_38_in_ruleTypeGuard19103 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleTypeGuard19124 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleTopType_in_entryRuleTopType19161 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleTopType19171 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_VARIABLE_in_ruleTopType19214 = new BitSet(
            new long[] { 0x0000004000000000L });
    public static final BitSet FOLLOW_38_in_ruleTopType19231 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleType100_in_ruleTopType19254 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleType100_in_entryRuleType10019290 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleType10019300 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleType200_in_ruleType10019347 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000000000080L });
    public static final BitSet FOLLOW_71_in_ruleType10019398 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleType200_in_ruleType10019434 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000000000080L });
    public static final BitSet FOLLOW_ruleType200_in_entryRuleType20019472 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleType20019482 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleType300_in_ruleType20019529 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000008000000000L });
    public static final BitSet FOLLOW_103_in_ruleType20019580 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleType300_in_ruleType20019616 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000008000000000L });
    public static final BitSet FOLLOW_ruleType300_in_entryRuleType30019654 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleType30019664 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleType400_in_ruleType30019711 = new BitSet(
            new long[] { 0x0000000000080002L, 0x00000000000FE000L });
    public static final BitSet FOLLOW_ruleADDOP_in_ruleType30019760 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleType400_in_ruleType30019783 = new BitSet(
            new long[] { 0x0000000000080002L, 0x00000000000FE000L });
    public static final BitSet FOLLOW_ruleType400_in_entryRuleType40019821 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleType40019831 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleType500_in_ruleType40019878 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000001F00020L });
    public static final BitSet FOLLOW_ruleMULTOP_in_ruleType40019927 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleType500_in_ruleType40019950 = new BitSet(
            new long[] { 0x0000000000000002L, 0x0000000001F00020L });
    public static final BitSet FOLLOW_ruleType500_in_entryRuleType50019988 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleType50019998 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_rulePREFIXOP_in_ruleType50020054 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleType_in_ruleType50020075 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleType_in_ruleType50020104 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleType_in_entryRuleType20139 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleType20149 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_21_in_ruleType20187 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleType20209 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleType20220 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleModuleVarMacro_in_ruleType20259 = new BitSet(
            new long[] { 0x0200000000000000L });
    public static final BitSet FOLLOW_57_in_ruleType20271 = new BitSet(
            new long[] { 0x0019BC87FF1800A0L, 0x0000004000000000L });
    public static final BitSet FOLLOW_ruleTypeRef_in_ruleType20294 = new BitSet(
            new long[] { 0x0000000000200002L });
    public static final BitSet FOLLOW_21_in_ruleType20307 = new BitSet(
            new long[] { 0x0119BD8FFFB803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleType20329 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleType20342 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleType20363 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_23_in_ruleType20379 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleType20409 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleINTEGER_in_ruleType20436 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_40_in_ruleType20455 = new BitSet(
            new long[] { 0x0119BF8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleType20486 = new BitSet(
            new long[] { 0x0000020000400000L });
    public static final BitSet FOLLOW_22_in_ruleType20499 = new BitSet(
            new long[] { 0x0000000000000000L, 0x0000010000000000L });
    public static final BitSet FOLLOW_104_in_ruleType20511 = new BitSet(
            new long[] { 0x0000020000000000L });
    public static final BitSet FOLLOW_41_in_ruleType20527 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_35_in_ruleType20547 = new BitSet(
            new long[] { 0x0119BD9FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleType20578 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_22_in_ruleType20591 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleType20612 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_36_in_ruleType20628 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_56_in_ruleType20648 = new BitSet(
            new long[] { 0x0011BC87FF100020L });
    public static final BitSet FOLLOW_ruleRecordRef_in_ruleType20678 = new BitSet(
            new long[] { 0x0000000800000000L });
    public static final BitSet FOLLOW_35_in_ruleType20690 = new BitSet(
            new long[] { 0x0000001000000020L });
    public static final BitSet FOLLOW_ruleFieldType_in_ruleType20712 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_22_in_ruleType20725 = new BitSet(
            new long[] { 0x0000000000000020L });
    public static final BitSet FOLLOW_ruleFieldType_in_ruleType20746 = new BitSet(
            new long[] { 0x0000001000400000L });
    public static final BitSet FOLLOW_36_in_ruleType20762 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleBinaryType_in_ruleType20791 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_68_in_ruleType20809 = new BitSet(
            new long[] { 0x0000000000200000L });
    public static final BitSet FOLLOW_21_in_ruleType20830 = new BitSet(
            new long[] { 0x0000000000A00000L });
    public static final BitSet FOLLOW_ruleFunType100_in_ruleType20851 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_23_in_ruleType20864 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFieldType_in_entryRuleFieldType20901 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFieldType20911 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_RULE_ATOM_in_ruleFieldType20956 = new BitSet(
            new long[] { 0x0000004000000000L });
    public static final BitSet FOLLOW_38_in_ruleFieldType20968 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleFieldType20989 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleBinaryType_in_entryRuleBinaryType21025 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleBinaryType21035 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_73_in_ruleBinaryType21072 = new BitSet(
            new long[] { 0x0000000000000080L, 0x0000000000000400L });
    public static final BitSet FOLLOW_ruleBinBaseType_in_ruleBinaryType21104 = new BitSet(
            new long[] { 0x0000000000400000L, 0x0000000000000400L });
    public static final BitSet FOLLOW_22_in_ruleBinaryType21117 = new BitSet(
            new long[] { 0x0000000000000080L });
    public static final BitSet FOLLOW_ruleBinUnitType_in_ruleBinaryType21138 = new BitSet(
            new long[] { 0x0000000000000000L, 0x0000000000000400L });
    public static final BitSet FOLLOW_ruleBinUnitType_in_ruleBinaryType21168 = new BitSet(
            new long[] { 0x0000000000000000L, 0x0000000000000400L });
    public static final BitSet FOLLOW_74_in_ruleBinaryType21182 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleBinBaseType_in_entryRuleBinBaseType21218 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleBinBaseType21228 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleBinBaseType21274 = new BitSet(
            new long[] { 0x0200000000000000L });
    public static final BitSet FOLLOW_57_in_ruleBinBaseType21286 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleType_in_ruleBinBaseType21307 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleBinUnitType_in_entryRuleBinUnitType21343 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleBinUnitType21353 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleVariableLiteral_in_ruleBinUnitType21399 = new BitSet(
            new long[] { 0x0200000000000000L });
    public static final BitSet FOLLOW_57_in_ruleBinUnitType21411 = new BitSet(
            new long[] { 0x0000000000000080L });
    public static final BitSet FOLLOW_RULE_VARIABLE_in_ruleBinUnitType21428 = new BitSet(
            new long[] { 0x0000000000000000L, 0x0000000000100000L });
    public static final BitSet FOLLOW_84_in_ruleBinUnitType21445 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleType_in_ruleBinUnitType21466 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleFunType100_in_entryRuleFunType10021502 = new BitSet(
            new long[] { 0x0000000000000000L });
    public static final BitSet FOLLOW_EOF_in_entryRuleFunType10021512 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_21_in_ruleFunType10021558 = new BitSet(
            new long[] { 0x0119BD8FFFB803A0L, 0x0000014006002210L });
    public static final BitSet FOLLOW_104_in_ruleFunType10021571 = new BitSet(
            new long[] { 0x0000000000800000L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleFunType10021599 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_22_in_ruleFunType10021612 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleFunType10021633 = new BitSet(
            new long[] { 0x0000000000C00000L });
    public static final BitSet FOLLOW_23_in_ruleFunType10021650 = new BitSet(
            new long[] { 0x0004000000000000L });
    public static final BitSet FOLLOW_50_in_ruleFunType10021662 = new BitSet(
            new long[] { 0x0119BD8FFF3803A0L, 0x0000004006002210L });
    public static final BitSet FOLLOW_ruleTopType_in_ruleFunType10021683 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleElseAttribute_in_synpred1_InternalErlang457 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_32_in_synpred2_InternalErlang618 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_33_in_synpred3_InternalErlang662 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_31_in_synpred4_InternalErlang760 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_34_in_synpred5_InternalErlang804 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_39_in_synpred6_InternalErlang875 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_42_in_synpred7_InternalErlang919 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_43_in_synpred8_InternalErlang963 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_20_in_synpred9_InternalErlang1102 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_24_in_synpred10_InternalErlang1146 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_29_in_synpred16_InternalErlang2248 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_30_in_synpred17_InternalErlang2292 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_set_in_synpred27_InternalErlang4483 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_set_in_synpred28_InternalErlang4546 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleLineExpr_in_synpred31_InternalErlang6362 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_21_in_synpred32_InternalErlang9068 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleNAMEVAR_in_synpred35_InternalErlang13538 = new BitSet(
            new long[] { 0x0200000000000000L });
    public static final BitSet FOLLOW_57_in_synpred35_InternalErlang13544 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_57_in_synpred36_InternalErlang14491 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_69_in_synpred37_InternalErlang14536 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_71_in_synpred38_InternalErlang19367 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_103_in_synpred39_InternalErlang19549 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleADDOP_in_synpred40_InternalErlang19730 = new BitSet(
            new long[] { 0x0000000000000002L });
    public static final BitSet FOLLOW_ruleMULTOP_in_synpred41_InternalErlang19897 = new BitSet(
            new long[] { 0x0000000000000002L });

}
