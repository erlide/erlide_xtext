<?xml version="1.0" encoding="ASCII"?>
<xtext:Grammar xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xtext="http://www.eclipse.org/2008/Xtext" name="org.erlide.Erlang" definesHiddenTokens="true" hiddenTokens="//@rules.100 //@rules.99">
  <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
    <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
  </metamodelDeclarations>
  <metamodelDeclarations xsi:type="xtext:GeneratedMetamodel" name="erlang">
    <ePackage href="http://www.erlide.org/Erlang#/"/>
  </metamodelDeclarations>
  <rules xsi:type="xtext:ParserRule" name="Module">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Module"/>
    </type>
    <alternatives xsi:type="xtext:Assignment" cardinality="*" feature="forms" operator="+=">
      <terminal xsi:type="xtext:RuleCall" rule="//@rules.2"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="AtomRefTarget">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//AtomRefTarget"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.0"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.27"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.18"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.19"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Form">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Form"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.4"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.27"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.3"/>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//MacroForm"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="call" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.46"/>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ConditionalFormBlock">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ConditionalFormBlock"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="condition" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.9"/>
      </elements>
      <elements xsi:type="xtext:Assignment" cardinality="*" feature="ifForms" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.2"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" predicated="true" feature="hasElse" operator="?=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.10"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="elseForms" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.2"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="end" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.11"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Attribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Attribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="-"/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="//@rules.16"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.17"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.6"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.12"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.15"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.18"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.23"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.20"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.21"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.22"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.26"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ConditionalAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ConditionalAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.9"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.10"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.11"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="AbstractDefineAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//AbstractDefineAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.7"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.8"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="DefineAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//DefineAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="define"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="macroName" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.91"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.62"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.62"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value=","/>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="value" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.29"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="UndefAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//UndefAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="undef"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.56"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="IfdefAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//IfdefAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Keyword" value="ifdef"/>
          <elements xsi:type="xtext:Keyword" value="ifndef"/>
        </terminal>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.56"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ElseAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ElseAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="else"/>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="EndifAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//EndifAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="endif"/>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="AbstractIncludeAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//AbstractIncludeAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.13"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.14"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="IncludeAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//IncludeAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="include"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="importURI" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.97"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="IncludeLibAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//IncludeLibAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="include_lib"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="importURI" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.97"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="FileAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FileAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="file"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="file" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.97"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=","/>
      <elements xsi:type="xtext:Assignment" feature="line" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.102"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ModuleAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ModuleAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="module"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="moduleName" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="EncodingAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//EncodingAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="encoding"/>
      </elements>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="charset" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="charset" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="RecordAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RecordAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="record"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="name" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.91"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=","/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="{"/>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Assignment" feature="fields" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.19"/>
            </elements>
            <elements xsi:type="xtext:Group" cardinality="*">
              <elements xsi:type="xtext:Keyword" value=","/>
              <elements xsi:type="xtext:Assignment" feature="fields" operator="+=">
                <terminal xsi:type="xtext:RuleCall" rule="//@rules.19"/>
              </elements>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="}"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="recordMacro" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.46"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="RecordFieldDef">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RecordFieldDef"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="name" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.91"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="value" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="::"/>
        <elements xsi:type="xtext:Assignment" feature="type" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ExportAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ExportAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="export"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Keyword" value="["/>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="funs" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.69"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value=","/>
          <elements xsi:type="xtext:Assignment" feature="funs" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.69"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="]"/>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ImportAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ImportAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="import"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="module" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=","/>
      <elements xsi:type="xtext:Keyword" value="["/>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="funs" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.69"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value=","/>
          <elements xsi:type="xtext:Assignment" feature="funs" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.69"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="]"/>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="CompileAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//CompileAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Keyword" value="compile"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" feature="options" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="AbstractTypeAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//AbstractTypeAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.24"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.25"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="SpecAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//SpecAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Keyword" value="spec"/>
          <elements xsi:type="xtext:Keyword" value="callback"/>
        </terminal>
      </elements>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.112"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="signatures" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.113"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=";"/>
            <elements xsi:type="xtext:Assignment" feature="signatures" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.113"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.112"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="signatures" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.113"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=";"/>
            <elements xsi:type="xtext:Assignment" feature="signatures" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.113"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="TypeAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TypeAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" predicated="true" feature="tag" operator="=">
        <terminal xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Keyword" value="type"/>
          <elements xsi:type="xtext:Keyword" value="opaque"/>
        </terminal>
      </elements>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="name" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.91"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.62"/>
            </elements>
            <elements xsi:type="xtext:Group" cardinality="*">
              <elements xsi:type="xtext:Keyword" value=","/>
              <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
                <terminal xsi:type="xtext:RuleCall" rule="//@rules.62"/>
              </elements>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
          <elements xsi:type="xtext:Keyword" value="::"/>
          <elements xsi:type="xtext:Assignment" feature="type" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="name" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.91"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.62"/>
            </elements>
            <elements xsi:type="xtext:Group" cardinality="*">
              <elements xsi:type="xtext:Keyword" value=","/>
              <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
                <terminal xsi:type="xtext:RuleCall" rule="//@rules.62"/>
              </elements>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
          <elements xsi:type="xtext:Keyword" value="::"/>
          <elements xsi:type="xtext:Assignment" feature="type" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="CustomAttribute">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//CustomAttribute"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="tag" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.96"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="value" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value=","/>
          <elements xsi:type="xtext:Assignment" feature="value" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Function">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Function"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="name" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.28"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=";"/>
        <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.28"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.101"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="FunctionClause">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunctionClause"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" cardinality="?" feature="ref" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Assignment" cardinality="?" feature="params" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="when"/>
        <elements xsi:type="xtext:Assignment" feature="guard" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.29"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="->"/>
      <elements xsi:type="xtext:Assignment" feature="body" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Guard">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Guard"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="guards" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=";"/>
        <elements xsi:type="xtext:Assignment" feature="guards" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expressions">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expressions"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="exprs" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.31"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=","/>
        <elements xsi:type="xtext:Assignment" feature="exprs" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.31"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="LExpression">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" predicated="true" feature="line" operator="?=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.32"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="expr" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.33"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="LineExpr">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="?"/>
      <elements xsi:type="xtext:Keyword" value="line"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expression">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//CatchExpr"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="catch"/>
        <elements xsi:type="xtext:Assignment" feature="expr" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.34"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr100">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.35"/>
      <elements xsi:type="xtext:Alternatives" cardinality="?">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
            <type metamodel="//@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//MatchExpr"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="op" operator="=">
            <terminal xsi:type="xtext:Keyword" value="="/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="opRight" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.34"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
            <type metamodel="//@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinOp"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="op" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.87"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="opRight" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.34"/>
          </elements>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr150">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.36"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinOp"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:Keyword" value="orelse"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="opRight" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.36"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr160">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.37"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinOp"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:Keyword" value="andalso"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="opRight2" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.37"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr200">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.38"/>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinOp"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.86"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="opRight" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.38"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr300">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.39"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinOp"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.85"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="opRight" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.39"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr400">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.40"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//AddOp"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.82"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="opRight" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.40"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr500">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.41"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//MultOp"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.83"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="opRight" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.41"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="UnaryExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//UnaryExpr"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.84"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="operand" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.42"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.42"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr700">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.43"/>
      <elements xsi:type="xtext:Alternatives" cardinality="?">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Action" feature="target" operator="=">
            <type metamodel="//@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunCall"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" cardinality="?" feature="args" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value="("/>
            <elements xsi:type="xtext:Assignment" cardinality="?" feature="args2" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
            </elements>
            <elements xsi:type="xtext:Keyword" value=")"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="+">
          <elements xsi:type="xtext:Keyword" value="#"/>
          <elements xsi:type="xtext:Action" feature="ref" operator="=">
            <type metamodel="//@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RecordExpr"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="record" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.47"/>
          </elements>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Expr800">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.44"/>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Action" feature="module" operator="=">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RemoteTarget"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="function" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.44"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ExprMax">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.45"/>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.33"/>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BlockExpr"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="begin"/>
        <elements xsi:type="xtext:Assignment" feature="body" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="end"/>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.63"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.65"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.67"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.68"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.71"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.49"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.48"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.50"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="TermExpression">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.75"/>
      <elements xsi:type="xtext:RuleCall" predicated="true" rule="//@rules.74"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.73"/>
      <elements xsi:type="xtext:RuleCall" predicated="true" rule="//@rules.76"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.77"/>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="#"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.47"/>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.60"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="MacroCall">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//MacroCall"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="macroName" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.55"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" predicated="true" value="("/>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="args" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="RecordExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RecordExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="rec" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
      </elements>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:Assignment" feature="field" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="tuple" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.51"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="QueryExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//QueryExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//QueryExpr"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Keyword" value="query"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="CondExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//CondExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//CondExpr"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Keyword" value="cond"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="LetExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//LetExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//LetExpr"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Keyword" value="let"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="RecordTuple">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RecordTuple"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RecordTuple"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Keyword" value="{"/>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="fields" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.52"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value=","/>
          <elements xsi:type="xtext:Assignment" feature="fields" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.52"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="}"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="RecordFieldExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RecordFieldExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="value" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="::"/>
        <elements xsi:type="xtext:Assignment" feature="type" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="LiteralExpressionNoNumber">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.54"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.57"/>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlChar"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="value" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.107"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.55"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.58"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="AtomRefLiteral">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Atom"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//AtomRefTarget"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
        </terminal>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="MacroLiteral">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Macro"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//DefineAttribute"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.92"/>
        </terminal>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="MacroRef">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Macro"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//DefineAttribute"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.91"/>
        </terminal>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="VariableLiteral">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Variable"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.98"/>
        </terminal>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="StringLiteral">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="string" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.97"/>
      </elements>
      <elements xsi:type="xtext:Assignment" cardinality="*" feature="more" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.59"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="StringLiteralPart">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//StringLiteralPart"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Assignment" feature="string" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.97"/>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="macro" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.46"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="LiteralExpression">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.53"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.61"/>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlFloat"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="value" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.105"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="IntegerLiteral">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlInteger"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.102"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="PatternExpression">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.45"/>
      <elements xsi:type="xtext:Alternatives" cardinality="?">
        <elements xsi:type="xtext:Group" cardinality="+">
          <elements xsi:type="xtext:Action" feature="opLeft" operator="=">
            <type metamodel="//@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//MatchExpr"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="op" operator="=">
            <terminal xsi:type="xtext:Keyword" value="="/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="opRight" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.45"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action" feature="target" operator="=">
            <type metamodel="//@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunCall"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" cardinality="?" feature="args" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="IfExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//IfExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="if"/>
      <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.64"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=";"/>
        <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.64"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="end"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="IfClause">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//IfClause"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="guard" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.29"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="->"/>
      <elements xsi:type="xtext:Assignment" feature="body" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="CaseExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//CaseExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="case"/>
      <elements xsi:type="xtext:Assignment" feature="expr" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="of"/>
      <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.66"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=";"/>
        <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.66"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="end"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="CrClause">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//CrClause"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="expr" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="when"/>
        <elements xsi:type="xtext:Assignment" feature="guard" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.29"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="->"/>
      <elements xsi:type="xtext:Assignment" feature="body" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ReceiveExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ReceiveExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="receive"/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.66"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=";"/>
            <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.66"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value="after"/>
            <elements xsi:type="xtext:Assignment" feature="after_expr" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
            </elements>
            <elements xsi:type="xtext:Keyword" value="->"/>
            <elements xsi:type="xtext:Assignment" feature="after_body" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="after"/>
          <elements xsi:type="xtext:Assignment" feature="after_expr" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="->"/>
          <elements xsi:type="xtext:Assignment" feature="after_body" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="end"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="FunExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="fun"/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="//@rules.69"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.70"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="FunRef">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunRef"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="module" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="function" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="/"/>
      <elements xsi:type="xtext:Assignment" feature="arity" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.89"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="InlineFun">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.28"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=";"/>
        <elements xsi:type="xtext:Assignment" feature="clauses" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.28"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="end"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="TryExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TryExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="try"/>
      <elements xsi:type="xtext:Assignment" feature="body" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="of"/>
        <elements xsi:type="xtext:Assignment" feature="of_clauses" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.66"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value=";"/>
          <elements xsi:type="xtext:Assignment" feature="of_clauses" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.66"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="catch"/>
          <elements xsi:type="xtext:Assignment" feature="catch" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.72"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=";"/>
            <elements xsi:type="xtext:Assignment" feature="catch" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.72"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value="after"/>
            <elements xsi:type="xtext:Assignment" feature="after_body" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="after"/>
          <elements xsi:type="xtext:Assignment" feature="after_body" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="end"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="TryClause">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TryClause"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Group" cardinality="?" predicated="true">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="hdr" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.91"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=":"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="cond" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.62"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="when"/>
        <elements xsi:type="xtext:Assignment" feature="guard" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.29"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="->"/>
      <elements xsi:type="xtext:Assignment" feature="body" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.30"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="List">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlList"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="["/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlList"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="elements" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="elements" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value="|"/>
            <elements xsi:type="xtext:Assignment" feature="tail" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
            </elements>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="]"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ListComprehension">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ListComprehension"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="["/>
      <elements xsi:type="xtext:Assignment" feature="element" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="||"/>
      <elements xsi:type="xtext:Assignment" feature="generators" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.81"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=","/>
        <elements xsi:type="xtext:Assignment" feature="generators" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.81"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="]"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Tuple">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlTuple"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="{"/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlTuple"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="elements" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="elements" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
            </elements>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value="}"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="BinaryComprehension">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinaryComprehension"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="&lt;&lt;"/>
      <elements xsi:type="xtext:Assignment" feature="expr" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.45"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="||"/>
      <elements xsi:type="xtext:Assignment" feature="generators" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.81"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=","/>
        <elements xsi:type="xtext:Assignment" feature="generators" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.81"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value=">>"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Binary">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlBinary"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="&lt;&lt;"/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ErlBinary"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="elements" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.78"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="elements" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.78"/>
            </elements>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value=">>"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="BinaryItem">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinaryItem"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="expr" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.80"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" predicated="true" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="size" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.44"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" predicated="true" value="/"/>
        <elements xsi:type="xtext:Assignment" feature="types" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.79"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value="-"/>
          <elements xsi:type="xtext:Assignment" feature="type" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.79"/>
          </elements>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="BitType">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BitType"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="typeName" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value=":"/>
        <elements xsi:type="xtext:Assignment" feature="size" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.104"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="UnaryExprMax">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//UnaryExpr"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.84"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="operand" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.44"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.44"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="LCExpr">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//LCExpr"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="o1" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="&lt;-"/>
            <elements xsi:type="xtext:Keyword" value="&lt;="/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="o2" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.33"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="ADDOP">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Keyword" value="+"/>
      <elements xsi:type="xtext:Keyword" value="-"/>
      <elements xsi:type="xtext:Keyword" value="bor"/>
      <elements xsi:type="xtext:Keyword" value="bxor"/>
      <elements xsi:type="xtext:Keyword" value="bsl"/>
      <elements xsi:type="xtext:Keyword" value="bsr"/>
      <elements xsi:type="xtext:Keyword" value="or"/>
      <elements xsi:type="xtext:Keyword" value="xor"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="MULTOP">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Keyword" value="*"/>
      <elements xsi:type="xtext:Keyword" value="/"/>
      <elements xsi:type="xtext:Keyword" value="div"/>
      <elements xsi:type="xtext:Keyword" value="rem"/>
      <elements xsi:type="xtext:Keyword" value="band"/>
      <elements xsi:type="xtext:Keyword" value="and"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="PREFIXOP">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Keyword" value="+"/>
      <elements xsi:type="xtext:Keyword" value="-"/>
      <elements xsi:type="xtext:Keyword" value="bnot"/>
      <elements xsi:type="xtext:Keyword" value="not"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="LISTOP">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Keyword" value="++"/>
      <elements xsi:type="xtext:Keyword" value="--"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="COMPOP">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Keyword" value="=="/>
      <elements xsi:type="xtext:Keyword" value="/="/>
      <elements xsi:type="xtext:Keyword" value="=&lt;"/>
      <elements xsi:type="xtext:Keyword" value="&lt;"/>
      <elements xsi:type="xtext:Keyword" value=">="/>
      <elements xsi:type="xtext:Keyword" value=">"/>
      <elements xsi:type="xtext:Keyword" value="=:="/>
      <elements xsi:type="xtext:Keyword" value="=/="/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="SENDOP">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Keyword" value="!"/>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="AtomVarMacro">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.54"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.57"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.55"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="IntVarMacro">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Expression"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.61"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.57"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.55"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="NAME">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.96"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.93"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="NAMEVAR">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.96"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.93"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.98"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="MACRO">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Keyword" value="?"/>
        <elements xsi:type="xtext:Keyword" value="??"/>
      </elements>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="//@rules.96"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.94"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.98"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="KW">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.94"/>
      <elements xsi:type="xtext:Keyword" value="line"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="KW1">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Keyword" value="spec"/>
      <elements xsi:type="xtext:Keyword" value="endif"/>
      <elements xsi:type="xtext:Keyword" value="ifdef"/>
      <elements xsi:type="xtext:Keyword" value="ifndef"/>
      <elements xsi:type="xtext:Keyword" value="type"/>
      <elements xsi:type="xtext:Keyword" value="opaque"/>
      <elements xsi:type="xtext:Keyword" value="record"/>
      <elements xsi:type="xtext:Keyword" value="undef"/>
      <elements xsi:type="xtext:Keyword" value="module"/>
      <elements xsi:type="xtext:Keyword" value="include"/>
      <elements xsi:type="xtext:Keyword" value="include_lib"/>
      <elements xsi:type="xtext:Keyword" value="define"/>
      <elements xsi:type="xtext:Keyword" value="file"/>
      <elements xsi:type="xtext:Keyword" value="callback"/>
      <elements xsi:type="xtext:Keyword" value="else"/>
      <elements xsi:type="xtext:Keyword" value="export"/>
      <elements xsi:type="xtext:Keyword" value="import"/>
      <elements xsi:type="xtext:Keyword" value="compile"/>
      <elements xsi:type="xtext:Keyword" value="encoding"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="RealKw">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Keyword" value="after"/>
      <elements xsi:type="xtext:Keyword" value="and"/>
      <elements xsi:type="xtext:Keyword" value="andalso"/>
      <elements xsi:type="xtext:Keyword" value="band"/>
      <elements xsi:type="xtext:Keyword" value="begin"/>
      <elements xsi:type="xtext:Keyword" value="bnot"/>
      <elements xsi:type="xtext:Keyword" value="bor"/>
      <elements xsi:type="xtext:Keyword" value="bsl"/>
      <elements xsi:type="xtext:Keyword" value="bsr"/>
      <elements xsi:type="xtext:Keyword" value="bxor"/>
      <elements xsi:type="xtext:Keyword" value="case"/>
      <elements xsi:type="xtext:Keyword" value="catch"/>
      <elements xsi:type="xtext:Keyword" value="cond"/>
      <elements xsi:type="xtext:Keyword" value="div"/>
      <elements xsi:type="xtext:Keyword" value="end"/>
      <elements xsi:type="xtext:Keyword" value="fun"/>
      <elements xsi:type="xtext:Keyword" value="if"/>
      <elements xsi:type="xtext:Keyword" value="let"/>
      <elements xsi:type="xtext:Keyword" value="not"/>
      <elements xsi:type="xtext:Keyword" value="of"/>
      <elements xsi:type="xtext:Keyword" value="or"/>
      <elements xsi:type="xtext:Keyword" value="orelse"/>
      <elements xsi:type="xtext:Keyword" value="query"/>
      <elements xsi:type="xtext:Keyword" value="receive"/>
      <elements xsi:type="xtext:Keyword" value="rem"/>
      <elements xsi:type="xtext:Keyword" value="try"/>
      <elements xsi:type="xtext:Keyword" value="when"/>
      <elements xsi:type="xtext:Keyword" value="xor"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="ATOM">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="//@rules.109"/>
        <elements xsi:type="xtext:RuleCall" cardinality="*" rule="//@rules.108"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="'"/>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value="\"/>
            <elements xsi:type="xtext:RuleCall" rule="//@rules.110"/>
          </elements>
          <elements xsi:type="xtext:NegatedToken">
            <terminal xsi:type="xtext:Alternatives">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Keyword" value="'"/>
            </terminal>
          </elements>
        </elements>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Keyword" value="'"/>
          <elements xsi:type="xtext:EOF"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="STRING">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="&quot;"/>
      <elements xsi:type="xtext:Alternatives" cardinality="*">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="\"/>
          <elements xsi:type="xtext:RuleCall" rule="//@rules.110"/>
        </elements>
        <elements xsi:type="xtext:NegatedToken">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="\"/>
            <elements xsi:type="xtext:Keyword" value="&quot;"/>
          </terminal>
        </elements>
      </elements>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Keyword" value="&quot;"/>
        <elements xsi:type="xtext:EOF"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="VARIABLE">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:CharacterRange">
          <left value="A"/>
          <right value="Z"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="_"/>
        <elements xsi:type="xtext:CharacterRange">
          <left value="&#xc0;"/>
          <right value="&#xd6;"/>
        </elements>
        <elements xsi:type="xtext:CharacterRange">
          <left value="&#xd8;"/>
          <right value="&#xde;"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" cardinality="*" rule="//@rules.108"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="SL_COMMENT">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="%"/>
      <elements xsi:type="xtext:NegatedToken" cardinality="*">
        <terminal xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
          <elements xsi:type="xtext:Keyword" value="&#xD;"/>
        </terminal>
      </elements>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" cardinality="?" value="&#xD;"/>
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
        </elements>
        <elements xsi:type="xtext:EOF"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="WS">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:NegatedToken" cardinality="+">
      <terminal xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:CharacterRange">
          <left value="!"/>
          <right value="~"/>
        </elements>
        <elements xsi:type="xtext:CharacterRange">
          <left value="&#xa1;"/>
          <right value="&#xff;"/>
        </elements>
      </terminal>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="FULL_STOP">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="."/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="//@rules.100"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.99"/>
        <elements xsi:type="xtext:EOF"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="INTEGER">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.104"/>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.103"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="BASED_INT">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:CharacterRange" cardinality="?">
        <left value="1"/>
        <right value="3"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="0"/>
        <right value="9"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="#"/>
      <elements xsi:type="xtext:Alternatives" cardinality="+">
        <elements xsi:type="xtext:CharacterRange">
          <left value="0"/>
          <right value="9"/>
        </elements>
        <elements xsi:type="xtext:CharacterRange">
          <left value="a"/>
          <right value="z"/>
        </elements>
        <elements xsi:type="xtext:CharacterRange">
          <left value="A"/>
          <right value="Z"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="INT">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:CharacterRange" cardinality="+">
      <left value="0"/>
      <right value="9"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="FLOAT" definesHiddenTokens="true">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.104"/>
      <elements xsi:type="xtext:Keyword" value="."/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="//@rules.106"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.104"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="EXT_INT">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.104"/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Keyword" value="e"/>
        <elements xsi:type="xtext:Keyword" value="E"/>
      </elements>
      <elements xsi:type="xtext:Alternatives" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="+"/>
        <elements xsi:type="xtext:Keyword" value="-"/>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.104"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="CHAR">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="$"/>
      <elements xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="\"/>
          <elements xsi:type="xtext:RuleCall" rule="//@rules.110"/>
        </elements>
        <elements xsi:type="xtext:Wildcard"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="IN_WORD_CHAR" fragment="true">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:CharacterRange">
        <left value="a"/>
        <right value="z"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="A"/>
        <right value="Z"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="_"/>
      <elements xsi:type="xtext:Keyword" value="@"/>
      <elements xsi:type="xtext:CharacterRange">
        <left value="0"/>
        <right value="9"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="&#xdf;"/>
        <right value="&#xf6;"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="&#xf8;"/>
        <right value="&#xff;"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="&#xc0;"/>
        <right value="&#xd6;"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="&#xd8;"/>
        <right value="&#xde;"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="ATOM_STARTER" fragment="true">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:CharacterRange">
        <left value="a"/>
        <right value="z"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="&#xdf;"/>
        <right value="&#xf6;"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="&#xf8;"/>
        <right value="&#xff;"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="ESCAPE" fragment="true">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Keyword" value="b"/>
      <elements xsi:type="xtext:Keyword" value="d"/>
      <elements xsi:type="xtext:Keyword" value="e"/>
      <elements xsi:type="xtext:Keyword" value="f"/>
      <elements xsi:type="xtext:Keyword" value="n"/>
      <elements xsi:type="xtext:Keyword" value="r"/>
      <elements xsi:type="xtext:Keyword" value="s"/>
      <elements xsi:type="xtext:Keyword" value="t"/>
      <elements xsi:type="xtext:Keyword" value="v"/>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:CharacterRange">
          <left value="0"/>
          <right value="7"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="7"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange" cardinality="?">
            <left value="0"/>
            <right value="7"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Keyword" value="x"/>
          <elements xsi:type="xtext:Keyword" value="X"/>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.111"/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.111"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Keyword" value="x"/>
          <elements xsi:type="xtext:Keyword" value="X"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:RuleCall" cardinality="+" rule="//@rules.111"/>
        <elements xsi:type="xtext:Keyword" value="}"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="]"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Wildcard"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:TerminalRule" name="HEX_DIGIT" fragment="true">
    <type metamodel="//@metamodelDeclarations.0">
      <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:CharacterRange">
        <left value="0"/>
        <right value="9"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="A"/>
        <right value="F"/>
      </elements>
      <elements xsi:type="xtext:CharacterRange">
        <left value="a"/>
        <right value="f"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="SpecFun">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunRef"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="module" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":"/>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="function" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="/"/>
        <elements xsi:type="xtext:Assignment" feature="arity" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.89"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="::"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="TypeSig">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TypeSig"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="decl" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.114"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="when"/>
        <elements xsi:type="xtext:Assignment" feature="guards" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.115"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="FunType">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunType"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value=","/>
          <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:Keyword" value="->"/>
      <elements xsi:type="xtext:Assignment" feature="return" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="TypeGuards">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TypeGuards"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="items" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.116"/>
      </elements>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Keyword" value=","/>
        <elements xsi:type="xtext:Assignment" feature="items" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.116"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="TypeGuard">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TypeGuard"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="typeName" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="types" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value=","/>
          <elements xsi:type="xtext:Assignment" feature="types" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="typeName" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.98"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="::"/>
        <elements xsi:type="xtext:Assignment" feature="type" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="TopType">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TopType"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Group" cardinality="?">
        <elements xsi:type="xtext:Assignment" feature="var" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.98"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="::"/>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="type" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.118"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Type100">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Type100"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.119"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Group" predicated="true">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Action" feature="leftOperand" operator="=">
              <type metamodel="//@metamodelDeclarations.1">
                <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TopType"/>
              </type>
            </elements>
            <elements xsi:type="xtext:Assignment" feature="op" operator="=">
              <terminal xsi:type="xtext:Keyword" value="|"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="rightOperand" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.119"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Type200">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Type200"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.120"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Group" predicated="true">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Action" feature="leftOperand" operator="=">
              <type metamodel="//@metamodelDeclarations.1">
                <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TopType"/>
              </type>
            </elements>
            <elements xsi:type="xtext:Assignment" feature="op" operator="=">
              <terminal xsi:type="xtext:Keyword" value=".."/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="rightOperand" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.120"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Type300">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Type300"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.121"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Group" predicated="true">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Action" feature="leftOperand" operator="=">
              <type metamodel="//@metamodelDeclarations.1">
                <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TopType"/>
              </type>
            </elements>
            <elements xsi:type="xtext:Assignment" feature="op" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.82"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="rightOperand" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.121"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Type400">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Type400"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:RuleCall" rule="//@rules.122"/>
      <elements xsi:type="xtext:Group" cardinality="*">
        <elements xsi:type="xtext:Group" predicated="true">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Action" feature="leftOperand" operator="=">
              <type metamodel="//@metamodelDeclarations.1">
                <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TopType"/>
              </type>
            </elements>
            <elements xsi:type="xtext:Assignment" feature="op" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.83"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="rightOperand" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.122"/>
        </elements>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Type500">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Type500"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//UnaryType"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="op" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.84"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="operand" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.123"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.123"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="Type">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//Type"/>
    </type>
    <alternatives xsi:type="xtext:Alternatives">
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:RuleCall" rule="//@rules.117"/>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RemoteType"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Assignment" feature="m" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.88"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=":"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="typeName" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
            </elements>
            <elements xsi:type="xtext:Group" cardinality="*">
              <elements xsi:type="xtext:Keyword" value=","/>
              <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
                <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
              </elements>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="typeName" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.98"/>
      </elements>
      <elements xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.102"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="["/>
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//ListType"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Assignment" feature="type" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Keyword" value="..."/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="]"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//TupleType"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Assignment" feature="types" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="types" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
      </elements>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="#"/>
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//RecordType"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="rec" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Assignment" feature="fields" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.124"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="fields" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.124"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
      </elements>
      <elements xsi:type="xtext:RuleCall" rule="//@rules.125"/>
      <elements xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="fun"/>
        <elements xsi:type="xtext:Action">
          <type metamodel="//@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunType"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="type" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.128"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="FieldType">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FieldType"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="typeName" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.90"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="::"/>
      <elements xsi:type="xtext:Assignment" feature="type" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="BinaryType">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinaryType"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Keyword" value="&lt;&lt;"/>
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinaryType"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Alternatives" cardinality="?">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="type" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.126"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="type" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.127"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="type" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="//@rules.127"/>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value=">>"/>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="BinBaseType">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinBaseType"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="typeName" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.98"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=":"/>
      <elements xsi:type="xtext:Assignment" feature="type" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.123"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="BinUnitType">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//BinUnitType"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Assignment" feature="typeName" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.98"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value=":"/>
      <elements xsi:type="xtext:Assignment" feature="m" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.98"/>
      </elements>
      <elements xsi:type="xtext:Keyword" value="*"/>
      <elements xsi:type="xtext:Assignment" feature="type" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.123"/>
      </elements>
    </alternatives>
  </rules>
  <rules xsi:type="xtext:ParserRule" name="FunType100">
    <type metamodel="//@metamodelDeclarations.1">
      <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunType100"/>
    </type>
    <alternatives xsi:type="xtext:Group">
      <elements xsi:type="xtext:Action">
        <type metamodel="//@metamodelDeclarations.1">
          <classifier xsi:type="ecore:EClass" href="http://www.erlide.org/Erlang#//FunTypeList"/>
        </type>
      </elements>
      <elements xsi:type="xtext:Keyword" value="("/>
      <elements xsi:type="xtext:Alternatives" cardinality="?">
        <elements xsi:type="xtext:Keyword" value="..."/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Assignment" feature="items" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="items" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
            </elements>
          </elements>
        </elements>
      </elements>
      <elements xsi:type="xtext:Keyword" value=")"/>
      <elements xsi:type="xtext:Keyword" value="->"/>
      <elements xsi:type="xtext:Assignment" feature="return" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="//@rules.117"/>
      </elements>
    </alternatives>
  </rules>
</xtext:Grammar>
